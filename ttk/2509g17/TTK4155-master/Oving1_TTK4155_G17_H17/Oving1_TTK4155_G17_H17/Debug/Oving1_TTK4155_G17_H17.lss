
Oving1_TTK4155_G17_H17.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002c4  00800100  00001bd8  00001c6c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001bd8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000008d  008003c4  008003c4  00001f30  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001f30  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000338  00000000  00000000  00001f8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003bc9  00000000  00000000  000022c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000fe2  00000000  00000000  00005e8d  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00001190  00000000  00000000  00006e6f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000ab8  00000000  00000000  00008000  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000c34  00000000  00000000  00008ab8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00002aef  00000000  00000000  000096ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000310  00000000  00000000  0000c1db  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
       4:	0c 94 b0 00 	jmp	0x160	; 0x160 <__vector_1>
       8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__vector_2>
       c:	0c 94 30 02 	jmp	0x460	; 0x460 <__vector_3>
      10:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      14:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      18:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      1c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      20:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      24:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      28:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      2c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      30:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      34:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      38:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      3c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      40:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      44:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      48:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      4c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      50:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      54:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      58:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      5c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      60:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      64:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      68:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      6c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	43 61       	ori	r20, 0x13	; 19
      72:	6c 69       	ori	r22, 0x9C	; 156
      74:	62 72       	andi	r22, 0x22	; 34
      76:	61 74       	andi	r22, 0x41	; 65
      78:	65 00       	.word	0x0065	; ????

0000007a <debug_entry_0>:
      7a:	66 69 74 20 73 63 72 65 65 6e 00                    fit screen.

00000085 <option_entry_1>:
      85:	43 6f 6e 74 72 61 73 74 00                          Contrast.

0000008e <option_entry_0>:
      8e:	4d 75 73 69 63 00                                   Music.

00000094 <mainmenu_entry_3>:
      94:	4f 70 74 69 6f 6e 73 00                             Options.

0000009c <mainmenu_entry_2>:
      9c:	44 65 62 75 67 00                                   Debug.

000000a2 <mainmenu_entry_1>:
      a2:	48 69 67 68 73 63 6f 72 65 00                       Highscore.

000000ac <__ctors_end>:
      ac:	11 24       	eor	r1, r1
      ae:	1f be       	out	0x3f, r1	; 63
      b0:	cf ef       	ldi	r28, 0xFF	; 255
      b2:	d4 e0       	ldi	r29, 0x04	; 4
      b4:	de bf       	out	0x3e, r29	; 62
      b6:	cd bf       	out	0x3d, r28	; 61

000000b8 <__do_copy_data>:
      b8:	13 e0       	ldi	r17, 0x03	; 3
      ba:	a0 e0       	ldi	r26, 0x00	; 0
      bc:	b1 e0       	ldi	r27, 0x01	; 1
      be:	e8 ed       	ldi	r30, 0xD8	; 216
      c0:	fb e1       	ldi	r31, 0x1B	; 27
      c2:	02 c0       	rjmp	.+4      	; 0xc8 <__do_copy_data+0x10>
      c4:	05 90       	lpm	r0, Z+
      c6:	0d 92       	st	X+, r0
      c8:	a4 3c       	cpi	r26, 0xC4	; 196
      ca:	b1 07       	cpc	r27, r17
      cc:	d9 f7       	brne	.-10     	; 0xc4 <__do_copy_data+0xc>

000000ce <__do_clear_bss>:
      ce:	24 e0       	ldi	r18, 0x04	; 4
      d0:	a4 ec       	ldi	r26, 0xC4	; 196
      d2:	b3 e0       	ldi	r27, 0x03	; 3
      d4:	01 c0       	rjmp	.+2      	; 0xd8 <.do_clear_bss_start>

000000d6 <.do_clear_bss_loop>:
      d6:	1d 92       	st	X+, r1

000000d8 <.do_clear_bss_start>:
      d8:	a1 35       	cpi	r26, 0x51	; 81
      da:	b2 07       	cpc	r27, r18
      dc:	e1 f7       	brne	.-8      	; 0xd6 <.do_clear_bss_loop>
      de:	0e 94 9e 04 	call	0x93c	; 0x93c <main>
      e2:	0c 94 ea 0d 	jmp	0x1bd4	; 0x1bd4 <_exit>

000000e6 <__bad_interrupt>:
      e6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ea <readADC>:
      ea:	82 30       	cpi	r24, 0x02	; 2
      ec:	91 05       	cpc	r25, r1
      ee:	71 f0       	breq	.+28     	; 0x10c <readADC+0x22>
      f0:	1c f4       	brge	.+6      	; 0xf8 <readADC+0xe>
      f2:	01 97       	sbiw	r24, 0x01	; 1
      f4:	39 f0       	breq	.+14     	; 0x104 <readADC+0x1a>
      f6:	1c c0       	rjmp	.+56     	; 0x130 <readADC+0x46>
      f8:	83 30       	cpi	r24, 0x03	; 3
      fa:	91 05       	cpc	r25, r1
      fc:	59 f0       	breq	.+22     	; 0x114 <readADC+0x2a>
      fe:	04 97       	sbiw	r24, 0x04	; 4
     100:	69 f0       	breq	.+26     	; 0x11c <readADC+0x32>
     102:	16 c0       	rjmp	.+44     	; 0x130 <readADC+0x46>
     104:	84 e1       	ldi	r24, 0x14	; 20
     106:	80 93 00 14 	sts	0x1400, r24
     10a:	0b c0       	rjmp	.+22     	; 0x122 <readADC+0x38>
     10c:	85 e1       	ldi	r24, 0x15	; 21
     10e:	80 93 00 14 	sts	0x1400, r24
     112:	07 c0       	rjmp	.+14     	; 0x122 <readADC+0x38>
     114:	86 e1       	ldi	r24, 0x16	; 22
     116:	80 93 00 14 	sts	0x1400, r24
     11a:	03 c0       	rjmp	.+6      	; 0x122 <readADC+0x38>
     11c:	87 e1       	ldi	r24, 0x17	; 23
     11e:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     122:	82 e5       	ldi	r24, 0x52	; 82
     124:	8a 95       	dec	r24
     126:	f1 f7       	brne	.-4      	; 0x124 <readADC+0x3a>
     128:	80 91 00 14 	lds	r24, 0x1400
     12c:	90 e0       	ldi	r25, 0x00	; 0
     12e:	08 95       	ret
     130:	80 e0       	ldi	r24, 0x00	; 0
     132:	90 e0       	ldi	r25, 0x00	; 0
     134:	08 95       	ret

00000136 <initalize_interrupts>:
     136:	ba 9a       	sbi	0x17, 2	; 23
     138:	bb 9a       	sbi	0x17, 3	; 23
     13a:	85 b7       	in	r24, 0x35	; 53
     13c:	81 60       	ori	r24, 0x01	; 1
     13e:	85 bf       	out	0x35, r24	; 53
     140:	85 b7       	in	r24, 0x35	; 53
     142:	82 60       	ori	r24, 0x02	; 2
     144:	85 bf       	out	0x35, r24	; 53
     146:	85 b7       	in	r24, 0x35	; 53
     148:	84 60       	ori	r24, 0x04	; 4
     14a:	85 bf       	out	0x35, r24	; 53
     14c:	85 b7       	in	r24, 0x35	; 53
     14e:	88 60       	ori	r24, 0x08	; 8
     150:	85 bf       	out	0x35, r24	; 53
     152:	8b b7       	in	r24, 0x3b	; 59
     154:	80 64       	ori	r24, 0x40	; 64
     156:	8b bf       	out	0x3b, r24	; 59
     158:	8b b7       	in	r24, 0x3b	; 59
     15a:	80 68       	ori	r24, 0x80	; 128
     15c:	8b bf       	out	0x3b, r24	; 59
     15e:	08 95       	ret

00000160 <__vector_1>:
     160:	1f 92       	push	r1
     162:	0f 92       	push	r0
     164:	0f b6       	in	r0, 0x3f	; 63
     166:	0f 92       	push	r0
     168:	11 24       	eor	r1, r1
     16a:	ef 92       	push	r14
     16c:	ff 92       	push	r15
     16e:	0f 93       	push	r16
     170:	1f 93       	push	r17
     172:	2f 93       	push	r18
     174:	3f 93       	push	r19
     176:	4f 93       	push	r20
     178:	5f 93       	push	r21
     17a:	6f 93       	push	r22
     17c:	7f 93       	push	r23
     17e:	8f 93       	push	r24
     180:	9f 93       	push	r25
     182:	af 93       	push	r26
     184:	bf 93       	push	r27
     186:	cf 93       	push	r28
     188:	df 93       	push	r29
     18a:	ef 93       	push	r30
     18c:	ff 93       	push	r31
     18e:	8c e0       	ldi	r24, 0x0C	; 12
     190:	91 e0       	ldi	r25, 0x01	; 1
     192:	9f 93       	push	r25
     194:	8f 93       	push	r24
     196:	0e 94 b0 09 	call	0x1360	; 0x1360 <printf>
     19a:	82 e5       	ldi	r24, 0x52	; 82
     19c:	0e 94 52 03 	call	0x6a4	; 0x6a4 <read_control_input>
     1a0:	f8 2e       	mov	r15, r24
     1a2:	e9 2e       	mov	r14, r25
     1a4:	8c e4       	ldi	r24, 0x4C	; 76
     1a6:	0e 94 52 03 	call	0x6a4	; 0x6a4 <read_control_input>
     1aa:	18 2f       	mov	r17, r24
     1ac:	09 2f       	mov	r16, r25
     1ae:	89 e5       	ldi	r24, 0x59	; 89
     1b0:	0e 94 52 03 	call	0x6a4	; 0x6a4 <read_control_input>
     1b4:	c8 2f       	mov	r28, r24
     1b6:	d9 2f       	mov	r29, r25
     1b8:	88 e5       	ldi	r24, 0x58	; 88
     1ba:	0e 94 52 03 	call	0x6a4	; 0x6a4 <read_control_input>
     1be:	ef 92       	push	r14
     1c0:	ff 92       	push	r15
     1c2:	0f 93       	push	r16
     1c4:	1f 93       	push	r17
     1c6:	df 93       	push	r29
     1c8:	cf 93       	push	r28
     1ca:	9f 93       	push	r25
     1cc:	8f 93       	push	r24
     1ce:	85 e3       	ldi	r24, 0x35	; 53
     1d0:	91 e0       	ldi	r25, 0x01	; 1
     1d2:	9f 93       	push	r25
     1d4:	8f 93       	push	r24
     1d6:	0e 94 b0 09 	call	0x1360	; 0x1360 <printf>
     1da:	0e 94 01 06 	call	0xc02	; 0xc02 <menu_right_button_flag>
     1de:	8d b7       	in	r24, 0x3d	; 61
     1e0:	9e b7       	in	r25, 0x3e	; 62
     1e2:	0c 96       	adiw	r24, 0x0c	; 12
     1e4:	0f b6       	in	r0, 0x3f	; 63
     1e6:	f8 94       	cli
     1e8:	9e bf       	out	0x3e, r25	; 62
     1ea:	0f be       	out	0x3f, r0	; 63
     1ec:	8d bf       	out	0x3d, r24	; 61
     1ee:	ff 91       	pop	r31
     1f0:	ef 91       	pop	r30
     1f2:	df 91       	pop	r29
     1f4:	cf 91       	pop	r28
     1f6:	bf 91       	pop	r27
     1f8:	af 91       	pop	r26
     1fa:	9f 91       	pop	r25
     1fc:	8f 91       	pop	r24
     1fe:	7f 91       	pop	r23
     200:	6f 91       	pop	r22
     202:	5f 91       	pop	r21
     204:	4f 91       	pop	r20
     206:	3f 91       	pop	r19
     208:	2f 91       	pop	r18
     20a:	1f 91       	pop	r17
     20c:	0f 91       	pop	r16
     20e:	ff 90       	pop	r15
     210:	ef 90       	pop	r14
     212:	0f 90       	pop	r0
     214:	0f be       	out	0x3f, r0	; 63
     216:	0f 90       	pop	r0
     218:	1f 90       	pop	r1
     21a:	18 95       	reti

0000021c <__vector_2>:
     21c:	1f 92       	push	r1
     21e:	0f 92       	push	r0
     220:	0f b6       	in	r0, 0x3f	; 63
     222:	0f 92       	push	r0
     224:	11 24       	eor	r1, r1
     226:	2f 93       	push	r18
     228:	3f 93       	push	r19
     22a:	4f 93       	push	r20
     22c:	5f 93       	push	r21
     22e:	6f 93       	push	r22
     230:	7f 93       	push	r23
     232:	8f 93       	push	r24
     234:	9f 93       	push	r25
     236:	af 93       	push	r26
     238:	bf 93       	push	r27
     23a:	ef 93       	push	r30
     23c:	ff 93       	push	r31
     23e:	0e 94 fd 05 	call	0xbfa	; 0xbfa <menu_left_button_flag>
     242:	ff 91       	pop	r31
     244:	ef 91       	pop	r30
     246:	bf 91       	pop	r27
     248:	af 91       	pop	r26
     24a:	9f 91       	pop	r25
     24c:	8f 91       	pop	r24
     24e:	7f 91       	pop	r23
     250:	6f 91       	pop	r22
     252:	5f 91       	pop	r21
     254:	4f 91       	pop	r20
     256:	3f 91       	pop	r19
     258:	2f 91       	pop	r18
     25a:	0f 90       	pop	r0
     25c:	0f be       	out	0x3f, r0	; 63
     25e:	0f 90       	pop	r0
     260:	1f 90       	pop	r1
     262:	18 95       	reti

00000264 <CAN_initialize>:


void CAN_initialize(void){
	int i = 1;
	i++;
	EMCUCR &= ~(1<<ISC2);
     264:	86 b7       	in	r24, 0x36	; 54
     266:	8e 7f       	andi	r24, 0xFE	; 254
     268:	86 bf       	out	0x36, r24	; 54
	GICR |= (1<<INT2);
     26a:	8b b7       	in	r24, 0x3b	; 59
     26c:	80 62       	ori	r24, 0x20	; 32
     26e:	8b bf       	out	0x3b, r24	; 59
	MCP2515_bit_modify(CANINTE,0b00000001,0b00000001);
     270:	41 e0       	ldi	r20, 0x01	; 1
     272:	61 e0       	ldi	r22, 0x01	; 1
     274:	8b e2       	ldi	r24, 0x2B	; 43
     276:	0e 94 22 05 	call	0xa44	; 0xa44 <MCP2515_bit_modify>
     27a:	08 95       	ret

0000027c <CAN_construct_meassage>:
CAN_message_t* CAN_message_receive(void){	
	return &CAN_receive_buffer;
}

void CAN_construct_meassage(int id, uint8_t length, uint8_t *data){
	CAN_send_buffer.id = id;
     27c:	90 93 c5 03 	sts	0x03C5, r25
     280:	80 93 c4 03 	sts	0x03C4, r24
	CAN_send_buffer.length = length;
     284:	60 93 c6 03 	sts	0x03C6, r22
	for(uint8_t i = 0; i < CAN_send_buffer.length; i++){
     288:	66 23       	and	r22, r22
     28a:	59 f0       	breq	.+22     	; 0x2a2 <CAN_construct_meassage+0x26>
     28c:	94 2f       	mov	r25, r20
     28e:	a7 ec       	ldi	r26, 0xC7	; 199
     290:	b3 e0       	ldi	r27, 0x03	; 3
     292:	e4 2f       	mov	r30, r20
     294:	f5 2f       	mov	r31, r21
		CAN_send_buffer.data[i] = data[i];
     296:	81 91       	ld	r24, Z+
     298:	8d 93       	st	X+, r24
     29a:	8e 2f       	mov	r24, r30
     29c:	89 1b       	sub	r24, r25
}

void CAN_construct_meassage(int id, uint8_t length, uint8_t *data){
	CAN_send_buffer.id = id;
	CAN_send_buffer.length = length;
	for(uint8_t i = 0; i < CAN_send_buffer.length; i++){
     29e:	86 17       	cp	r24, r22
     2a0:	d0 f3       	brcs	.-12     	; 0x296 <CAN_construct_meassage+0x1a>
     2a2:	08 95       	ret

000002a4 <CAN_send_byte>:
		CAN_send_buffer.data[i] = data[i];
	}
	CAN_send_byte(&CAN_send_buffer,0);
}

void CAN_send_byte(CAN_message_t* message,uint8_t n){
     2a4:	ff 92       	push	r15
     2a6:	0f 93       	push	r16
     2a8:	1f 93       	push	r17
     2aa:	cf 93       	push	r28
     2ac:	df 93       	push	r29
     2ae:	ec 01       	movw	r28, r24
     2b0:	f6 2e       	mov	r15, r22
	MCP2515_write(0x31+n*0x10,message->id>>3);//8 most significant bits of the message ID
     2b2:	06 2f       	mov	r16, r22
     2b4:	02 95       	swap	r16
     2b6:	00 7f       	andi	r16, 0xF0	; 240
     2b8:	28 81       	ld	r18, Y
     2ba:	39 81       	ldd	r19, Y+1	; 0x01
     2bc:	b9 01       	movw	r22, r18
     2be:	75 95       	asr	r23
     2c0:	67 95       	ror	r22
     2c2:	75 95       	asr	r23
     2c4:	67 95       	ror	r22
     2c6:	75 95       	asr	r23
     2c8:	67 95       	ror	r22
     2ca:	81 e3       	ldi	r24, 0x31	; 49
     2cc:	80 0f       	add	r24, r16
     2ce:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <MCP2515_write>
	MCP2515_write(0x32+n*0x10,message->id<<5);//3 least significant bits of the message ID
     2d2:	68 81       	ld	r22, Y
     2d4:	62 95       	swap	r22
     2d6:	66 0f       	add	r22, r22
     2d8:	60 7e       	andi	r22, 0xE0	; 224
     2da:	82 e3       	ldi	r24, 0x32	; 50
     2dc:	80 0f       	add	r24, r16
     2de:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <MCP2515_write>
	MCP2515_write(0x35+n*0x10,(0b00001111)&(message->length));//Message length
     2e2:	6a 81       	ldd	r22, Y+2	; 0x02
     2e4:	6f 70       	andi	r22, 0x0F	; 15
     2e6:	85 e3       	ldi	r24, 0x35	; 53
     2e8:	80 0f       	add	r24, r16
     2ea:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <MCP2515_write>
	
	for (uint8_t i = 0; i < message->length;i++)
     2ee:	8a 81       	ldd	r24, Y+2	; 0x02
     2f0:	88 23       	and	r24, r24
     2f2:	71 f0       	breq	.+28     	; 0x310 <CAN_send_byte+0x6c>
     2f4:	10 e0       	ldi	r17, 0x00	; 0
	{
		MCP2515_write(0x36+n*0x10+i,message->data[i]);//Message data
     2f6:	0a 5c       	subi	r16, 0xCA	; 202
     2f8:	fe 01       	movw	r30, r28
     2fa:	e1 0f       	add	r30, r17
     2fc:	f1 1d       	adc	r31, r1
     2fe:	63 81       	ldd	r22, Z+3	; 0x03
     300:	80 2f       	mov	r24, r16
     302:	81 0f       	add	r24, r17
     304:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <MCP2515_write>
void CAN_send_byte(CAN_message_t* message,uint8_t n){
	MCP2515_write(0x31+n*0x10,message->id>>3);//8 most significant bits of the message ID
	MCP2515_write(0x32+n*0x10,message->id<<5);//3 least significant bits of the message ID
	MCP2515_write(0x35+n*0x10,(0b00001111)&(message->length));//Message length
	
	for (uint8_t i = 0; i < message->length;i++)
     308:	1f 5f       	subi	r17, 0xFF	; 255
     30a:	9a 81       	ldd	r25, Y+2	; 0x02
     30c:	19 17       	cp	r17, r25
     30e:	a0 f3       	brcs	.-24     	; 0x2f8 <CAN_send_byte+0x54>
	{
		MCP2515_write(0x36+n*0x10+i,message->data[i]);//Message data
	}
	
	MCP2515_request_to_send(0x80+(1<<n));
     310:	81 e0       	ldi	r24, 0x01	; 1
     312:	90 e0       	ldi	r25, 0x00	; 0
     314:	02 c0       	rjmp	.+4      	; 0x31a <CAN_send_byte+0x76>
     316:	88 0f       	add	r24, r24
     318:	99 1f       	adc	r25, r25
     31a:	fa 94       	dec	r15
     31c:	e2 f7       	brpl	.-8      	; 0x316 <CAN_send_byte+0x72>
     31e:	80 58       	subi	r24, 0x80	; 128
     320:	0e 94 0f 05 	call	0xa1e	; 0xa1e <MCP2515_request_to_send>
	//printf("ID %i L: %i DATA: %i %i %i %i %i %i %i %i\n",CAN_send_buffer.id,CAN_send_buffer.length,CAN_send_buffer.data[0],CAN_send_buffer.data[1],CAN_send_buffer.data[2],CAN_send_buffer.data[3],CAN_send_buffer.data[4],CAN_send_buffer.data[5],CAN_send_buffer.data[6],CAN_send_buffer.data[7]);
	
}
     324:	df 91       	pop	r29
     326:	cf 91       	pop	r28
     328:	1f 91       	pop	r17
     32a:	0f 91       	pop	r16
     32c:	ff 90       	pop	r15
     32e:	08 95       	ret

00000330 <CAN_message_send>:
		CAN_send_buffer.data[i] = data[i];
	}
}

void CAN_message_send(uint8_t *data){//array of uint8_t as input
	for(uint8_t i = 0; i < CAN_send_buffer.length; i++){
     330:	20 91 c6 03 	lds	r18, 0x03C6
     334:	22 23       	and	r18, r18
     336:	59 f0       	breq	.+22     	; 0x34e <CAN_message_send+0x1e>
     338:	38 2f       	mov	r19, r24
     33a:	a7 ec       	ldi	r26, 0xC7	; 199
     33c:	b3 e0       	ldi	r27, 0x03	; 3
     33e:	e8 2f       	mov	r30, r24
     340:	f9 2f       	mov	r31, r25
		CAN_send_buffer.data[i] = data[i];
     342:	81 91       	ld	r24, Z+
     344:	8d 93       	st	X+, r24
     346:	8e 2f       	mov	r24, r30
     348:	83 1b       	sub	r24, r19
		CAN_send_buffer.data[i] = data[i];
	}
}

void CAN_message_send(uint8_t *data){//array of uint8_t as input
	for(uint8_t i = 0; i < CAN_send_buffer.length; i++){
     34a:	82 17       	cp	r24, r18
     34c:	d0 f3       	brcs	.-12     	; 0x342 <CAN_message_send+0x12>
		CAN_send_buffer.data[i] = data[i];
	}
	CAN_send_byte(&CAN_send_buffer,0);
     34e:	60 e0       	ldi	r22, 0x00	; 0
     350:	84 ec       	ldi	r24, 0xC4	; 196
     352:	93 e0       	ldi	r25, 0x03	; 3
     354:	0e 94 52 01 	call	0x2a4	; 0x2a4 <CAN_send_byte>
     358:	08 95       	ret

0000035a <CAN_read>:




uint8_t CAN_read(uint8_t adr){
	return MCP2515_read(adr);
     35a:	0e 94 fd 04 	call	0x9fa	; 0x9fa <MCP2515_read>
}
     35e:	08 95       	ret

00000360 <CAN_data_receive>:

#define RXBnSIDH 0x61
#define RXBnSIDL 0x62
#define RXBnDLC 0x65
#define RXBnDM 0x66
void CAN_data_receive(uint8_t n) {
     360:	ef 92       	push	r14
     362:	ff 92       	push	r15
     364:	0f 93       	push	r16
     366:	1f 93       	push	r17
     368:	cf 93       	push	r28
     36a:	df 93       	push	r29
     36c:	e8 2e       	mov	r14, r24
	CAN_receive_buffer.id = ((CAN_read(RXBnSIDH + n*0x10)<<3)|(0b11100000 & (CAN_read(RXBnSIDL + n*0x10))>>5));
     36e:	c8 2f       	mov	r28, r24
     370:	c2 95       	swap	r28
     372:	c0 7f       	andi	r28, 0xF0	; 240
     374:	82 e6       	ldi	r24, 0x62	; 98
     376:	8c 0f       	add	r24, r28
     378:	0e 94 ad 01 	call	0x35a	; 0x35a <CAN_read>
     37c:	81 e6       	ldi	r24, 0x61	; 97
     37e:	8c 0f       	add	r24, r28
     380:	0e 94 ad 01 	call	0x35a	; 0x35a <CAN_read>
     384:	28 e0       	ldi	r18, 0x08	; 8
     386:	82 9f       	mul	r24, r18
     388:	c0 01       	movw	r24, r0
     38a:	11 24       	eor	r1, r1
     38c:	90 93 d0 03 	sts	0x03D0, r25
     390:	80 93 cf 03 	sts	0x03CF, r24
	CAN_receive_buffer.length = (CAN_read(RXBnDLC + n*0x10) & 0b00001111);
     394:	85 e6       	ldi	r24, 0x65	; 101
     396:	8c 0f       	add	r24, r28
     398:	0e 94 ad 01 	call	0x35a	; 0x35a <CAN_read>
     39c:	8f 70       	andi	r24, 0x0F	; 15
     39e:	e1 ed       	ldi	r30, 0xD1	; 209
     3a0:	f3 e0       	ldi	r31, 0x03	; 3
     3a2:	80 83       	st	Z, r24
	for (uint8_t m = 0; m < CAN_receive_buffer.length; m++){
     3a4:	80 81       	ld	r24, Z
     3a6:	88 23       	and	r24, r24
     3a8:	81 f0       	breq	.+32     	; 0x3ca <CAN_data_receive+0x6a>
     3aa:	f1 2c       	mov	r15, r1
     3ac:	8f 01       	movw	r16, r30
		CAN_receive_buffer.data[m] = CAN_read(RXBnDM + m);
     3ae:	cf 2d       	mov	r28, r15
     3b0:	d0 e0       	ldi	r29, 0x00	; 0
     3b2:	86 e6       	ldi	r24, 0x66	; 102
     3b4:	8f 0d       	add	r24, r15
     3b6:	0e 94 ad 01 	call	0x35a	; 0x35a <CAN_read>
     3ba:	c1 53       	subi	r28, 0x31	; 49
     3bc:	dc 4f       	sbci	r29, 0xFC	; 252
     3be:	8b 83       	std	Y+3, r24	; 0x03
#define RXBnDLC 0x65
#define RXBnDM 0x66
void CAN_data_receive(uint8_t n) {
	CAN_receive_buffer.id = ((CAN_read(RXBnSIDH + n*0x10)<<3)|(0b11100000 & (CAN_read(RXBnSIDL + n*0x10))>>5));
	CAN_receive_buffer.length = (CAN_read(RXBnDLC + n*0x10) & 0b00001111);
	for (uint8_t m = 0; m < CAN_receive_buffer.length; m++){
     3c0:	f3 94       	inc	r15
     3c2:	f8 01       	movw	r30, r16
     3c4:	90 81       	ld	r25, Z
     3c6:	f9 16       	cp	r15, r25
     3c8:	90 f3       	brcs	.-28     	; 0x3ae <CAN_data_receive+0x4e>
		CAN_receive_buffer.data[m] = CAN_read(RXBnDM + m);
	}
	
	MCP2515_bit_modify(MCP_CANINTF,1<<n,0);
     3ca:	21 e0       	ldi	r18, 0x01	; 1
     3cc:	30 e0       	ldi	r19, 0x00	; 0
     3ce:	b9 01       	movw	r22, r18
     3d0:	02 c0       	rjmp	.+4      	; 0x3d6 <CAN_data_receive+0x76>
     3d2:	66 0f       	add	r22, r22
     3d4:	77 1f       	adc	r23, r23
     3d6:	ea 94       	dec	r14
     3d8:	e2 f7       	brpl	.-8      	; 0x3d2 <CAN_data_receive+0x72>
     3da:	40 e0       	ldi	r20, 0x00	; 0
     3dc:	8c e2       	ldi	r24, 0x2C	; 44
     3de:	0e 94 22 05 	call	0xa44	; 0xa44 <MCP2515_bit_modify>
	
	printf("ID %i L: %i DATA: %i %i %i %i %i %i %i %i\n",CAN_send_buffer.id,CAN_send_buffer.length,CAN_send_buffer.data[0],CAN_send_buffer.data[1],CAN_send_buffer.data[2],CAN_send_buffer.data[3],CAN_send_buffer.data[4],CAN_send_buffer.data[5],CAN_send_buffer.data[6],CAN_send_buffer.data[7]);
     3e2:	80 91 ce 03 	lds	r24, 0x03CE
     3e6:	1f 92       	push	r1
     3e8:	8f 93       	push	r24
     3ea:	80 91 cd 03 	lds	r24, 0x03CD
     3ee:	1f 92       	push	r1
     3f0:	8f 93       	push	r24
     3f2:	80 91 cc 03 	lds	r24, 0x03CC
     3f6:	1f 92       	push	r1
     3f8:	8f 93       	push	r24
     3fa:	80 91 cb 03 	lds	r24, 0x03CB
     3fe:	1f 92       	push	r1
     400:	8f 93       	push	r24
     402:	80 91 ca 03 	lds	r24, 0x03CA
     406:	1f 92       	push	r1
     408:	8f 93       	push	r24
     40a:	80 91 c9 03 	lds	r24, 0x03C9
     40e:	1f 92       	push	r1
     410:	8f 93       	push	r24
     412:	80 91 c8 03 	lds	r24, 0x03C8
     416:	1f 92       	push	r1
     418:	8f 93       	push	r24
     41a:	80 91 c7 03 	lds	r24, 0x03C7
     41e:	1f 92       	push	r1
     420:	8f 93       	push	r24
     422:	80 91 c6 03 	lds	r24, 0x03C6
     426:	1f 92       	push	r1
     428:	8f 93       	push	r24
     42a:	e4 ec       	ldi	r30, 0xC4	; 196
     42c:	f3 e0       	ldi	r31, 0x03	; 3
     42e:	81 81       	ldd	r24, Z+1	; 0x01
     430:	8f 93       	push	r24
     432:	80 81       	ld	r24, Z
     434:	8f 93       	push	r24
     436:	8e e4       	ldi	r24, 0x4E	; 78
     438:	91 e0       	ldi	r25, 0x01	; 1
     43a:	9f 93       	push	r25
     43c:	8f 93       	push	r24
     43e:	0e 94 b0 09 	call	0x1360	; 0x1360 <printf>
     442:	8d b7       	in	r24, 0x3d	; 61
     444:	9e b7       	in	r25, 0x3e	; 62
     446:	46 96       	adiw	r24, 0x16	; 22
     448:	0f b6       	in	r0, 0x3f	; 63
     44a:	f8 94       	cli
     44c:	9e bf       	out	0x3e, r25	; 62
     44e:	0f be       	out	0x3f, r0	; 63
     450:	8d bf       	out	0x3d, r24	; 61
	
	
	
}
     452:	df 91       	pop	r29
     454:	cf 91       	pop	r28
     456:	1f 91       	pop	r17
     458:	0f 91       	pop	r16
     45a:	ff 90       	pop	r15
     45c:	ef 90       	pop	r14
     45e:	08 95       	ret

00000460 <__vector_3>:


ISR(INT2_vect){//interrupt button Left
     460:	1f 92       	push	r1
     462:	0f 92       	push	r0
     464:	0f b6       	in	r0, 0x3f	; 63
     466:	0f 92       	push	r0
     468:	11 24       	eor	r1, r1
     46a:	2f 93       	push	r18
     46c:	3f 93       	push	r19
     46e:	4f 93       	push	r20
     470:	5f 93       	push	r21
     472:	6f 93       	push	r22
     474:	7f 93       	push	r23
     476:	8f 93       	push	r24
     478:	9f 93       	push	r25
     47a:	af 93       	push	r26
     47c:	bf 93       	push	r27
     47e:	ef 93       	push	r30
     480:	ff 93       	push	r31
	CAN_data_receive(0);
     482:	80 e0       	ldi	r24, 0x00	; 0
     484:	0e 94 b0 01 	call	0x360	; 0x360 <CAN_data_receive>
     488:	ff 91       	pop	r31
     48a:	ef 91       	pop	r30
     48c:	bf 91       	pop	r27
     48e:	af 91       	pop	r26
     490:	9f 91       	pop	r25
     492:	8f 91       	pop	r24
     494:	7f 91       	pop	r23
     496:	6f 91       	pop	r22
     498:	5f 91       	pop	r21
     49a:	4f 91       	pop	r20
     49c:	3f 91       	pop	r19
     49e:	2f 91       	pop	r18
     4a0:	0f 90       	pop	r0
     4a2:	0f be       	out	0x3f, r0	; 63
     4a4:	0f 90       	pop	r0
     4a6:	1f 90       	pop	r1
     4a8:	18 95       	reti

000004aa <calibrate_joystick>:
     4aa:	0f 93       	push	r16
     4ac:	1f 93       	push	r17
     4ae:	cf 93       	push	r28
     4b0:	df 93       	push	r29
     4b2:	c4 e6       	ldi	r28, 0x64	; 100
     4b4:	d0 e0       	ldi	r29, 0x00	; 0
     4b6:	00 91 e4 03 	lds	r16, 0x03E4
     4ba:	10 91 e5 03 	lds	r17, 0x03E5
     4be:	81 e0       	ldi	r24, 0x01	; 1
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	0e 94 75 00 	call	0xea	; 0xea <readADC>
     4c6:	01 58       	subi	r16, 0x81	; 129
     4c8:	1f 4f       	sbci	r17, 0xFF	; 255
     4ca:	08 1b       	sub	r16, r24
     4cc:	19 0b       	sbc	r17, r25
     4ce:	10 93 e5 03 	sts	0x03E5, r17
     4d2:	00 93 e4 03 	sts	0x03E4, r16
     4d6:	00 91 e2 03 	lds	r16, 0x03E2
     4da:	10 91 e3 03 	lds	r17, 0x03E3
     4de:	82 e0       	ldi	r24, 0x02	; 2
     4e0:	90 e0       	ldi	r25, 0x00	; 0
     4e2:	0e 94 75 00 	call	0xea	; 0xea <readADC>
     4e6:	01 58       	subi	r16, 0x81	; 129
     4e8:	1f 4f       	sbci	r17, 0xFF	; 255
     4ea:	08 1b       	sub	r16, r24
     4ec:	19 0b       	sbc	r17, r25
     4ee:	10 93 e3 03 	sts	0x03E3, r17
     4f2:	00 93 e2 03 	sts	0x03E2, r16
     4f6:	21 97       	sbiw	r28, 0x01	; 1
     4f8:	20 97       	sbiw	r28, 0x00	; 0
     4fa:	e9 f6       	brne	.-70     	; 0x4b6 <calibrate_joystick+0xc>
     4fc:	80 91 e4 03 	lds	r24, 0x03E4
     500:	90 91 e5 03 	lds	r25, 0x03E5
     504:	24 e6       	ldi	r18, 0x64	; 100
     506:	30 e0       	ldi	r19, 0x00	; 0
     508:	b9 01       	movw	r22, r18
     50a:	0e 94 3d 09 	call	0x127a	; 0x127a <__divmodhi4>
     50e:	70 93 e5 03 	sts	0x03E5, r23
     512:	60 93 e4 03 	sts	0x03E4, r22
     516:	80 91 e2 03 	lds	r24, 0x03E2
     51a:	90 91 e3 03 	lds	r25, 0x03E3
     51e:	b9 01       	movw	r22, r18
     520:	0e 94 3d 09 	call	0x127a	; 0x127a <__divmodhi4>
     524:	70 93 e3 03 	sts	0x03E3, r23
     528:	60 93 e2 03 	sts	0x03E2, r22
     52c:	df 91       	pop	r29
     52e:	cf 91       	pop	r28
     530:	1f 91       	pop	r17
     532:	0f 91       	pop	r16
     534:	08 95       	ret

00000536 <signal_to_range>:
     536:	2f 92       	push	r2
     538:	3f 92       	push	r3
     53a:	4f 92       	push	r4
     53c:	5f 92       	push	r5
     53e:	6f 92       	push	r6
     540:	7f 92       	push	r7
     542:	8f 92       	push	r8
     544:	9f 92       	push	r9
     546:	af 92       	push	r10
     548:	bf 92       	push	r11
     54a:	cf 92       	push	r12
     54c:	df 92       	push	r13
     54e:	ef 92       	push	r14
     550:	ff 92       	push	r15
     552:	0f 93       	push	r16
     554:	1f 93       	push	r17
     556:	cf 93       	push	r28
     558:	df 93       	push	r29
     55a:	00 d0       	rcall	.+0      	; 0x55c <signal_to_range+0x26>
     55c:	00 d0       	rcall	.+0      	; 0x55e <signal_to_range+0x28>
     55e:	00 d0       	rcall	.+0      	; 0x560 <signal_to_range+0x2a>
     560:	cd b7       	in	r28, 0x3d	; 61
     562:	de b7       	in	r29, 0x3e	; 62
     564:	3c 01       	movw	r6, r24
     566:	7a 83       	std	Y+2, r23	; 0x02
     568:	69 83       	std	Y+1, r22	; 0x01
     56a:	5c 83       	std	Y+4, r21	; 0x04
     56c:	4b 83       	std	Y+3, r20	; 0x03
     56e:	3e 83       	std	Y+6, r19	; 0x06
     570:	2d 83       	std	Y+5, r18	; 0x05
     572:	18 01       	movw	r2, r16
     574:	85 01       	movw	r16, r10
     576:	b9 01       	movw	r22, r18
     578:	88 27       	eor	r24, r24
     57a:	77 fd       	sbrc	r23, 7
     57c:	80 95       	com	r24
     57e:	98 2f       	mov	r25, r24
     580:	0e 94 4e 08 	call	0x109c	; 0x109c <__floatsisf>
     584:	4b 01       	movw	r8, r22
     586:	5c 01       	movw	r10, r24
     588:	b3 01       	movw	r22, r6
     58a:	6e 0d       	add	r22, r14
     58c:	7f 1d       	adc	r23, r15
     58e:	29 81       	ldd	r18, Y+1	; 0x01
     590:	3a 81       	ldd	r19, Y+2	; 0x02
     592:	62 1b       	sub	r22, r18
     594:	73 0b       	sbc	r23, r19
     596:	88 27       	eor	r24, r24
     598:	77 fd       	sbrc	r23, 7
     59a:	80 95       	com	r24
     59c:	98 2f       	mov	r25, r24
     59e:	0e 94 4e 08 	call	0x109c	; 0x109c <__floatsisf>
     5a2:	2b 01       	movw	r4, r22
     5a4:	3c 01       	movw	r6, r24
     5a6:	b1 01       	movw	r22, r2
     5a8:	8d 81       	ldd	r24, Y+5	; 0x05
     5aa:	9e 81       	ldd	r25, Y+6	; 0x06
     5ac:	68 1b       	sub	r22, r24
     5ae:	79 0b       	sbc	r23, r25
     5b0:	88 27       	eor	r24, r24
     5b2:	77 fd       	sbrc	r23, 7
     5b4:	80 95       	com	r24
     5b6:	98 2f       	mov	r25, r24
     5b8:	0e 94 4e 08 	call	0x109c	; 0x109c <__floatsisf>
     5bc:	9b 01       	movw	r18, r22
     5be:	ac 01       	movw	r20, r24
     5c0:	c3 01       	movw	r24, r6
     5c2:	b2 01       	movw	r22, r4
     5c4:	0e 94 da 08 	call	0x11b4	; 0x11b4 <__mulsf3>
     5c8:	2b 01       	movw	r4, r22
     5ca:	3c 01       	movw	r6, r24
     5cc:	6b 81       	ldd	r22, Y+3	; 0x03
     5ce:	7c 81       	ldd	r23, Y+4	; 0x04
     5d0:	e9 81       	ldd	r30, Y+1	; 0x01
     5d2:	fa 81       	ldd	r31, Y+2	; 0x02
     5d4:	6e 1b       	sub	r22, r30
     5d6:	7f 0b       	sbc	r23, r31
     5d8:	88 27       	eor	r24, r24
     5da:	77 fd       	sbrc	r23, 7
     5dc:	80 95       	com	r24
     5de:	98 2f       	mov	r25, r24
     5e0:	0e 94 4e 08 	call	0x109c	; 0x109c <__floatsisf>
     5e4:	9b 01       	movw	r18, r22
     5e6:	ac 01       	movw	r20, r24
     5e8:	c3 01       	movw	r24, r6
     5ea:	b2 01       	movw	r22, r4
     5ec:	0e 94 b3 07 	call	0xf66	; 0xf66 <__divsf3>
     5f0:	9b 01       	movw	r18, r22
     5f2:	ac 01       	movw	r20, r24
     5f4:	c5 01       	movw	r24, r10
     5f6:	b4 01       	movw	r22, r8
     5f8:	0e 94 4f 07 	call	0xe9e	; 0xe9e <__addsf3>
     5fc:	0e 94 1b 08 	call	0x1036	; 0x1036 <__fixsfsi>
     600:	c1 01       	movw	r24, r2
     602:	80 1b       	sub	r24, r16
     604:	91 0b       	sbc	r25, r17
     606:	68 17       	cp	r22, r24
     608:	79 07       	cpc	r23, r25
     60a:	74 f5       	brge	.+92     	; 0x668 <signal_to_range+0x132>
     60c:	8d 81       	ldd	r24, Y+5	; 0x05
     60e:	9e 81       	ldd	r25, Y+6	; 0x06
     610:	80 0f       	add	r24, r16
     612:	91 1f       	adc	r25, r17
     614:	86 17       	cp	r24, r22
     616:	97 07       	cpc	r25, r23
     618:	4c f5       	brge	.+82     	; 0x66c <signal_to_range+0x136>
     61a:	f8 01       	movw	r30, r16
     61c:	11 23       	and	r17, r17
     61e:	0c f4       	brge	.+2      	; 0x622 <signal_to_range+0xec>
     620:	31 96       	adiw	r30, 0x01	; 1
     622:	f5 95       	asr	r31
     624:	e7 95       	ror	r30
     626:	d8 01       	movw	r26, r16
     628:	12 c0       	rjmp	.+36     	; 0x64e <signal_to_range+0x118>
     62a:	8a 0f       	add	r24, r26
     62c:	9b 1f       	adc	r25, r27
     62e:	ac 01       	movw	r20, r24
     630:	4e 0f       	add	r20, r30
     632:	5f 1f       	adc	r21, r31
     634:	64 17       	cp	r22, r20
     636:	75 07       	cpc	r23, r21
     638:	14 f0       	brlt	.+4      	; 0x63e <signal_to_range+0x108>
     63a:	69 01       	movw	r12, r18
     63c:	0b c0       	rjmp	.+22     	; 0x654 <signal_to_range+0x11e>
     63e:	c6 01       	movw	r24, r12
     640:	8e 1b       	sub	r24, r30
     642:	9f 0b       	sbc	r25, r31
     644:	86 17       	cp	r24, r22
     646:	97 07       	cpc	r25, r23
     648:	14 f0       	brlt	.+4      	; 0x64e <signal_to_range+0x118>
     64a:	c0 1a       	sub	r12, r16
     64c:	d1 0a       	sbc	r13, r17
     64e:	c6 01       	movw	r24, r12
     650:	80 1b       	sub	r24, r16
     652:	91 0b       	sbc	r25, r17
     654:	96 01       	movw	r18, r12
     656:	20 0f       	add	r18, r16
     658:	31 1f       	adc	r19, r17
     65a:	62 17       	cp	r22, r18
     65c:	73 07       	cpc	r23, r19
     65e:	2c f7       	brge	.-54     	; 0x62a <signal_to_range+0xf4>
     660:	86 17       	cp	r24, r22
     662:	97 07       	cpc	r25, r23
     664:	14 f7       	brge	.-60     	; 0x62a <signal_to_range+0xf4>
     666:	04 c0       	rjmp	.+8      	; 0x670 <signal_to_range+0x13a>
     668:	61 01       	movw	r12, r2
     66a:	02 c0       	rjmp	.+4      	; 0x670 <signal_to_range+0x13a>
     66c:	cd 80       	ldd	r12, Y+5	; 0x05
     66e:	de 80       	ldd	r13, Y+6	; 0x06
     670:	c6 01       	movw	r24, r12
     672:	26 96       	adiw	r28, 0x06	; 6
     674:	0f b6       	in	r0, 0x3f	; 63
     676:	f8 94       	cli
     678:	de bf       	out	0x3e, r29	; 62
     67a:	0f be       	out	0x3f, r0	; 63
     67c:	cd bf       	out	0x3d, r28	; 61
     67e:	df 91       	pop	r29
     680:	cf 91       	pop	r28
     682:	1f 91       	pop	r17
     684:	0f 91       	pop	r16
     686:	ff 90       	pop	r15
     688:	ef 90       	pop	r14
     68a:	df 90       	pop	r13
     68c:	cf 90       	pop	r12
     68e:	bf 90       	pop	r11
     690:	af 90       	pop	r10
     692:	9f 90       	pop	r9
     694:	8f 90       	pop	r8
     696:	7f 90       	pop	r7
     698:	6f 90       	pop	r6
     69a:	5f 90       	pop	r5
     69c:	4f 90       	pop	r4
     69e:	3f 90       	pop	r3
     6a0:	2f 90       	pop	r2
     6a2:	08 95       	ret

000006a4 <read_control_input>:
     6a4:	af 92       	push	r10
     6a6:	bf 92       	push	r11
     6a8:	cf 92       	push	r12
     6aa:	df 92       	push	r13
     6ac:	ef 92       	push	r14
     6ae:	ff 92       	push	r15
     6b0:	0f 93       	push	r16
     6b2:	1f 93       	push	r17
     6b4:	82 35       	cpi	r24, 0x52	; 82
     6b6:	09 f4       	brne	.+2      	; 0x6ba <read_control_input+0x16>
     6b8:	74 c0       	rjmp	.+232    	; 0x7a2 <read_control_input+0xfe>
     6ba:	20 f4       	brcc	.+8      	; 0x6c4 <read_control_input+0x20>
     6bc:	8c 34       	cpi	r24, 0x4C	; 76
     6be:	09 f4       	brne	.+2      	; 0x6c2 <read_control_input+0x1e>
     6c0:	4e c0       	rjmp	.+156    	; 0x75e <read_control_input+0xba>
     6c2:	91 c0       	rjmp	.+290    	; 0x7e6 <read_control_input+0x142>
     6c4:	88 35       	cpi	r24, 0x58	; 88
     6c6:	19 f0       	breq	.+6      	; 0x6ce <read_control_input+0x2a>
     6c8:	89 35       	cpi	r24, 0x59	; 89
     6ca:	29 f1       	breq	.+74     	; 0x716 <read_control_input+0x72>
     6cc:	8c c0       	rjmp	.+280    	; 0x7e6 <read_control_input+0x142>
     6ce:	c0 90 e0 03 	lds	r12, 0x03E0
     6d2:	d0 90 e1 03 	lds	r13, 0x03E1
     6d6:	e0 90 e4 03 	lds	r14, 0x03E4
     6da:	f0 90 e5 03 	lds	r15, 0x03E5
     6de:	81 e0       	ldi	r24, 0x01	; 1
     6e0:	90 e0       	ldi	r25, 0x00	; 0
     6e2:	0e 94 75 00 	call	0xea	; 0xea <readADC>
     6e6:	0f 2e       	mov	r0, r31
     6e8:	fa e0       	ldi	r31, 0x0A	; 10
     6ea:	af 2e       	mov	r10, r31
     6ec:	b1 2c       	mov	r11, r1
     6ee:	f0 2d       	mov	r31, r0
     6f0:	04 e6       	ldi	r16, 0x64	; 100
     6f2:	10 e0       	ldi	r17, 0x00	; 0
     6f4:	2c e9       	ldi	r18, 0x9C	; 156
     6f6:	3f ef       	ldi	r19, 0xFF	; 255
     6f8:	4f ef       	ldi	r20, 0xFF	; 255
     6fa:	50 e0       	ldi	r21, 0x00	; 0
     6fc:	60 e0       	ldi	r22, 0x00	; 0
     6fe:	70 e0       	ldi	r23, 0x00	; 0
     700:	0e 94 9b 02 	call	0x536	; 0x536 <signal_to_range>
     704:	90 93 e1 03 	sts	0x03E1, r25
     708:	80 93 e0 03 	sts	0x03E0, r24
     70c:	80 91 e0 03 	lds	r24, 0x03E0
     710:	90 91 e1 03 	lds	r25, 0x03E1
     714:	6a c0       	rjmp	.+212    	; 0x7ea <read_control_input+0x146>
     716:	c0 90 de 03 	lds	r12, 0x03DE
     71a:	d0 90 df 03 	lds	r13, 0x03DF
     71e:	e0 90 e2 03 	lds	r14, 0x03E2
     722:	f0 90 e3 03 	lds	r15, 0x03E3
     726:	82 e0       	ldi	r24, 0x02	; 2
     728:	90 e0       	ldi	r25, 0x00	; 0
     72a:	0e 94 75 00 	call	0xea	; 0xea <readADC>
     72e:	0f 2e       	mov	r0, r31
     730:	fa e0       	ldi	r31, 0x0A	; 10
     732:	af 2e       	mov	r10, r31
     734:	b1 2c       	mov	r11, r1
     736:	f0 2d       	mov	r31, r0
     738:	04 e6       	ldi	r16, 0x64	; 100
     73a:	10 e0       	ldi	r17, 0x00	; 0
     73c:	2c e9       	ldi	r18, 0x9C	; 156
     73e:	3f ef       	ldi	r19, 0xFF	; 255
     740:	4f ef       	ldi	r20, 0xFF	; 255
     742:	50 e0       	ldi	r21, 0x00	; 0
     744:	60 e0       	ldi	r22, 0x00	; 0
     746:	70 e0       	ldi	r23, 0x00	; 0
     748:	0e 94 9b 02 	call	0x536	; 0x536 <signal_to_range>
     74c:	90 93 df 03 	sts	0x03DF, r25
     750:	80 93 de 03 	sts	0x03DE, r24
     754:	80 91 de 03 	lds	r24, 0x03DE
     758:	90 91 df 03 	lds	r25, 0x03DF
     75c:	46 c0       	rjmp	.+140    	; 0x7ea <read_control_input+0x146>
     75e:	c0 90 dc 03 	lds	r12, 0x03DC
     762:	d0 90 dd 03 	lds	r13, 0x03DD
     766:	83 e0       	ldi	r24, 0x03	; 3
     768:	90 e0       	ldi	r25, 0x00	; 0
     76a:	0e 94 75 00 	call	0xea	; 0xea <readADC>
     76e:	0f 2e       	mov	r0, r31
     770:	fa e0       	ldi	r31, 0x0A	; 10
     772:	af 2e       	mov	r10, r31
     774:	b1 2c       	mov	r11, r1
     776:	f0 2d       	mov	r31, r0
     778:	e1 2c       	mov	r14, r1
     77a:	f1 2c       	mov	r15, r1
     77c:	04 e6       	ldi	r16, 0x64	; 100
     77e:	10 e0       	ldi	r17, 0x00	; 0
     780:	20 e0       	ldi	r18, 0x00	; 0
     782:	30 e0       	ldi	r19, 0x00	; 0
     784:	4f ef       	ldi	r20, 0xFF	; 255
     786:	50 e0       	ldi	r21, 0x00	; 0
     788:	60 e0       	ldi	r22, 0x00	; 0
     78a:	70 e0       	ldi	r23, 0x00	; 0
     78c:	0e 94 9b 02 	call	0x536	; 0x536 <signal_to_range>
     790:	90 93 dd 03 	sts	0x03DD, r25
     794:	80 93 dc 03 	sts	0x03DC, r24
     798:	80 91 dc 03 	lds	r24, 0x03DC
     79c:	90 91 dd 03 	lds	r25, 0x03DD
     7a0:	24 c0       	rjmp	.+72     	; 0x7ea <read_control_input+0x146>
     7a2:	c0 90 da 03 	lds	r12, 0x03DA
     7a6:	d0 90 db 03 	lds	r13, 0x03DB
     7aa:	84 e0       	ldi	r24, 0x04	; 4
     7ac:	90 e0       	ldi	r25, 0x00	; 0
     7ae:	0e 94 75 00 	call	0xea	; 0xea <readADC>
     7b2:	0f 2e       	mov	r0, r31
     7b4:	fa e0       	ldi	r31, 0x0A	; 10
     7b6:	af 2e       	mov	r10, r31
     7b8:	b1 2c       	mov	r11, r1
     7ba:	f0 2d       	mov	r31, r0
     7bc:	e1 2c       	mov	r14, r1
     7be:	f1 2c       	mov	r15, r1
     7c0:	04 e6       	ldi	r16, 0x64	; 100
     7c2:	10 e0       	ldi	r17, 0x00	; 0
     7c4:	20 e0       	ldi	r18, 0x00	; 0
     7c6:	30 e0       	ldi	r19, 0x00	; 0
     7c8:	4f ef       	ldi	r20, 0xFF	; 255
     7ca:	50 e0       	ldi	r21, 0x00	; 0
     7cc:	60 e0       	ldi	r22, 0x00	; 0
     7ce:	70 e0       	ldi	r23, 0x00	; 0
     7d0:	0e 94 9b 02 	call	0x536	; 0x536 <signal_to_range>
     7d4:	90 93 db 03 	sts	0x03DB, r25
     7d8:	80 93 da 03 	sts	0x03DA, r24
     7dc:	80 91 da 03 	lds	r24, 0x03DA
     7e0:	90 91 db 03 	lds	r25, 0x03DB
     7e4:	02 c0       	rjmp	.+4      	; 0x7ea <read_control_input+0x146>
     7e6:	80 e0       	ldi	r24, 0x00	; 0
     7e8:	90 e0       	ldi	r25, 0x00	; 0
     7ea:	1f 91       	pop	r17
     7ec:	0f 91       	pop	r16
     7ee:	ff 90       	pop	r15
     7f0:	ef 90       	pop	r14
     7f2:	df 90       	pop	r13
     7f4:	cf 90       	pop	r12
     7f6:	bf 90       	pop	r11
     7f8:	af 90       	pop	r10
     7fa:	08 95       	ret

000007fc <initialize_control_input>:
     7fc:	0e 94 55 02 	call	0x4aa	; 0x4aa <calibrate_joystick>
     800:	88 e5       	ldi	r24, 0x58	; 88
     802:	0e 94 52 03 	call	0x6a4	; 0x6a4 <read_control_input>
     806:	90 93 e1 03 	sts	0x03E1, r25
     80a:	80 93 e0 03 	sts	0x03E0, r24
     80e:	89 e5       	ldi	r24, 0x59	; 89
     810:	0e 94 52 03 	call	0x6a4	; 0x6a4 <read_control_input>
     814:	90 93 df 03 	sts	0x03DF, r25
     818:	80 93 de 03 	sts	0x03DE, r24
     81c:	8c e4       	ldi	r24, 0x4C	; 76
     81e:	0e 94 52 03 	call	0x6a4	; 0x6a4 <read_control_input>
     822:	90 93 dd 03 	sts	0x03DD, r25
     826:	80 93 dc 03 	sts	0x03DC, r24
     82a:	82 e5       	ldi	r24, 0x52	; 82
     82c:	0e 94 52 03 	call	0x6a4	; 0x6a4 <read_control_input>
     830:	90 93 db 03 	sts	0x03DB, r25
     834:	80 93 da 03 	sts	0x03DA, r24
     838:	20 91 e2 03 	lds	r18, 0x03E2
     83c:	30 91 e3 03 	lds	r19, 0x03E3
     840:	80 91 e4 03 	lds	r24, 0x03E4
     844:	90 91 e5 03 	lds	r25, 0x03E5
     848:	3f 93       	push	r19
     84a:	2f 93       	push	r18
     84c:	9f 93       	push	r25
     84e:	8f 93       	push	r24
     850:	89 e7       	ldi	r24, 0x79	; 121
     852:	91 e0       	ldi	r25, 0x01	; 1
     854:	9f 93       	push	r25
     856:	8f 93       	push	r24
     858:	0e 94 b0 09 	call	0x1360	; 0x1360 <printf>
     85c:	60 91 da 03 	lds	r22, 0x03DA
     860:	70 91 db 03 	lds	r23, 0x03DB
     864:	40 91 dc 03 	lds	r20, 0x03DC
     868:	50 91 dd 03 	lds	r21, 0x03DD
     86c:	20 91 de 03 	lds	r18, 0x03DE
     870:	30 91 df 03 	lds	r19, 0x03DF
     874:	80 91 e0 03 	lds	r24, 0x03E0
     878:	90 91 e1 03 	lds	r25, 0x03E1
     87c:	7f 93       	push	r23
     87e:	6f 93       	push	r22
     880:	5f 93       	push	r21
     882:	4f 93       	push	r20
     884:	3f 93       	push	r19
     886:	2f 93       	push	r18
     888:	9f 93       	push	r25
     88a:	8f 93       	push	r24
     88c:	82 ea       	ldi	r24, 0xA2	; 162
     88e:	91 e0       	ldi	r25, 0x01	; 1
     890:	9f 93       	push	r25
     892:	8f 93       	push	r24
     894:	0e 94 b0 09 	call	0x1360	; 0x1360 <printf>
     898:	8d b7       	in	r24, 0x3d	; 61
     89a:	9e b7       	in	r25, 0x3e	; 62
     89c:	40 96       	adiw	r24, 0x10	; 16
     89e:	0f b6       	in	r0, 0x3f	; 63
     8a0:	f8 94       	cli
     8a2:	9e bf       	out	0x3e, r25	; 62
     8a4:	0f be       	out	0x3f, r0	; 63
     8a6:	8d bf       	out	0x3d, r24	; 61
     8a8:	08 95       	ret

000008aa <initalize>:




void initalize(void){
	cli();//disable interrupts
     8aa:	f8 94       	cli
	init_UART(UBBR);
     8ac:	8f e1       	ldi	r24, 0x1F	; 31
     8ae:	90 e0       	ldi	r25, 0x00	; 0
     8b0:	0e 94 43 07 	call	0xe86	; 0xe86 <init_UART>
	printf("LOADING g17_%s %s %s\nINITIALIZING...\n\nUART successfully initialized\n\n", VERSION,__DATE__,__TIME__);
     8b4:	8b ec       	ldi	r24, 0xCB	; 203
     8b6:	91 e0       	ldi	r25, 0x01	; 1
     8b8:	9f 93       	push	r25
     8ba:	8f 93       	push	r24
     8bc:	84 ed       	ldi	r24, 0xD4	; 212
     8be:	91 e0       	ldi	r25, 0x01	; 1
     8c0:	9f 93       	push	r25
     8c2:	8f 93       	push	r24
     8c4:	80 ee       	ldi	r24, 0xE0	; 224
     8c6:	91 e0       	ldi	r25, 0x01	; 1
     8c8:	9f 93       	push	r25
     8ca:	8f 93       	push	r24
     8cc:	85 ee       	ldi	r24, 0xE5	; 229
     8ce:	91 e0       	ldi	r25, 0x01	; 1
     8d0:	9f 93       	push	r25
     8d2:	8f 93       	push	r24
     8d4:	0e 94 b0 09 	call	0x1360	; 0x1360 <printf>
	BIT_ON(MCUCR,SRE); //SET THIS IN SOME INITALIZE FUNBCTION
     8d8:	85 b7       	in	r24, 0x35	; 53
     8da:	80 68       	ori	r24, 0x80	; 128
     8dc:	85 bf       	out	0x35, r24	; 53
	BIT_ON(SFIOR,XMM2);//HVORFOR GJORDE DE DETTE I OLED?
     8de:	80 b7       	in	r24, 0x30	; 48
     8e0:	80 62       	ori	r24, 0x20	; 32
     8e2:	80 bf       	out	0x30, r24	; 48
	
	oled_ini();
     8e4:	0e 94 74 06 	call	0xce8	; 0xce8 <oled_ini>
	sram_init();
     8e8:	0e 94 01 07 	call	0xe02	; 0xe02 <sram_init>
	//bootscreen();
	//write_screen();
	
	
	printf("OLED successfully initialized\n");
     8ec:	8b e2       	ldi	r24, 0x2B	; 43
     8ee:	92 e0       	ldi	r25, 0x02	; 2
     8f0:	0e 94 c4 09 	call	0x1388	; 0x1388 <puts>
	initialize_menu();
     8f4:	0e 94 4f 05 	call	0xa9e	; 0xa9e <initialize_menu>
	
	initialize_control_input();
     8f8:	0e 94 fe 03 	call	0x7fc	; 0x7fc <initialize_control_input>
	printf("control input successfully initialized\n\n");
     8fc:	89 e4       	ldi	r24, 0x49	; 73
     8fe:	92 e0       	ldi	r25, 0x02	; 2
     900:	0e 94 c4 09 	call	0x1388	; 0x1388 <puts>
	//SRAM_test();
	printf("SRAM successfully initialized\n");
     904:	81 e7       	ldi	r24, 0x71	; 113
     906:	92 e0       	ldi	r25, 0x02	; 2
     908:	0e 94 c4 09 	call	0x1388	; 0x1388 <puts>
	initalize_interrupts();
     90c:	0e 94 9b 00 	call	0x136	; 0x136 <initalize_interrupts>
	printf("Interrupts successfully initialized\n");
     910:	8f e8       	ldi	r24, 0x8F	; 143
     912:	92 e0       	ldi	r25, 0x02	; 2
     914:	0e 94 c4 09 	call	0x1388	; 0x1388 <puts>
	printf("Interrupts activated\n");
     918:	83 eb       	ldi	r24, 0xB3	; 179
     91a:	92 e0       	ldi	r25, 0x02	; 2
     91c:	0e 94 c4 09 	call	0x1388	; 0x1388 <puts>
	printf("\nINITIALIZATION COMPLETE\n");
     920:	88 ec       	ldi	r24, 0xC8	; 200
     922:	92 e0       	ldi	r25, 0x02	; 2
     924:	0e 94 c4 09 	call	0x1388	; 0x1388 <puts>
	sei();//enable interrupts
     928:	78 94       	sei
     92a:	8d b7       	in	r24, 0x3d	; 61
     92c:	9e b7       	in	r25, 0x3e	; 62
     92e:	08 96       	adiw	r24, 0x08	; 8
     930:	0f b6       	in	r0, 0x3f	; 63
     932:	f8 94       	cli
     934:	9e bf       	out	0x3e, r25	; 62
     936:	0f be       	out	0x3f, r0	; 63
     938:	8d bf       	out	0x3d, r24	; 61
     93a:	08 95       	ret

0000093c <main>:
//#include "MCP2515_driver.h"
#include "can.h"


int main(void)
{
     93c:	cf 93       	push	r28
     93e:	df 93       	push	r29
     940:	cd b7       	in	r28, 0x3d	; 61
     942:	de b7       	in	r29, 0x3e	; 62
     944:	28 97       	sbiw	r28, 0x08	; 8
     946:	0f b6       	in	r0, 0x3f	; 63
     948:	f8 94       	cli
     94a:	de bf       	out	0x3e, r29	; 62
     94c:	0f be       	out	0x3f, r0	; 63
     94e:	cd bf       	out	0x3d, r28	; 61
	
	initalize();
     950:	0e 94 55 04 	call	0x8aa	; 0x8aa <initalize>
	
	sram_init();
     954:	0e 94 01 07 	call	0xe02	; 0xe02 <sram_init>
	oled_goto_line(7);
     958:	87 e0       	ldi	r24, 0x07	; 7
     95a:	90 e0       	ldi	r25, 0x00	; 0
     95c:	0e 94 30 06 	call	0xc60	; 0xc60 <oled_goto_line>
	//sram_write_string(" - BYGGERN - G17");
	
	
	
	MCP2515_initialize();
     960:	0e 94 3c 05 	call	0xa78	; 0xa78 <MCP2515_initialize>
	CAN_initialize();
     964:	0e 94 32 01 	call	0x264	; 0x264 <CAN_initialize>
	uint8_t data[8];
	for (int i = 0; i<8; i++)
	{
		data[i] = i+3;
     968:	83 e0       	ldi	r24, 0x03	; 3
     96a:	89 83       	std	Y+1, r24	; 0x01
     96c:	84 e0       	ldi	r24, 0x04	; 4
     96e:	8a 83       	std	Y+2, r24	; 0x02
     970:	85 e0       	ldi	r24, 0x05	; 5
     972:	8b 83       	std	Y+3, r24	; 0x03
     974:	86 e0       	ldi	r24, 0x06	; 6
     976:	8c 83       	std	Y+4, r24	; 0x04
     978:	87 e0       	ldi	r24, 0x07	; 7
     97a:	8d 83       	std	Y+5, r24	; 0x05
     97c:	88 e0       	ldi	r24, 0x08	; 8
     97e:	8e 83       	std	Y+6, r24	; 0x06
     980:	89 e0       	ldi	r24, 0x09	; 9
     982:	8f 83       	std	Y+7, r24	; 0x07
     984:	8a e0       	ldi	r24, 0x0A	; 10
     986:	88 87       	std	Y+8, r24	; 0x08
	}
	CAN_construct_meassage(6,8,data);
     988:	ae 01       	movw	r20, r28
     98a:	4f 5f       	subi	r20, 0xFF	; 255
     98c:	5f 4f       	sbci	r21, 0xFF	; 255
     98e:	68 e0       	ldi	r22, 0x08	; 8
     990:	86 e0       	ldi	r24, 0x06	; 6
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	0e 94 3e 01 	call	0x27c	; 0x27c <CAN_construct_meassage>
	sei();
     998:	78 94       	sei
	//MCP2515_testSPI();	
	
	
	
	CAN_message_send(data);
     99a:	ce 01       	movw	r24, r28
     99c:	01 96       	adiw	r24, 0x01	; 1
     99e:	0e 94 98 01 	call	0x330	; 0x330 <CAN_message_send>
     9a2:	84 ea       	ldi	r24, 0xA4	; 164
     9a4:	8a 95       	dec	r24
     9a6:	f1 f7       	brne	.-4      	; 0x9a4 <main+0x68>
	//CAN_data_receive();
	_delay_us(100);
	
	for (int i = 0; i<8; i++)
	{
		data[i] = i+100;
     9a8:	84 e6       	ldi	r24, 0x64	; 100
     9aa:	89 83       	std	Y+1, r24	; 0x01
     9ac:	85 e6       	ldi	r24, 0x65	; 101
     9ae:	8a 83       	std	Y+2, r24	; 0x02
     9b0:	86 e6       	ldi	r24, 0x66	; 102
     9b2:	8b 83       	std	Y+3, r24	; 0x03
     9b4:	87 e6       	ldi	r24, 0x67	; 103
     9b6:	8c 83       	std	Y+4, r24	; 0x04
     9b8:	88 e6       	ldi	r24, 0x68	; 104
     9ba:	8d 83       	std	Y+5, r24	; 0x05
     9bc:	89 e6       	ldi	r24, 0x69	; 105
     9be:	8e 83       	std	Y+6, r24	; 0x06
     9c0:	8a e6       	ldi	r24, 0x6A	; 106
     9c2:	8f 83       	std	Y+7, r24	; 0x07
     9c4:	8b e6       	ldi	r24, 0x6B	; 107
     9c6:	88 87       	std	Y+8, r24	; 0x08
	}
	
	CAN_message_send(data);
     9c8:	ce 01       	movw	r24, r28
     9ca:	01 96       	adiw	r24, 0x01	; 1
     9cc:	0e 94 98 01 	call	0x330	; 0x330 <CAN_message_send>
     9d0:	ff cf       	rjmp	.-2      	; 0x9d0 <main+0x94>

000009d2 <MCP2515_write>:
	MCP2515_bit_modify(MCP_CANCTRL,MODE_MASK,MODE_LOOPBACK);
	//MCP2515_bit_modify(MCP_CANCTRL,0b11100000,0x00);
	SPI_deselect();
}

void MCP2515_write(uint8_t adr, unsigned char data){
     9d2:	cf 93       	push	r28
     9d4:	df 93       	push	r29
     9d6:	d8 2f       	mov	r29, r24
     9d8:	c6 2f       	mov	r28, r22
	SPI_select();
     9da:	0e 94 2c 07 	call	0xe58	; 0xe58 <SPI_select>
	SPI_send(MCP_WRITE);
     9de:	82 e0       	ldi	r24, 0x02	; 2
     9e0:	0e 94 21 07 	call	0xe42	; 0xe42 <SPI_send>
	SPI_send(adr);
     9e4:	8d 2f       	mov	r24, r29
     9e6:	0e 94 21 07 	call	0xe42	; 0xe42 <SPI_send>
	SPI_send(data);
     9ea:	8c 2f       	mov	r24, r28
     9ec:	0e 94 21 07 	call	0xe42	; 0xe42 <SPI_send>
	SPI_deselect();
     9f0:	0e 94 2e 07 	call	0xe5c	; 0xe5c <SPI_deselect>
}
     9f4:	df 91       	pop	r29
     9f6:	cf 91       	pop	r28
     9f8:	08 95       	ret

000009fa <MCP2515_read>:
	SPI_send(MCP_READ);
	SPI_send(0x00);
	SPI_deselect();
}

uint8_t MCP2515_read(uint8_t adr){
     9fa:	cf 93       	push	r28
     9fc:	c8 2f       	mov	r28, r24
	SPI_select();
     9fe:	0e 94 2c 07 	call	0xe58	; 0xe58 <SPI_select>
	SPI_send(MCP_READ);
     a02:	83 e0       	ldi	r24, 0x03	; 3
     a04:	0e 94 21 07 	call	0xe42	; 0xe42 <SPI_send>
	SPI_send(adr);
     a08:	8c 2f       	mov	r24, r28
     a0a:	0e 94 21 07 	call	0xe42	; 0xe42 <SPI_send>
	uint8_t received_data = SPI_read();
     a0e:	0e 94 25 07 	call	0xe4a	; 0xe4a <SPI_read>
     a12:	c8 2f       	mov	r28, r24
	SPI_deselect();
     a14:	0e 94 2e 07 	call	0xe5c	; 0xe5c <SPI_deselect>
	return received_data;
}
     a18:	8c 2f       	mov	r24, r28
     a1a:	cf 91       	pop	r28
     a1c:	08 95       	ret

00000a1e <MCP2515_request_to_send>:





void MCP2515_request_to_send(uint8_t buffer){
     a1e:	cf 93       	push	r28
     a20:	c8 2f       	mov	r28, r24
	SPI_select();
     a22:	0e 94 2c 07 	call	0xe58	; 0xe58 <SPI_select>
	SPI_send(0x80|(1<<buffer));
     a26:	21 e0       	ldi	r18, 0x01	; 1
     a28:	30 e0       	ldi	r19, 0x00	; 0
     a2a:	c9 01       	movw	r24, r18
     a2c:	02 c0       	rjmp	.+4      	; 0xa32 <MCP2515_request_to_send+0x14>
     a2e:	88 0f       	add	r24, r24
     a30:	99 1f       	adc	r25, r25
     a32:	ca 95       	dec	r28
     a34:	e2 f7       	brpl	.-8      	; 0xa2e <MCP2515_request_to_send+0x10>
     a36:	80 68       	ori	r24, 0x80	; 128
     a38:	0e 94 21 07 	call	0xe42	; 0xe42 <SPI_send>
	SPI_deselect();
     a3c:	0e 94 2e 07 	call	0xe5c	; 0xe5c <SPI_deselect>
}
     a40:	cf 91       	pop	r28
     a42:	08 95       	ret

00000a44 <MCP2515_bit_modify>:
	uint8_t recieved_status = SPI_read();
	SPI_deselect();
	return recieved_status;
}

void MCP2515_bit_modify(uint8_t adr, uint8_t mask, uint8_t data){
     a44:	1f 93       	push	r17
     a46:	cf 93       	push	r28
     a48:	df 93       	push	r29
     a4a:	18 2f       	mov	r17, r24
     a4c:	d6 2f       	mov	r29, r22
     a4e:	c4 2f       	mov	r28, r20
	SPI_select();
     a50:	0e 94 2c 07 	call	0xe58	; 0xe58 <SPI_select>
	SPI_send(MCP_BITMOD);
     a54:	85 e0       	ldi	r24, 0x05	; 5
     a56:	0e 94 21 07 	call	0xe42	; 0xe42 <SPI_send>
	SPI_send(adr);
     a5a:	81 2f       	mov	r24, r17
     a5c:	0e 94 21 07 	call	0xe42	; 0xe42 <SPI_send>
	SPI_send(mask);
     a60:	8d 2f       	mov	r24, r29
     a62:	0e 94 21 07 	call	0xe42	; 0xe42 <SPI_send>
	SPI_send(data);
     a66:	8c 2f       	mov	r24, r28
     a68:	0e 94 21 07 	call	0xe42	; 0xe42 <SPI_send>
	SPI_deselect();
     a6c:	0e 94 2e 07 	call	0xe5c	; 0xe5c <SPI_deselect>
}
     a70:	df 91       	pop	r29
     a72:	cf 91       	pop	r28
     a74:	1f 91       	pop	r17
     a76:	08 95       	ret

00000a78 <MCP2515_initialize>:

#include "MCP2515_driver.h"


void MCP2515_initialize(void){
	SPI_initialize();
     a78:	0e 94 30 07 	call	0xe60	; 0xe60 <SPI_initialize>
 	SPI_select();
     a7c:	0e 94 2c 07 	call	0xe58	; 0xe58 <SPI_select>
	SPI_send(MCP_RESET);
     a80:	80 ec       	ldi	r24, 0xC0	; 192
     a82:	0e 94 21 07 	call	0xe42	; 0xe42 <SPI_send>
	SPI_deselect();
     a86:	0e 94 2e 07 	call	0xe5c	; 0xe5c <SPI_deselect>
	SPI_select();
     a8a:	0e 94 2c 07 	call	0xe58	; 0xe58 <SPI_select>
	//MCP2515_bit_modify(MCP_CANCTRL,0b11100000,MODE_CONFIG);
	MCP2515_bit_modify(MCP_CANCTRL,MODE_MASK,MODE_LOOPBACK);
     a8e:	40 e4       	ldi	r20, 0x40	; 64
     a90:	60 ee       	ldi	r22, 0xE0	; 224
     a92:	8f e0       	ldi	r24, 0x0F	; 15
     a94:	0e 94 22 05 	call	0xa44	; 0xa44 <MCP2515_bit_modify>
	//MCP2515_bit_modify(MCP_CANCTRL,0b11100000,0x00);
	SPI_deselect();
     a98:	0e 94 2e 07 	call	0xe5c	; 0xe5c <SPI_deselect>
     a9c:	08 95       	ret

00000a9e <initialize_menu>:
     a9e:	cf 93       	push	r28
     aa0:	df 93       	push	r29
     aa2:	cd e3       	ldi	r28, 0x3D	; 61
     aa4:	d4 e0       	ldi	r29, 0x04	; 4
     aa6:	d0 93 24 04 	sts	0x0424, r29
     aaa:	c0 93 23 04 	sts	0x0423, r28
     aae:	10 92 26 04 	sts	0x0426, r1
     ab2:	10 92 25 04 	sts	0x0425, r1
     ab6:	10 92 28 04 	sts	0x0428, r1
     aba:	10 92 27 04 	sts	0x0427, r1
     abe:	ef e1       	ldi	r30, 0x1F	; 31
     ac0:	f4 e0       	ldi	r31, 0x04	; 4
     ac2:	82 ea       	ldi	r24, 0xA2	; 162
     ac4:	90 e0       	ldi	r25, 0x00	; 0
     ac6:	91 83       	std	Z+1, r25	; 0x01
     ac8:	80 83       	st	Z, r24
     aca:	83 e0       	ldi	r24, 0x03	; 3
     acc:	90 e0       	ldi	r25, 0x00	; 0
     ace:	90 93 22 04 	sts	0x0422, r25
     ad2:	80 93 21 04 	sts	0x0421, r24
     ad6:	21 ef       	ldi	r18, 0xF1	; 241
     ad8:	33 e0       	ldi	r19, 0x03	; 3
     ada:	30 93 42 04 	sts	0x0442, r19
     ade:	20 93 41 04 	sts	0x0441, r18
     ae2:	69 e2       	ldi	r22, 0x29	; 41
     ae4:	74 e0       	ldi	r23, 0x04	; 4
     ae6:	70 93 44 04 	sts	0x0444, r23
     aea:	60 93 43 04 	sts	0x0443, r22
     aee:	10 92 46 04 	sts	0x0446, r1
     af2:	10 92 45 04 	sts	0x0445, r1
     af6:	4c e9       	ldi	r20, 0x9C	; 156
     af8:	50 e0       	ldi	r21, 0x00	; 0
     afa:	59 83       	std	Y+1, r21	; 0x01
     afc:	48 83       	st	Y, r20
     afe:	90 93 40 04 	sts	0x0440, r25
     b02:	80 93 3f 04 	sts	0x043F, r24
     b06:	f0 93 f6 03 	sts	0x03F6, r31
     b0a:	e0 93 f5 03 	sts	0x03F5, r30
     b0e:	cb e0       	ldi	r28, 0x0B	; 11
     b10:	d4 e0       	ldi	r29, 0x04	; 4
     b12:	d0 93 f8 03 	sts	0x03F8, r29
     b16:	c0 93 f7 03 	sts	0x03F7, r28
     b1a:	10 92 fa 03 	sts	0x03FA, r1
     b1e:	10 92 f9 03 	sts	0x03F9, r1
     b22:	44 e9       	ldi	r20, 0x94	; 148
     b24:	50 e0       	ldi	r21, 0x00	; 0
     b26:	d9 01       	movw	r26, r18
     b28:	4d 93       	st	X+, r20
     b2a:	5c 93       	st	X, r21
     b2c:	90 93 f4 03 	sts	0x03F4, r25
     b30:	80 93 f3 03 	sts	0x03F3, r24
     b34:	25 e1       	ldi	r18, 0x15	; 21
     b36:	34 e0       	ldi	r19, 0x04	; 4
     b38:	30 93 10 04 	sts	0x0410, r19
     b3c:	20 93 0f 04 	sts	0x040F, r18
     b40:	10 92 12 04 	sts	0x0412, r1
     b44:	10 92 11 04 	sts	0x0411, r1
     b48:	f0 93 14 04 	sts	0x0414, r31
     b4c:	e0 93 13 04 	sts	0x0413, r30
     b50:	8e e8       	ldi	r24, 0x8E	; 142
     b52:	90 e0       	ldi	r25, 0x00	; 0
     b54:	99 83       	std	Y+1, r25	; 0x01
     b56:	88 83       	st	Y, r24
     b58:	82 e0       	ldi	r24, 0x02	; 2
     b5a:	90 e0       	ldi	r25, 0x00	; 0
     b5c:	90 93 0e 04 	sts	0x040E, r25
     b60:	80 93 0d 04 	sts	0x040D, r24
     b64:	d0 93 1a 04 	sts	0x041A, r29
     b68:	c0 93 19 04 	sts	0x0419, r28
     b6c:	10 92 1c 04 	sts	0x041C, r1
     b70:	10 92 1b 04 	sts	0x041B, r1
     b74:	f0 93 1e 04 	sts	0x041E, r31
     b78:	e0 93 1d 04 	sts	0x041D, r30
     b7c:	45 e8       	ldi	r20, 0x85	; 133
     b7e:	50 e0       	ldi	r21, 0x00	; 0
     b80:	d9 01       	movw	r26, r18
     b82:	4d 93       	st	X+, r20
     b84:	5c 93       	st	X, r21
     b86:	90 93 18 04 	sts	0x0418, r25
     b8a:	80 93 17 04 	sts	0x0417, r24
     b8e:	c3 e3       	ldi	r28, 0x33	; 51
     b90:	d4 e0       	ldi	r29, 0x04	; 4
     b92:	d0 93 2e 04 	sts	0x042E, r29
     b96:	c0 93 2d 04 	sts	0x042D, r28
     b9a:	10 92 30 04 	sts	0x0430, r1
     b9e:	10 92 2f 04 	sts	0x042F, r1
     ba2:	f0 93 32 04 	sts	0x0432, r31
     ba6:	e0 93 31 04 	sts	0x0431, r30
     baa:	2a e7       	ldi	r18, 0x7A	; 122
     bac:	30 e0       	ldi	r19, 0x00	; 0
     bae:	db 01       	movw	r26, r22
     bb0:	2d 93       	st	X+, r18
     bb2:	3c 93       	st	X, r19
     bb4:	90 93 2c 04 	sts	0x042C, r25
     bb8:	80 93 2b 04 	sts	0x042B, r24
     bbc:	70 93 38 04 	sts	0x0438, r23
     bc0:	60 93 37 04 	sts	0x0437, r22
     bc4:	10 92 3a 04 	sts	0x043A, r1
     bc8:	10 92 39 04 	sts	0x0439, r1
     bcc:	f0 93 3c 04 	sts	0x043C, r31
     bd0:	e0 93 3b 04 	sts	0x043B, r30
     bd4:	20 e7       	ldi	r18, 0x70	; 112
     bd6:	30 e0       	ldi	r19, 0x00	; 0
     bd8:	39 83       	std	Y+1, r19	; 0x01
     bda:	28 83       	st	Y, r18
     bdc:	90 93 36 04 	sts	0x0436, r25
     be0:	80 93 35 04 	sts	0x0435, r24
     be4:	f0 93 ee 03 	sts	0x03EE, r31
     be8:	e0 93 ed 03 	sts	0x03ED, r30
     bec:	f0 93 f0 03 	sts	0x03F0, r31
     bf0:	e0 93 ef 03 	sts	0x03EF, r30
     bf4:	df 91       	pop	r29
     bf6:	cf 91       	pop	r28
     bf8:	08 95       	ret

00000bfa <menu_left_button_flag>:
     bfa:	81 e0       	ldi	r24, 0x01	; 1
     bfc:	80 93 e6 03 	sts	0x03E6, r24
     c00:	08 95       	ret

00000c02 <menu_right_button_flag>:
     c02:	81 e0       	ldi	r24, 0x01	; 1
     c04:	80 93 e7 03 	sts	0x03E7, r24
     c08:	08 95       	ret

00000c0a <oled_home>:
     c0a:	10 92 ec 03 	sts	0x03EC, r1
     c0e:	10 92 eb 03 	sts	0x03EB, r1
     c12:	10 92 ea 03 	sts	0x03EA, r1
     c16:	10 92 e9 03 	sts	0x03E9, r1
     c1a:	e0 91 0a 01 	lds	r30, 0x010A
     c1e:	f0 91 0b 01 	lds	r31, 0x010B
     c22:	81 e2       	ldi	r24, 0x21	; 33
     c24:	80 83       	st	Z, r24
     c26:	e0 91 0a 01 	lds	r30, 0x010A
     c2a:	f0 91 0b 01 	lds	r31, 0x010B
     c2e:	10 82       	st	Z, r1
     c30:	e0 91 0a 01 	lds	r30, 0x010A
     c34:	f0 91 0b 01 	lds	r31, 0x010B
     c38:	8f e7       	ldi	r24, 0x7F	; 127
     c3a:	80 83       	st	Z, r24
     c3c:	e0 91 0a 01 	lds	r30, 0x010A
     c40:	f0 91 0b 01 	lds	r31, 0x010B
     c44:	82 e2       	ldi	r24, 0x22	; 34
     c46:	80 83       	st	Z, r24
     c48:	e0 91 0a 01 	lds	r30, 0x010A
     c4c:	f0 91 0b 01 	lds	r31, 0x010B
     c50:	10 82       	st	Z, r1
     c52:	e0 91 0a 01 	lds	r30, 0x010A
     c56:	f0 91 0b 01 	lds	r31, 0x010B
     c5a:	87 e0       	ldi	r24, 0x07	; 7
     c5c:	80 83       	st	Z, r24
     c5e:	08 95       	ret

00000c60 <oled_goto_line>:
     c60:	cf 93       	push	r28
     c62:	df 93       	push	r29
     c64:	ec 01       	movw	r28, r24
     c66:	0e 94 05 06 	call	0xc0a	; 0xc0a <oled_home>
     c6a:	d0 93 ec 03 	sts	0x03EC, r29
     c6e:	c0 93 eb 03 	sts	0x03EB, r28
     c72:	ce 01       	movw	r24, r28
     c74:	87 70       	andi	r24, 0x07	; 7
     c76:	99 27       	eor	r25, r25
     c78:	89 2b       	or	r24, r25
     c7a:	89 f0       	breq	.+34     	; 0xc9e <oled_goto_line+0x3e>
     c7c:	e0 91 0a 01 	lds	r30, 0x010A
     c80:	f0 91 0b 01 	lds	r31, 0x010B
     c84:	10 82       	st	Z, r1
     c86:	e0 91 0a 01 	lds	r30, 0x010A
     c8a:	f0 91 0b 01 	lds	r31, 0x010B
     c8e:	80 e1       	ldi	r24, 0x10	; 16
     c90:	80 83       	st	Z, r24
     c92:	c0 6b       	ori	r28, 0xB0	; 176
     c94:	e0 91 0a 01 	lds	r30, 0x010A
     c98:	f0 91 0b 01 	lds	r31, 0x010B
     c9c:	c0 83       	st	Z, r28
     c9e:	df 91       	pop	r29
     ca0:	cf 91       	pop	r28
     ca2:	08 95       	ret

00000ca4 <oled_clear_line>:
     ca4:	cf 93       	push	r28
     ca6:	df 93       	push	r29
     ca8:	ec 01       	movw	r28, r24
     caa:	0e 94 30 06 	call	0xc60	; 0xc60 <oled_goto_line>
     cae:	28 97       	sbiw	r28, 0x08	; 8
     cb0:	50 f4       	brcc	.+20     	; 0xcc6 <oled_clear_line+0x22>
     cb2:	80 e8       	ldi	r24, 0x80	; 128
     cb4:	90 e0       	ldi	r25, 0x00	; 0
     cb6:	e0 91 08 01 	lds	r30, 0x0108
     cba:	f0 91 09 01 	lds	r31, 0x0109
     cbe:	10 82       	st	Z, r1
     cc0:	01 97       	sbiw	r24, 0x01	; 1
     cc2:	00 97       	sbiw	r24, 0x00	; 0
     cc4:	c1 f7       	brne	.-16     	; 0xcb6 <oled_clear_line+0x12>
     cc6:	df 91       	pop	r29
     cc8:	cf 91       	pop	r28
     cca:	08 95       	ret

00000ccc <oled_reset>:
     ccc:	cf 93       	push	r28
     cce:	df 93       	push	r29
     cd0:	c0 e0       	ldi	r28, 0x00	; 0
     cd2:	d0 e0       	ldi	r29, 0x00	; 0
     cd4:	ce 01       	movw	r24, r28
     cd6:	0e 94 52 06 	call	0xca4	; 0xca4 <oled_clear_line>
     cda:	21 96       	adiw	r28, 0x01	; 1
     cdc:	c8 30       	cpi	r28, 0x08	; 8
     cde:	d1 05       	cpc	r29, r1
     ce0:	c9 f7       	brne	.-14     	; 0xcd4 <oled_reset+0x8>
     ce2:	df 91       	pop	r29
     ce4:	cf 91       	pop	r28
     ce6:	08 95       	ret

00000ce8 <oled_ini>:
     ce8:	85 b7       	in	r24, 0x35	; 53
     cea:	80 68       	ori	r24, 0x80	; 128
     cec:	85 bf       	out	0x35, r24	; 53
     cee:	80 b7       	in	r24, 0x30	; 48
     cf0:	80 62       	ori	r24, 0x20	; 32
     cf2:	80 bf       	out	0x30, r24	; 48
     cf4:	e0 91 0a 01 	lds	r30, 0x010A
     cf8:	f0 91 0b 01 	lds	r31, 0x010B
     cfc:	8e ea       	ldi	r24, 0xAE	; 174
     cfe:	80 83       	st	Z, r24
     d00:	e0 91 0a 01 	lds	r30, 0x010A
     d04:	f0 91 0b 01 	lds	r31, 0x010B
     d08:	81 ea       	ldi	r24, 0xA1	; 161
     d0a:	80 83       	st	Z, r24
     d0c:	e0 91 0a 01 	lds	r30, 0x010A
     d10:	f0 91 0b 01 	lds	r31, 0x010B
     d14:	8a ed       	ldi	r24, 0xDA	; 218
     d16:	80 83       	st	Z, r24
     d18:	e0 91 0a 01 	lds	r30, 0x010A
     d1c:	f0 91 0b 01 	lds	r31, 0x010B
     d20:	82 e1       	ldi	r24, 0x12	; 18
     d22:	80 83       	st	Z, r24
     d24:	e0 91 0a 01 	lds	r30, 0x010A
     d28:	f0 91 0b 01 	lds	r31, 0x010B
     d2c:	88 ec       	ldi	r24, 0xC8	; 200
     d2e:	80 83       	st	Z, r24
     d30:	e0 91 0a 01 	lds	r30, 0x010A
     d34:	f0 91 0b 01 	lds	r31, 0x010B
     d38:	88 ea       	ldi	r24, 0xA8	; 168
     d3a:	80 83       	st	Z, r24
     d3c:	e0 91 0a 01 	lds	r30, 0x010A
     d40:	f0 91 0b 01 	lds	r31, 0x010B
     d44:	8f e3       	ldi	r24, 0x3F	; 63
     d46:	80 83       	st	Z, r24
     d48:	e0 91 0a 01 	lds	r30, 0x010A
     d4c:	f0 91 0b 01 	lds	r31, 0x010B
     d50:	85 ed       	ldi	r24, 0xD5	; 213
     d52:	80 83       	st	Z, r24
     d54:	e0 91 0a 01 	lds	r30, 0x010A
     d58:	f0 91 0b 01 	lds	r31, 0x010B
     d5c:	80 e8       	ldi	r24, 0x80	; 128
     d5e:	80 83       	st	Z, r24
     d60:	e0 91 0a 01 	lds	r30, 0x010A
     d64:	f0 91 0b 01 	lds	r31, 0x010B
     d68:	81 e8       	ldi	r24, 0x81	; 129
     d6a:	80 83       	st	Z, r24
     d6c:	e0 91 0a 01 	lds	r30, 0x010A
     d70:	f0 91 0b 01 	lds	r31, 0x010B
     d74:	80 e5       	ldi	r24, 0x50	; 80
     d76:	80 83       	st	Z, r24
     d78:	e0 91 0a 01 	lds	r30, 0x010A
     d7c:	f0 91 0b 01 	lds	r31, 0x010B
     d80:	89 ed       	ldi	r24, 0xD9	; 217
     d82:	80 83       	st	Z, r24
     d84:	e0 91 0a 01 	lds	r30, 0x010A
     d88:	f0 91 0b 01 	lds	r31, 0x010B
     d8c:	81 e2       	ldi	r24, 0x21	; 33
     d8e:	80 83       	st	Z, r24
     d90:	e0 91 0a 01 	lds	r30, 0x010A
     d94:	f0 91 0b 01 	lds	r31, 0x010B
     d98:	80 e2       	ldi	r24, 0x20	; 32
     d9a:	80 83       	st	Z, r24
     d9c:	e0 91 0a 01 	lds	r30, 0x010A
     da0:	f0 91 0b 01 	lds	r31, 0x010B
     da4:	10 82       	st	Z, r1
     da6:	e0 91 0a 01 	lds	r30, 0x010A
     daa:	f0 91 0b 01 	lds	r31, 0x010B
     dae:	8b ed       	ldi	r24, 0xDB	; 219
     db0:	80 83       	st	Z, r24
     db2:	e0 91 0a 01 	lds	r30, 0x010A
     db6:	f0 91 0b 01 	lds	r31, 0x010B
     dba:	80 e3       	ldi	r24, 0x30	; 48
     dbc:	80 83       	st	Z, r24
     dbe:	e0 91 0a 01 	lds	r30, 0x010A
     dc2:	f0 91 0b 01 	lds	r31, 0x010B
     dc6:	8d ea       	ldi	r24, 0xAD	; 173
     dc8:	80 83       	st	Z, r24
     dca:	e0 91 0a 01 	lds	r30, 0x010A
     dce:	f0 91 0b 01 	lds	r31, 0x010B
     dd2:	10 82       	st	Z, r1
     dd4:	e0 91 0a 01 	lds	r30, 0x010A
     dd8:	f0 91 0b 01 	lds	r31, 0x010B
     ddc:	84 ea       	ldi	r24, 0xA4	; 164
     dde:	80 83       	st	Z, r24
     de0:	e0 91 0a 01 	lds	r30, 0x010A
     de4:	f0 91 0b 01 	lds	r31, 0x010B
     de8:	86 ea       	ldi	r24, 0xA6	; 166
     dea:	80 83       	st	Z, r24
     dec:	e0 91 0a 01 	lds	r30, 0x010A
     df0:	f0 91 0b 01 	lds	r31, 0x010B
     df4:	8f ea       	ldi	r24, 0xAF	; 175
     df6:	80 83       	st	Z, r24
     df8:	0e 94 66 06 	call	0xccc	; 0xccc <oled_reset>
     dfc:	0e 94 05 06 	call	0xc0a	; 0xc0a <oled_home>
     e00:	08 95       	ret

00000e02 <sram_init>:
     e02:	40 e0       	ldi	r20, 0x00	; 0
     e04:	50 e0       	ldi	r21, 0x00	; 0
     e06:	70 e0       	ldi	r23, 0x00	; 0
     e08:	60 e0       	ldi	r22, 0x00	; 0
     e0a:	14 c0       	rjmp	.+40     	; 0xe34 <sram_init+0x32>
     e0c:	9c 01       	movw	r18, r24
     e0e:	24 0f       	add	r18, r20
     e10:	35 1f       	adc	r19, r21
     e12:	e0 91 06 01 	lds	r30, 0x0106
     e16:	f0 91 07 01 	lds	r31, 0x0107
     e1a:	e2 0f       	add	r30, r18
     e1c:	f3 1f       	adc	r31, r19
     e1e:	10 82       	st	Z, r1
     e20:	01 96       	adiw	r24, 0x01	; 1
     e22:	80 38       	cpi	r24, 0x80	; 128
     e24:	91 05       	cpc	r25, r1
     e26:	91 f7       	brne	.-28     	; 0xe0c <sram_init+0xa>
     e28:	40 58       	subi	r20, 0x80	; 128
     e2a:	5f 4f       	sbci	r21, 0xFF	; 255
     e2c:	41 15       	cp	r20, r1
     e2e:	84 e0       	ldi	r24, 0x04	; 4
     e30:	58 07       	cpc	r21, r24
     e32:	19 f0       	breq	.+6      	; 0xe3a <sram_init+0x38>
     e34:	87 2f       	mov	r24, r23
     e36:	96 2f       	mov	r25, r22
     e38:	e9 cf       	rjmp	.-46     	; 0xe0c <sram_init+0xa>
     e3a:	8f ef       	ldi	r24, 0xFF	; 255
     e3c:	80 93 e8 03 	sts	0x03E8, r24
     e40:	08 95       	ret

00000e42 <SPI_send>:
}


void SPI_send(char data) {
	//Start the transmission
	SPDR = data;
     e42:	8f b9       	out	0x0f, r24	; 15
	
	//Wait for data to be transmitted (checks if the register is empty)
	while(!(SPSR & (1<<SPIF)));
     e44:	77 9b       	sbis	0x0e, 7	; 14
     e46:	fe cf       	rjmp	.-4      	; 0xe44 <SPI_send+0x2>
}
     e48:	08 95       	ret

00000e4a <SPI_read>:



char SPI_read(void){
	//Send dummy data to read from slave
	SPI_send(0);
     e4a:	80 e0       	ldi	r24, 0x00	; 0
     e4c:	0e 94 21 07 	call	0xe42	; 0xe42 <SPI_send>
	
	//Wait for data to be received
	while(!(SPSR & (1<<SPIF)));
     e50:	77 9b       	sbis	0x0e, 7	; 14
     e52:	fe cf       	rjmp	.-4      	; 0xe50 <SPI_read+0x6>

	return SPDR;
     e54:	8f b1       	in	r24, 0x0f	; 15
}
     e56:	08 95       	ret

00000e58 <SPI_select>:

void SPI_select(void){
	PORTB &= ~(1 << SPI_SS);
     e58:	c4 98       	cbi	0x18, 4	; 24
     e5a:	08 95       	ret

00000e5c <SPI_deselect>:
}

void SPI_deselect(void){
	PORTB |= (1 << SPI_SS);
     e5c:	c4 9a       	sbi	0x18, 4	; 24
     e5e:	08 95       	ret

00000e60 <SPI_initialize>:
#define		SPI_MOSI		PB5
#define		SPI_MISO		PB6
#define		SPI_SCK			PB7

void SPI_initialize(void){
	DDRB |=	(1 << SPI_MOSI) | (1 << SPI_SCK) | (1 << SPI_SS);
     e60:	87 b3       	in	r24, 0x17	; 23
     e62:	80 6b       	ori	r24, 0xB0	; 176
     e64:	87 bb       	out	0x17, r24	; 23
	DDRB &= ~(1 << SPI_MISO);
     e66:	be 98       	cbi	0x17, 6	; 23
	//BIT_ON(SPCR,SPIE);		//SPI INTERRUPT ENABLE
	//BIT_OFF(SPCR,DORD);		//transmit the most significant bit first, change to ON if we transmit the Least significant first
	BIT_ON(SPCR,MSTR);		//MASTER/SLAVE SELECT, set to 1 for master, 0 for slave (master wanted)
     e68:	6c 9a       	sbi	0x0d, 4	; 13
	//BIT_ON(SPCR,CPOL);		//CLOCK POLARITY, NO IDEA WHAT WE NEED!!!!!!!!!!!!!
	//BIT_ON(SPCR,CPHA);		//CLOCK PHASE, NO IDEA!!!!!!!!!!!
	//BIT_ON(SPCR,SPR1);		//SPI CLOCK RATE SELECT, BIT 1
	//BIT_ON(SPCR,SPR0);		//SPI CLOCK RATE SELECT, BIT 0
	BIT_ON(SPCR,SPE);		//SPI ENABLE, overrides the normal pins function (we want this)
     e6a:	6e 9a       	sbi	0x0d, 6	; 13
	SPSR |= (1 << SPI2X); //ADD COMMENT------------------------------------------------------------------------------------------------------------
     e6c:	70 9a       	sbi	0x0e, 0	; 14
	//sei();
	SPI_deselect();
     e6e:	0e 94 2e 07 	call	0xe5c	; 0xe5c <SPI_deselect>
     e72:	08 95       	ret

00000e74 <send_UART>:
     e74:	5d 9b       	sbis	0x0b, 5	; 11
     e76:	fe cf       	rjmp	.-4      	; 0xe74 <send_UART>
     e78:	8c b9       	out	0x0c, r24	; 12
     e7a:	08 95       	ret

00000e7c <recieve_UART>:
     e7c:	5f 9b       	sbis	0x0b, 7	; 11
     e7e:	fe cf       	rjmp	.-4      	; 0xe7c <recieve_UART>
     e80:	8c b1       	in	r24, 0x0c	; 12
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	08 95       	ret

00000e86 <init_UART>:
     e86:	90 bd       	out	0x20, r25	; 32
     e88:	89 b9       	out	0x09, r24	; 9
     e8a:	88 e1       	ldi	r24, 0x18	; 24
     e8c:	8a b9       	out	0x0a, r24	; 10
     e8e:	6e e3       	ldi	r22, 0x3E	; 62
     e90:	77 e0       	ldi	r23, 0x07	; 7
     e92:	8a e3       	ldi	r24, 0x3A	; 58
     e94:	97 e0       	ldi	r25, 0x07	; 7
     e96:	0e 94 65 09 	call	0x12ca	; 0x12ca <fdevopen>
     e9a:	08 95       	ret

00000e9c <__subsf3>:
     e9c:	50 58       	subi	r21, 0x80	; 128

00000e9e <__addsf3>:
     e9e:	bb 27       	eor	r27, r27
     ea0:	aa 27       	eor	r26, r26
     ea2:	0e d0       	rcall	.+28     	; 0xec0 <__addsf3x>
     ea4:	4d c1       	rjmp	.+666    	; 0x1140 <__fp_round>
     ea6:	3e d1       	rcall	.+636    	; 0x1124 <__fp_pscA>
     ea8:	30 f0       	brcs	.+12     	; 0xeb6 <__addsf3+0x18>
     eaa:	43 d1       	rcall	.+646    	; 0x1132 <__fp_pscB>
     eac:	20 f0       	brcs	.+8      	; 0xeb6 <__addsf3+0x18>
     eae:	31 f4       	brne	.+12     	; 0xebc <__addsf3+0x1e>
     eb0:	9f 3f       	cpi	r25, 0xFF	; 255
     eb2:	11 f4       	brne	.+4      	; 0xeb8 <__addsf3+0x1a>
     eb4:	1e f4       	brtc	.+6      	; 0xebc <__addsf3+0x1e>
     eb6:	33 c1       	rjmp	.+614    	; 0x111e <__fp_nan>
     eb8:	0e f4       	brtc	.+2      	; 0xebc <__addsf3+0x1e>
     eba:	e0 95       	com	r30
     ebc:	e7 fb       	bst	r30, 7
     ebe:	29 c1       	rjmp	.+594    	; 0x1112 <__fp_inf>

00000ec0 <__addsf3x>:
     ec0:	e9 2f       	mov	r30, r25
     ec2:	4f d1       	rcall	.+670    	; 0x1162 <__fp_split3>
     ec4:	80 f3       	brcs	.-32     	; 0xea6 <__addsf3+0x8>
     ec6:	ba 17       	cp	r27, r26
     ec8:	62 07       	cpc	r22, r18
     eca:	73 07       	cpc	r23, r19
     ecc:	84 07       	cpc	r24, r20
     ece:	95 07       	cpc	r25, r21
     ed0:	18 f0       	brcs	.+6      	; 0xed8 <__addsf3x+0x18>
     ed2:	71 f4       	brne	.+28     	; 0xef0 <__addsf3x+0x30>
     ed4:	9e f5       	brtc	.+102    	; 0xf3c <__addsf3x+0x7c>
     ed6:	67 c1       	rjmp	.+718    	; 0x11a6 <__fp_zero>
     ed8:	0e f4       	brtc	.+2      	; 0xedc <__addsf3x+0x1c>
     eda:	e0 95       	com	r30
     edc:	0b 2e       	mov	r0, r27
     ede:	ba 2f       	mov	r27, r26
     ee0:	a0 2d       	mov	r26, r0
     ee2:	0b 01       	movw	r0, r22
     ee4:	b9 01       	movw	r22, r18
     ee6:	90 01       	movw	r18, r0
     ee8:	0c 01       	movw	r0, r24
     eea:	ca 01       	movw	r24, r20
     eec:	a0 01       	movw	r20, r0
     eee:	11 24       	eor	r1, r1
     ef0:	ff 27       	eor	r31, r31
     ef2:	59 1b       	sub	r21, r25
     ef4:	99 f0       	breq	.+38     	; 0xf1c <__addsf3x+0x5c>
     ef6:	59 3f       	cpi	r21, 0xF9	; 249
     ef8:	50 f4       	brcc	.+20     	; 0xf0e <__addsf3x+0x4e>
     efa:	50 3e       	cpi	r21, 0xE0	; 224
     efc:	68 f1       	brcs	.+90     	; 0xf58 <__addsf3x+0x98>
     efe:	1a 16       	cp	r1, r26
     f00:	f0 40       	sbci	r31, 0x00	; 0
     f02:	a2 2f       	mov	r26, r18
     f04:	23 2f       	mov	r18, r19
     f06:	34 2f       	mov	r19, r20
     f08:	44 27       	eor	r20, r20
     f0a:	58 5f       	subi	r21, 0xF8	; 248
     f0c:	f3 cf       	rjmp	.-26     	; 0xef4 <__addsf3x+0x34>
     f0e:	46 95       	lsr	r20
     f10:	37 95       	ror	r19
     f12:	27 95       	ror	r18
     f14:	a7 95       	ror	r26
     f16:	f0 40       	sbci	r31, 0x00	; 0
     f18:	53 95       	inc	r21
     f1a:	c9 f7       	brne	.-14     	; 0xf0e <__addsf3x+0x4e>
     f1c:	7e f4       	brtc	.+30     	; 0xf3c <__addsf3x+0x7c>
     f1e:	1f 16       	cp	r1, r31
     f20:	ba 0b       	sbc	r27, r26
     f22:	62 0b       	sbc	r22, r18
     f24:	73 0b       	sbc	r23, r19
     f26:	84 0b       	sbc	r24, r20
     f28:	ba f0       	brmi	.+46     	; 0xf58 <__addsf3x+0x98>
     f2a:	91 50       	subi	r25, 0x01	; 1
     f2c:	a1 f0       	breq	.+40     	; 0xf56 <__addsf3x+0x96>
     f2e:	ff 0f       	add	r31, r31
     f30:	bb 1f       	adc	r27, r27
     f32:	66 1f       	adc	r22, r22
     f34:	77 1f       	adc	r23, r23
     f36:	88 1f       	adc	r24, r24
     f38:	c2 f7       	brpl	.-16     	; 0xf2a <__addsf3x+0x6a>
     f3a:	0e c0       	rjmp	.+28     	; 0xf58 <__addsf3x+0x98>
     f3c:	ba 0f       	add	r27, r26
     f3e:	62 1f       	adc	r22, r18
     f40:	73 1f       	adc	r23, r19
     f42:	84 1f       	adc	r24, r20
     f44:	48 f4       	brcc	.+18     	; 0xf58 <__addsf3x+0x98>
     f46:	87 95       	ror	r24
     f48:	77 95       	ror	r23
     f4a:	67 95       	ror	r22
     f4c:	b7 95       	ror	r27
     f4e:	f7 95       	ror	r31
     f50:	9e 3f       	cpi	r25, 0xFE	; 254
     f52:	08 f0       	brcs	.+2      	; 0xf56 <__addsf3x+0x96>
     f54:	b3 cf       	rjmp	.-154    	; 0xebc <__addsf3+0x1e>
     f56:	93 95       	inc	r25
     f58:	88 0f       	add	r24, r24
     f5a:	08 f0       	brcs	.+2      	; 0xf5e <__addsf3x+0x9e>
     f5c:	99 27       	eor	r25, r25
     f5e:	ee 0f       	add	r30, r30
     f60:	97 95       	ror	r25
     f62:	87 95       	ror	r24
     f64:	08 95       	ret

00000f66 <__divsf3>:
     f66:	0c d0       	rcall	.+24     	; 0xf80 <__divsf3x>
     f68:	eb c0       	rjmp	.+470    	; 0x1140 <__fp_round>
     f6a:	e3 d0       	rcall	.+454    	; 0x1132 <__fp_pscB>
     f6c:	40 f0       	brcs	.+16     	; 0xf7e <__divsf3+0x18>
     f6e:	da d0       	rcall	.+436    	; 0x1124 <__fp_pscA>
     f70:	30 f0       	brcs	.+12     	; 0xf7e <__divsf3+0x18>
     f72:	21 f4       	brne	.+8      	; 0xf7c <__divsf3+0x16>
     f74:	5f 3f       	cpi	r21, 0xFF	; 255
     f76:	19 f0       	breq	.+6      	; 0xf7e <__divsf3+0x18>
     f78:	cc c0       	rjmp	.+408    	; 0x1112 <__fp_inf>
     f7a:	51 11       	cpse	r21, r1
     f7c:	15 c1       	rjmp	.+554    	; 0x11a8 <__fp_szero>
     f7e:	cf c0       	rjmp	.+414    	; 0x111e <__fp_nan>

00000f80 <__divsf3x>:
     f80:	f0 d0       	rcall	.+480    	; 0x1162 <__fp_split3>
     f82:	98 f3       	brcs	.-26     	; 0xf6a <__divsf3+0x4>

00000f84 <__divsf3_pse>:
     f84:	99 23       	and	r25, r25
     f86:	c9 f3       	breq	.-14     	; 0xf7a <__divsf3+0x14>
     f88:	55 23       	and	r21, r21
     f8a:	b1 f3       	breq	.-20     	; 0xf78 <__divsf3+0x12>
     f8c:	95 1b       	sub	r25, r21
     f8e:	55 0b       	sbc	r21, r21
     f90:	bb 27       	eor	r27, r27
     f92:	aa 27       	eor	r26, r26
     f94:	62 17       	cp	r22, r18
     f96:	73 07       	cpc	r23, r19
     f98:	84 07       	cpc	r24, r20
     f9a:	38 f0       	brcs	.+14     	; 0xfaa <__divsf3_pse+0x26>
     f9c:	9f 5f       	subi	r25, 0xFF	; 255
     f9e:	5f 4f       	sbci	r21, 0xFF	; 255
     fa0:	22 0f       	add	r18, r18
     fa2:	33 1f       	adc	r19, r19
     fa4:	44 1f       	adc	r20, r20
     fa6:	aa 1f       	adc	r26, r26
     fa8:	a9 f3       	breq	.-22     	; 0xf94 <__divsf3_pse+0x10>
     faa:	33 d0       	rcall	.+102    	; 0x1012 <__divsf3_pse+0x8e>
     fac:	0e 2e       	mov	r0, r30
     fae:	3a f0       	brmi	.+14     	; 0xfbe <__divsf3_pse+0x3a>
     fb0:	e0 e8       	ldi	r30, 0x80	; 128
     fb2:	30 d0       	rcall	.+96     	; 0x1014 <__divsf3_pse+0x90>
     fb4:	91 50       	subi	r25, 0x01	; 1
     fb6:	50 40       	sbci	r21, 0x00	; 0
     fb8:	e6 95       	lsr	r30
     fba:	00 1c       	adc	r0, r0
     fbc:	ca f7       	brpl	.-14     	; 0xfb0 <__divsf3_pse+0x2c>
     fbe:	29 d0       	rcall	.+82     	; 0x1012 <__divsf3_pse+0x8e>
     fc0:	fe 2f       	mov	r31, r30
     fc2:	27 d0       	rcall	.+78     	; 0x1012 <__divsf3_pse+0x8e>
     fc4:	66 0f       	add	r22, r22
     fc6:	77 1f       	adc	r23, r23
     fc8:	88 1f       	adc	r24, r24
     fca:	bb 1f       	adc	r27, r27
     fcc:	26 17       	cp	r18, r22
     fce:	37 07       	cpc	r19, r23
     fd0:	48 07       	cpc	r20, r24
     fd2:	ab 07       	cpc	r26, r27
     fd4:	b0 e8       	ldi	r27, 0x80	; 128
     fd6:	09 f0       	breq	.+2      	; 0xfda <__divsf3_pse+0x56>
     fd8:	bb 0b       	sbc	r27, r27
     fda:	80 2d       	mov	r24, r0
     fdc:	bf 01       	movw	r22, r30
     fde:	ff 27       	eor	r31, r31
     fe0:	93 58       	subi	r25, 0x83	; 131
     fe2:	5f 4f       	sbci	r21, 0xFF	; 255
     fe4:	2a f0       	brmi	.+10     	; 0xff0 <__divsf3_pse+0x6c>
     fe6:	9e 3f       	cpi	r25, 0xFE	; 254
     fe8:	51 05       	cpc	r21, r1
     fea:	68 f0       	brcs	.+26     	; 0x1006 <__divsf3_pse+0x82>
     fec:	92 c0       	rjmp	.+292    	; 0x1112 <__fp_inf>
     fee:	dc c0       	rjmp	.+440    	; 0x11a8 <__fp_szero>
     ff0:	5f 3f       	cpi	r21, 0xFF	; 255
     ff2:	ec f3       	brlt	.-6      	; 0xfee <__divsf3_pse+0x6a>
     ff4:	98 3e       	cpi	r25, 0xE8	; 232
     ff6:	dc f3       	brlt	.-10     	; 0xfee <__divsf3_pse+0x6a>
     ff8:	86 95       	lsr	r24
     ffa:	77 95       	ror	r23
     ffc:	67 95       	ror	r22
     ffe:	b7 95       	ror	r27
    1000:	f7 95       	ror	r31
    1002:	9f 5f       	subi	r25, 0xFF	; 255
    1004:	c9 f7       	brne	.-14     	; 0xff8 <__divsf3_pse+0x74>
    1006:	88 0f       	add	r24, r24
    1008:	91 1d       	adc	r25, r1
    100a:	96 95       	lsr	r25
    100c:	87 95       	ror	r24
    100e:	97 f9       	bld	r25, 7
    1010:	08 95       	ret
    1012:	e1 e0       	ldi	r30, 0x01	; 1
    1014:	66 0f       	add	r22, r22
    1016:	77 1f       	adc	r23, r23
    1018:	88 1f       	adc	r24, r24
    101a:	bb 1f       	adc	r27, r27
    101c:	62 17       	cp	r22, r18
    101e:	73 07       	cpc	r23, r19
    1020:	84 07       	cpc	r24, r20
    1022:	ba 07       	cpc	r27, r26
    1024:	20 f0       	brcs	.+8      	; 0x102e <__divsf3_pse+0xaa>
    1026:	62 1b       	sub	r22, r18
    1028:	73 0b       	sbc	r23, r19
    102a:	84 0b       	sbc	r24, r20
    102c:	ba 0b       	sbc	r27, r26
    102e:	ee 1f       	adc	r30, r30
    1030:	88 f7       	brcc	.-30     	; 0x1014 <__divsf3_pse+0x90>
    1032:	e0 95       	com	r30
    1034:	08 95       	ret

00001036 <__fixsfsi>:
    1036:	04 d0       	rcall	.+8      	; 0x1040 <__fixunssfsi>
    1038:	68 94       	set
    103a:	b1 11       	cpse	r27, r1
    103c:	b5 c0       	rjmp	.+362    	; 0x11a8 <__fp_szero>
    103e:	08 95       	ret

00001040 <__fixunssfsi>:
    1040:	98 d0       	rcall	.+304    	; 0x1172 <__fp_splitA>
    1042:	88 f0       	brcs	.+34     	; 0x1066 <__fixunssfsi+0x26>
    1044:	9f 57       	subi	r25, 0x7F	; 127
    1046:	90 f0       	brcs	.+36     	; 0x106c <__fixunssfsi+0x2c>
    1048:	b9 2f       	mov	r27, r25
    104a:	99 27       	eor	r25, r25
    104c:	b7 51       	subi	r27, 0x17	; 23
    104e:	a0 f0       	brcs	.+40     	; 0x1078 <__fixunssfsi+0x38>
    1050:	d1 f0       	breq	.+52     	; 0x1086 <__fixunssfsi+0x46>
    1052:	66 0f       	add	r22, r22
    1054:	77 1f       	adc	r23, r23
    1056:	88 1f       	adc	r24, r24
    1058:	99 1f       	adc	r25, r25
    105a:	1a f0       	brmi	.+6      	; 0x1062 <__fixunssfsi+0x22>
    105c:	ba 95       	dec	r27
    105e:	c9 f7       	brne	.-14     	; 0x1052 <__fixunssfsi+0x12>
    1060:	12 c0       	rjmp	.+36     	; 0x1086 <__fixunssfsi+0x46>
    1062:	b1 30       	cpi	r27, 0x01	; 1
    1064:	81 f0       	breq	.+32     	; 0x1086 <__fixunssfsi+0x46>
    1066:	9f d0       	rcall	.+318    	; 0x11a6 <__fp_zero>
    1068:	b1 e0       	ldi	r27, 0x01	; 1
    106a:	08 95       	ret
    106c:	9c c0       	rjmp	.+312    	; 0x11a6 <__fp_zero>
    106e:	67 2f       	mov	r22, r23
    1070:	78 2f       	mov	r23, r24
    1072:	88 27       	eor	r24, r24
    1074:	b8 5f       	subi	r27, 0xF8	; 248
    1076:	39 f0       	breq	.+14     	; 0x1086 <__fixunssfsi+0x46>
    1078:	b9 3f       	cpi	r27, 0xF9	; 249
    107a:	cc f3       	brlt	.-14     	; 0x106e <__fixunssfsi+0x2e>
    107c:	86 95       	lsr	r24
    107e:	77 95       	ror	r23
    1080:	67 95       	ror	r22
    1082:	b3 95       	inc	r27
    1084:	d9 f7       	brne	.-10     	; 0x107c <__fixunssfsi+0x3c>
    1086:	3e f4       	brtc	.+14     	; 0x1096 <__fixunssfsi+0x56>
    1088:	90 95       	com	r25
    108a:	80 95       	com	r24
    108c:	70 95       	com	r23
    108e:	61 95       	neg	r22
    1090:	7f 4f       	sbci	r23, 0xFF	; 255
    1092:	8f 4f       	sbci	r24, 0xFF	; 255
    1094:	9f 4f       	sbci	r25, 0xFF	; 255
    1096:	08 95       	ret

00001098 <__floatunsisf>:
    1098:	e8 94       	clt
    109a:	09 c0       	rjmp	.+18     	; 0x10ae <__floatsisf+0x12>

0000109c <__floatsisf>:
    109c:	97 fb       	bst	r25, 7
    109e:	3e f4       	brtc	.+14     	; 0x10ae <__floatsisf+0x12>
    10a0:	90 95       	com	r25
    10a2:	80 95       	com	r24
    10a4:	70 95       	com	r23
    10a6:	61 95       	neg	r22
    10a8:	7f 4f       	sbci	r23, 0xFF	; 255
    10aa:	8f 4f       	sbci	r24, 0xFF	; 255
    10ac:	9f 4f       	sbci	r25, 0xFF	; 255
    10ae:	99 23       	and	r25, r25
    10b0:	a9 f0       	breq	.+42     	; 0x10dc <__floatsisf+0x40>
    10b2:	f9 2f       	mov	r31, r25
    10b4:	96 e9       	ldi	r25, 0x96	; 150
    10b6:	bb 27       	eor	r27, r27
    10b8:	93 95       	inc	r25
    10ba:	f6 95       	lsr	r31
    10bc:	87 95       	ror	r24
    10be:	77 95       	ror	r23
    10c0:	67 95       	ror	r22
    10c2:	b7 95       	ror	r27
    10c4:	f1 11       	cpse	r31, r1
    10c6:	f8 cf       	rjmp	.-16     	; 0x10b8 <__floatsisf+0x1c>
    10c8:	fa f4       	brpl	.+62     	; 0x1108 <__floatsisf+0x6c>
    10ca:	bb 0f       	add	r27, r27
    10cc:	11 f4       	brne	.+4      	; 0x10d2 <__floatsisf+0x36>
    10ce:	60 ff       	sbrs	r22, 0
    10d0:	1b c0       	rjmp	.+54     	; 0x1108 <__floatsisf+0x6c>
    10d2:	6f 5f       	subi	r22, 0xFF	; 255
    10d4:	7f 4f       	sbci	r23, 0xFF	; 255
    10d6:	8f 4f       	sbci	r24, 0xFF	; 255
    10d8:	9f 4f       	sbci	r25, 0xFF	; 255
    10da:	16 c0       	rjmp	.+44     	; 0x1108 <__floatsisf+0x6c>
    10dc:	88 23       	and	r24, r24
    10de:	11 f0       	breq	.+4      	; 0x10e4 <__floatsisf+0x48>
    10e0:	96 e9       	ldi	r25, 0x96	; 150
    10e2:	11 c0       	rjmp	.+34     	; 0x1106 <__floatsisf+0x6a>
    10e4:	77 23       	and	r23, r23
    10e6:	21 f0       	breq	.+8      	; 0x10f0 <__floatsisf+0x54>
    10e8:	9e e8       	ldi	r25, 0x8E	; 142
    10ea:	87 2f       	mov	r24, r23
    10ec:	76 2f       	mov	r23, r22
    10ee:	05 c0       	rjmp	.+10     	; 0x10fa <__floatsisf+0x5e>
    10f0:	66 23       	and	r22, r22
    10f2:	71 f0       	breq	.+28     	; 0x1110 <__floatsisf+0x74>
    10f4:	96 e8       	ldi	r25, 0x86	; 134
    10f6:	86 2f       	mov	r24, r22
    10f8:	70 e0       	ldi	r23, 0x00	; 0
    10fa:	60 e0       	ldi	r22, 0x00	; 0
    10fc:	2a f0       	brmi	.+10     	; 0x1108 <__floatsisf+0x6c>
    10fe:	9a 95       	dec	r25
    1100:	66 0f       	add	r22, r22
    1102:	77 1f       	adc	r23, r23
    1104:	88 1f       	adc	r24, r24
    1106:	da f7       	brpl	.-10     	; 0x10fe <__floatsisf+0x62>
    1108:	88 0f       	add	r24, r24
    110a:	96 95       	lsr	r25
    110c:	87 95       	ror	r24
    110e:	97 f9       	bld	r25, 7
    1110:	08 95       	ret

00001112 <__fp_inf>:
    1112:	97 f9       	bld	r25, 7
    1114:	9f 67       	ori	r25, 0x7F	; 127
    1116:	80 e8       	ldi	r24, 0x80	; 128
    1118:	70 e0       	ldi	r23, 0x00	; 0
    111a:	60 e0       	ldi	r22, 0x00	; 0
    111c:	08 95       	ret

0000111e <__fp_nan>:
    111e:	9f ef       	ldi	r25, 0xFF	; 255
    1120:	80 ec       	ldi	r24, 0xC0	; 192
    1122:	08 95       	ret

00001124 <__fp_pscA>:
    1124:	00 24       	eor	r0, r0
    1126:	0a 94       	dec	r0
    1128:	16 16       	cp	r1, r22
    112a:	17 06       	cpc	r1, r23
    112c:	18 06       	cpc	r1, r24
    112e:	09 06       	cpc	r0, r25
    1130:	08 95       	ret

00001132 <__fp_pscB>:
    1132:	00 24       	eor	r0, r0
    1134:	0a 94       	dec	r0
    1136:	12 16       	cp	r1, r18
    1138:	13 06       	cpc	r1, r19
    113a:	14 06       	cpc	r1, r20
    113c:	05 06       	cpc	r0, r21
    113e:	08 95       	ret

00001140 <__fp_round>:
    1140:	09 2e       	mov	r0, r25
    1142:	03 94       	inc	r0
    1144:	00 0c       	add	r0, r0
    1146:	11 f4       	brne	.+4      	; 0x114c <__fp_round+0xc>
    1148:	88 23       	and	r24, r24
    114a:	52 f0       	brmi	.+20     	; 0x1160 <__fp_round+0x20>
    114c:	bb 0f       	add	r27, r27
    114e:	40 f4       	brcc	.+16     	; 0x1160 <__fp_round+0x20>
    1150:	bf 2b       	or	r27, r31
    1152:	11 f4       	brne	.+4      	; 0x1158 <__fp_round+0x18>
    1154:	60 ff       	sbrs	r22, 0
    1156:	04 c0       	rjmp	.+8      	; 0x1160 <__fp_round+0x20>
    1158:	6f 5f       	subi	r22, 0xFF	; 255
    115a:	7f 4f       	sbci	r23, 0xFF	; 255
    115c:	8f 4f       	sbci	r24, 0xFF	; 255
    115e:	9f 4f       	sbci	r25, 0xFF	; 255
    1160:	08 95       	ret

00001162 <__fp_split3>:
    1162:	57 fd       	sbrc	r21, 7
    1164:	90 58       	subi	r25, 0x80	; 128
    1166:	44 0f       	add	r20, r20
    1168:	55 1f       	adc	r21, r21
    116a:	59 f0       	breq	.+22     	; 0x1182 <__fp_splitA+0x10>
    116c:	5f 3f       	cpi	r21, 0xFF	; 255
    116e:	71 f0       	breq	.+28     	; 0x118c <__fp_splitA+0x1a>
    1170:	47 95       	ror	r20

00001172 <__fp_splitA>:
    1172:	88 0f       	add	r24, r24
    1174:	97 fb       	bst	r25, 7
    1176:	99 1f       	adc	r25, r25
    1178:	61 f0       	breq	.+24     	; 0x1192 <__fp_splitA+0x20>
    117a:	9f 3f       	cpi	r25, 0xFF	; 255
    117c:	79 f0       	breq	.+30     	; 0x119c <__fp_splitA+0x2a>
    117e:	87 95       	ror	r24
    1180:	08 95       	ret
    1182:	12 16       	cp	r1, r18
    1184:	13 06       	cpc	r1, r19
    1186:	14 06       	cpc	r1, r20
    1188:	55 1f       	adc	r21, r21
    118a:	f2 cf       	rjmp	.-28     	; 0x1170 <__fp_split3+0xe>
    118c:	46 95       	lsr	r20
    118e:	f1 df       	rcall	.-30     	; 0x1172 <__fp_splitA>
    1190:	08 c0       	rjmp	.+16     	; 0x11a2 <__fp_splitA+0x30>
    1192:	16 16       	cp	r1, r22
    1194:	17 06       	cpc	r1, r23
    1196:	18 06       	cpc	r1, r24
    1198:	99 1f       	adc	r25, r25
    119a:	f1 cf       	rjmp	.-30     	; 0x117e <__fp_splitA+0xc>
    119c:	86 95       	lsr	r24
    119e:	71 05       	cpc	r23, r1
    11a0:	61 05       	cpc	r22, r1
    11a2:	08 94       	sec
    11a4:	08 95       	ret

000011a6 <__fp_zero>:
    11a6:	e8 94       	clt

000011a8 <__fp_szero>:
    11a8:	bb 27       	eor	r27, r27
    11aa:	66 27       	eor	r22, r22
    11ac:	77 27       	eor	r23, r23
    11ae:	cb 01       	movw	r24, r22
    11b0:	97 f9       	bld	r25, 7
    11b2:	08 95       	ret

000011b4 <__mulsf3>:
    11b4:	0b d0       	rcall	.+22     	; 0x11cc <__mulsf3x>
    11b6:	c4 cf       	rjmp	.-120    	; 0x1140 <__fp_round>
    11b8:	b5 df       	rcall	.-150    	; 0x1124 <__fp_pscA>
    11ba:	28 f0       	brcs	.+10     	; 0x11c6 <__mulsf3+0x12>
    11bc:	ba df       	rcall	.-140    	; 0x1132 <__fp_pscB>
    11be:	18 f0       	brcs	.+6      	; 0x11c6 <__mulsf3+0x12>
    11c0:	95 23       	and	r25, r21
    11c2:	09 f0       	breq	.+2      	; 0x11c6 <__mulsf3+0x12>
    11c4:	a6 cf       	rjmp	.-180    	; 0x1112 <__fp_inf>
    11c6:	ab cf       	rjmp	.-170    	; 0x111e <__fp_nan>
    11c8:	11 24       	eor	r1, r1
    11ca:	ee cf       	rjmp	.-36     	; 0x11a8 <__fp_szero>

000011cc <__mulsf3x>:
    11cc:	ca df       	rcall	.-108    	; 0x1162 <__fp_split3>
    11ce:	a0 f3       	brcs	.-24     	; 0x11b8 <__mulsf3+0x4>

000011d0 <__mulsf3_pse>:
    11d0:	95 9f       	mul	r25, r21
    11d2:	d1 f3       	breq	.-12     	; 0x11c8 <__mulsf3+0x14>
    11d4:	95 0f       	add	r25, r21
    11d6:	50 e0       	ldi	r21, 0x00	; 0
    11d8:	55 1f       	adc	r21, r21
    11da:	62 9f       	mul	r22, r18
    11dc:	f0 01       	movw	r30, r0
    11de:	72 9f       	mul	r23, r18
    11e0:	bb 27       	eor	r27, r27
    11e2:	f0 0d       	add	r31, r0
    11e4:	b1 1d       	adc	r27, r1
    11e6:	63 9f       	mul	r22, r19
    11e8:	aa 27       	eor	r26, r26
    11ea:	f0 0d       	add	r31, r0
    11ec:	b1 1d       	adc	r27, r1
    11ee:	aa 1f       	adc	r26, r26
    11f0:	64 9f       	mul	r22, r20
    11f2:	66 27       	eor	r22, r22
    11f4:	b0 0d       	add	r27, r0
    11f6:	a1 1d       	adc	r26, r1
    11f8:	66 1f       	adc	r22, r22
    11fa:	82 9f       	mul	r24, r18
    11fc:	22 27       	eor	r18, r18
    11fe:	b0 0d       	add	r27, r0
    1200:	a1 1d       	adc	r26, r1
    1202:	62 1f       	adc	r22, r18
    1204:	73 9f       	mul	r23, r19
    1206:	b0 0d       	add	r27, r0
    1208:	a1 1d       	adc	r26, r1
    120a:	62 1f       	adc	r22, r18
    120c:	83 9f       	mul	r24, r19
    120e:	a0 0d       	add	r26, r0
    1210:	61 1d       	adc	r22, r1
    1212:	22 1f       	adc	r18, r18
    1214:	74 9f       	mul	r23, r20
    1216:	33 27       	eor	r19, r19
    1218:	a0 0d       	add	r26, r0
    121a:	61 1d       	adc	r22, r1
    121c:	23 1f       	adc	r18, r19
    121e:	84 9f       	mul	r24, r20
    1220:	60 0d       	add	r22, r0
    1222:	21 1d       	adc	r18, r1
    1224:	82 2f       	mov	r24, r18
    1226:	76 2f       	mov	r23, r22
    1228:	6a 2f       	mov	r22, r26
    122a:	11 24       	eor	r1, r1
    122c:	9f 57       	subi	r25, 0x7F	; 127
    122e:	50 40       	sbci	r21, 0x00	; 0
    1230:	8a f0       	brmi	.+34     	; 0x1254 <__mulsf3_pse+0x84>
    1232:	e1 f0       	breq	.+56     	; 0x126c <__mulsf3_pse+0x9c>
    1234:	88 23       	and	r24, r24
    1236:	4a f0       	brmi	.+18     	; 0x124a <__mulsf3_pse+0x7a>
    1238:	ee 0f       	add	r30, r30
    123a:	ff 1f       	adc	r31, r31
    123c:	bb 1f       	adc	r27, r27
    123e:	66 1f       	adc	r22, r22
    1240:	77 1f       	adc	r23, r23
    1242:	88 1f       	adc	r24, r24
    1244:	91 50       	subi	r25, 0x01	; 1
    1246:	50 40       	sbci	r21, 0x00	; 0
    1248:	a9 f7       	brne	.-22     	; 0x1234 <__mulsf3_pse+0x64>
    124a:	9e 3f       	cpi	r25, 0xFE	; 254
    124c:	51 05       	cpc	r21, r1
    124e:	70 f0       	brcs	.+28     	; 0x126c <__mulsf3_pse+0x9c>
    1250:	60 cf       	rjmp	.-320    	; 0x1112 <__fp_inf>
    1252:	aa cf       	rjmp	.-172    	; 0x11a8 <__fp_szero>
    1254:	5f 3f       	cpi	r21, 0xFF	; 255
    1256:	ec f3       	brlt	.-6      	; 0x1252 <__mulsf3_pse+0x82>
    1258:	98 3e       	cpi	r25, 0xE8	; 232
    125a:	dc f3       	brlt	.-10     	; 0x1252 <__mulsf3_pse+0x82>
    125c:	86 95       	lsr	r24
    125e:	77 95       	ror	r23
    1260:	67 95       	ror	r22
    1262:	b7 95       	ror	r27
    1264:	f7 95       	ror	r31
    1266:	e7 95       	ror	r30
    1268:	9f 5f       	subi	r25, 0xFF	; 255
    126a:	c1 f7       	brne	.-16     	; 0x125c <__mulsf3_pse+0x8c>
    126c:	fe 2b       	or	r31, r30
    126e:	88 0f       	add	r24, r24
    1270:	91 1d       	adc	r25, r1
    1272:	96 95       	lsr	r25
    1274:	87 95       	ror	r24
    1276:	97 f9       	bld	r25, 7
    1278:	08 95       	ret

0000127a <__divmodhi4>:
    127a:	97 fb       	bst	r25, 7
    127c:	07 2e       	mov	r0, r23
    127e:	16 f4       	brtc	.+4      	; 0x1284 <__divmodhi4+0xa>
    1280:	00 94       	com	r0
    1282:	07 d0       	rcall	.+14     	; 0x1292 <__divmodhi4_neg1>
    1284:	77 fd       	sbrc	r23, 7
    1286:	09 d0       	rcall	.+18     	; 0x129a <__divmodhi4_neg2>
    1288:	0e 94 51 09 	call	0x12a2	; 0x12a2 <__udivmodhi4>
    128c:	07 fc       	sbrc	r0, 7
    128e:	05 d0       	rcall	.+10     	; 0x129a <__divmodhi4_neg2>
    1290:	3e f4       	brtc	.+14     	; 0x12a0 <__divmodhi4_exit>

00001292 <__divmodhi4_neg1>:
    1292:	90 95       	com	r25
    1294:	81 95       	neg	r24
    1296:	9f 4f       	sbci	r25, 0xFF	; 255
    1298:	08 95       	ret

0000129a <__divmodhi4_neg2>:
    129a:	70 95       	com	r23
    129c:	61 95       	neg	r22
    129e:	7f 4f       	sbci	r23, 0xFF	; 255

000012a0 <__divmodhi4_exit>:
    12a0:	08 95       	ret

000012a2 <__udivmodhi4>:
    12a2:	aa 1b       	sub	r26, r26
    12a4:	bb 1b       	sub	r27, r27
    12a6:	51 e1       	ldi	r21, 0x11	; 17
    12a8:	07 c0       	rjmp	.+14     	; 0x12b8 <__udivmodhi4_ep>

000012aa <__udivmodhi4_loop>:
    12aa:	aa 1f       	adc	r26, r26
    12ac:	bb 1f       	adc	r27, r27
    12ae:	a6 17       	cp	r26, r22
    12b0:	b7 07       	cpc	r27, r23
    12b2:	10 f0       	brcs	.+4      	; 0x12b8 <__udivmodhi4_ep>
    12b4:	a6 1b       	sub	r26, r22
    12b6:	b7 0b       	sbc	r27, r23

000012b8 <__udivmodhi4_ep>:
    12b8:	88 1f       	adc	r24, r24
    12ba:	99 1f       	adc	r25, r25
    12bc:	5a 95       	dec	r21
    12be:	a9 f7       	brne	.-22     	; 0x12aa <__udivmodhi4_loop>
    12c0:	80 95       	com	r24
    12c2:	90 95       	com	r25
    12c4:	bc 01       	movw	r22, r24
    12c6:	cd 01       	movw	r24, r26
    12c8:	08 95       	ret

000012ca <fdevopen>:
    12ca:	0f 93       	push	r16
    12cc:	1f 93       	push	r17
    12ce:	cf 93       	push	r28
    12d0:	df 93       	push	r29
    12d2:	ec 01       	movw	r28, r24
    12d4:	8b 01       	movw	r16, r22
    12d6:	00 97       	sbiw	r24, 0x00	; 0
    12d8:	31 f4       	brne	.+12     	; 0x12e6 <fdevopen+0x1c>
    12da:	61 15       	cp	r22, r1
    12dc:	71 05       	cpc	r23, r1
    12de:	19 f4       	brne	.+6      	; 0x12e6 <fdevopen+0x1c>
    12e0:	80 e0       	ldi	r24, 0x00	; 0
    12e2:	90 e0       	ldi	r25, 0x00	; 0
    12e4:	38 c0       	rjmp	.+112    	; 0x1356 <fdevopen+0x8c>
    12e6:	6e e0       	ldi	r22, 0x0E	; 14
    12e8:	70 e0       	ldi	r23, 0x00	; 0
    12ea:	81 e0       	ldi	r24, 0x01	; 1
    12ec:	90 e0       	ldi	r25, 0x00	; 0
    12ee:	0e 94 c3 0b 	call	0x1786	; 0x1786 <calloc>
    12f2:	fc 01       	movw	r30, r24
    12f4:	00 97       	sbiw	r24, 0x00	; 0
    12f6:	a1 f3       	breq	.-24     	; 0x12e0 <fdevopen+0x16>
    12f8:	80 e8       	ldi	r24, 0x80	; 128
    12fa:	83 83       	std	Z+3, r24	; 0x03
    12fc:	01 15       	cp	r16, r1
    12fe:	11 05       	cpc	r17, r1
    1300:	71 f0       	breq	.+28     	; 0x131e <fdevopen+0x54>
    1302:	13 87       	std	Z+11, r17	; 0x0b
    1304:	02 87       	std	Z+10, r16	; 0x0a
    1306:	81 e8       	ldi	r24, 0x81	; 129
    1308:	83 83       	std	Z+3, r24	; 0x03
    130a:	80 91 47 04 	lds	r24, 0x0447
    130e:	90 91 48 04 	lds	r25, 0x0448
    1312:	89 2b       	or	r24, r25
    1314:	21 f4       	brne	.+8      	; 0x131e <fdevopen+0x54>
    1316:	f0 93 48 04 	sts	0x0448, r31
    131a:	e0 93 47 04 	sts	0x0447, r30
    131e:	20 97       	sbiw	r28, 0x00	; 0
    1320:	c9 f0       	breq	.+50     	; 0x1354 <fdevopen+0x8a>
    1322:	d1 87       	std	Z+9, r29	; 0x09
    1324:	c0 87       	std	Z+8, r28	; 0x08
    1326:	83 81       	ldd	r24, Z+3	; 0x03
    1328:	82 60       	ori	r24, 0x02	; 2
    132a:	83 83       	std	Z+3, r24	; 0x03
    132c:	80 91 49 04 	lds	r24, 0x0449
    1330:	90 91 4a 04 	lds	r25, 0x044A
    1334:	89 2b       	or	r24, r25
    1336:	71 f4       	brne	.+28     	; 0x1354 <fdevopen+0x8a>
    1338:	f0 93 4a 04 	sts	0x044A, r31
    133c:	e0 93 49 04 	sts	0x0449, r30
    1340:	80 91 4b 04 	lds	r24, 0x044B
    1344:	90 91 4c 04 	lds	r25, 0x044C
    1348:	89 2b       	or	r24, r25
    134a:	21 f4       	brne	.+8      	; 0x1354 <fdevopen+0x8a>
    134c:	f0 93 4c 04 	sts	0x044C, r31
    1350:	e0 93 4b 04 	sts	0x044B, r30
    1354:	cf 01       	movw	r24, r30
    1356:	df 91       	pop	r29
    1358:	cf 91       	pop	r28
    135a:	1f 91       	pop	r17
    135c:	0f 91       	pop	r16
    135e:	08 95       	ret

00001360 <printf>:
    1360:	a0 e0       	ldi	r26, 0x00	; 0
    1362:	b0 e0       	ldi	r27, 0x00	; 0
    1364:	e6 eb       	ldi	r30, 0xB6	; 182
    1366:	f9 e0       	ldi	r31, 0x09	; 9
    1368:	0c 94 c3 0d 	jmp	0x1b86	; 0x1b86 <__prologue_saves__+0x20>
    136c:	fe 01       	movw	r30, r28
    136e:	35 96       	adiw	r30, 0x05	; 5
    1370:	61 91       	ld	r22, Z+
    1372:	71 91       	ld	r23, Z+
    1374:	af 01       	movw	r20, r30
    1376:	80 91 49 04 	lds	r24, 0x0449
    137a:	90 91 4a 04 	lds	r25, 0x044A
    137e:	0e 94 f1 09 	call	0x13e2	; 0x13e2 <vfprintf>
    1382:	e2 e0       	ldi	r30, 0x02	; 2
    1384:	0c 94 df 0d 	jmp	0x1bbe	; 0x1bbe <__epilogue_restores__+0x20>

00001388 <puts>:
    1388:	0f 93       	push	r16
    138a:	1f 93       	push	r17
    138c:	cf 93       	push	r28
    138e:	df 93       	push	r29
    1390:	e0 91 49 04 	lds	r30, 0x0449
    1394:	f0 91 4a 04 	lds	r31, 0x044A
    1398:	23 81       	ldd	r18, Z+3	; 0x03
    139a:	21 ff       	sbrs	r18, 1
    139c:	1b c0       	rjmp	.+54     	; 0x13d4 <puts+0x4c>
    139e:	ec 01       	movw	r28, r24
    13a0:	00 e0       	ldi	r16, 0x00	; 0
    13a2:	10 e0       	ldi	r17, 0x00	; 0
    13a4:	89 91       	ld	r24, Y+
    13a6:	60 91 49 04 	lds	r22, 0x0449
    13aa:	70 91 4a 04 	lds	r23, 0x044A
    13ae:	db 01       	movw	r26, r22
    13b0:	18 96       	adiw	r26, 0x08	; 8
    13b2:	ed 91       	ld	r30, X+
    13b4:	fc 91       	ld	r31, X
    13b6:	19 97       	sbiw	r26, 0x09	; 9
    13b8:	88 23       	and	r24, r24
    13ba:	31 f0       	breq	.+12     	; 0x13c8 <puts+0x40>
    13bc:	09 95       	icall
    13be:	89 2b       	or	r24, r25
    13c0:	89 f3       	breq	.-30     	; 0x13a4 <puts+0x1c>
    13c2:	0f ef       	ldi	r16, 0xFF	; 255
    13c4:	1f ef       	ldi	r17, 0xFF	; 255
    13c6:	ee cf       	rjmp	.-36     	; 0x13a4 <puts+0x1c>
    13c8:	8a e0       	ldi	r24, 0x0A	; 10
    13ca:	09 95       	icall
    13cc:	89 2b       	or	r24, r25
    13ce:	11 f4       	brne	.+4      	; 0x13d4 <puts+0x4c>
    13d0:	c8 01       	movw	r24, r16
    13d2:	02 c0       	rjmp	.+4      	; 0x13d8 <puts+0x50>
    13d4:	8f ef       	ldi	r24, 0xFF	; 255
    13d6:	9f ef       	ldi	r25, 0xFF	; 255
    13d8:	df 91       	pop	r29
    13da:	cf 91       	pop	r28
    13dc:	1f 91       	pop	r17
    13de:	0f 91       	pop	r16
    13e0:	08 95       	ret

000013e2 <vfprintf>:
    13e2:	ac e0       	ldi	r26, 0x0C	; 12
    13e4:	b0 e0       	ldi	r27, 0x00	; 0
    13e6:	e7 ef       	ldi	r30, 0xF7	; 247
    13e8:	f9 e0       	ldi	r31, 0x09	; 9
    13ea:	0c 94 b3 0d 	jmp	0x1b66	; 0x1b66 <__prologue_saves__>
    13ee:	7c 01       	movw	r14, r24
    13f0:	6b 01       	movw	r12, r22
    13f2:	8a 01       	movw	r16, r20
    13f4:	fc 01       	movw	r30, r24
    13f6:	17 82       	std	Z+7, r1	; 0x07
    13f8:	16 82       	std	Z+6, r1	; 0x06
    13fa:	83 81       	ldd	r24, Z+3	; 0x03
    13fc:	81 ff       	sbrs	r24, 1
    13fe:	bd c1       	rjmp	.+890    	; 0x177a <vfprintf+0x398>
    1400:	ce 01       	movw	r24, r28
    1402:	01 96       	adiw	r24, 0x01	; 1
    1404:	4c 01       	movw	r8, r24
    1406:	f7 01       	movw	r30, r14
    1408:	93 81       	ldd	r25, Z+3	; 0x03
    140a:	f6 01       	movw	r30, r12
    140c:	93 fd       	sbrc	r25, 3
    140e:	85 91       	lpm	r24, Z+
    1410:	93 ff       	sbrs	r25, 3
    1412:	81 91       	ld	r24, Z+
    1414:	6f 01       	movw	r12, r30
    1416:	88 23       	and	r24, r24
    1418:	09 f4       	brne	.+2      	; 0x141c <vfprintf+0x3a>
    141a:	ab c1       	rjmp	.+854    	; 0x1772 <vfprintf+0x390>
    141c:	85 32       	cpi	r24, 0x25	; 37
    141e:	39 f4       	brne	.+14     	; 0x142e <vfprintf+0x4c>
    1420:	93 fd       	sbrc	r25, 3
    1422:	85 91       	lpm	r24, Z+
    1424:	93 ff       	sbrs	r25, 3
    1426:	81 91       	ld	r24, Z+
    1428:	6f 01       	movw	r12, r30
    142a:	85 32       	cpi	r24, 0x25	; 37
    142c:	29 f4       	brne	.+10     	; 0x1438 <vfprintf+0x56>
    142e:	b7 01       	movw	r22, r14
    1430:	90 e0       	ldi	r25, 0x00	; 0
    1432:	0e 94 23 0d 	call	0x1a46	; 0x1a46 <fputc>
    1436:	e7 cf       	rjmp	.-50     	; 0x1406 <vfprintf+0x24>
    1438:	51 2c       	mov	r5, r1
    143a:	31 2c       	mov	r3, r1
    143c:	20 e0       	ldi	r18, 0x00	; 0
    143e:	20 32       	cpi	r18, 0x20	; 32
    1440:	a0 f4       	brcc	.+40     	; 0x146a <vfprintf+0x88>
    1442:	8b 32       	cpi	r24, 0x2B	; 43
    1444:	69 f0       	breq	.+26     	; 0x1460 <vfprintf+0x7e>
    1446:	30 f4       	brcc	.+12     	; 0x1454 <vfprintf+0x72>
    1448:	80 32       	cpi	r24, 0x20	; 32
    144a:	59 f0       	breq	.+22     	; 0x1462 <vfprintf+0x80>
    144c:	83 32       	cpi	r24, 0x23	; 35
    144e:	69 f4       	brne	.+26     	; 0x146a <vfprintf+0x88>
    1450:	20 61       	ori	r18, 0x10	; 16
    1452:	2c c0       	rjmp	.+88     	; 0x14ac <vfprintf+0xca>
    1454:	8d 32       	cpi	r24, 0x2D	; 45
    1456:	39 f0       	breq	.+14     	; 0x1466 <vfprintf+0x84>
    1458:	80 33       	cpi	r24, 0x30	; 48
    145a:	39 f4       	brne	.+14     	; 0x146a <vfprintf+0x88>
    145c:	21 60       	ori	r18, 0x01	; 1
    145e:	26 c0       	rjmp	.+76     	; 0x14ac <vfprintf+0xca>
    1460:	22 60       	ori	r18, 0x02	; 2
    1462:	24 60       	ori	r18, 0x04	; 4
    1464:	23 c0       	rjmp	.+70     	; 0x14ac <vfprintf+0xca>
    1466:	28 60       	ori	r18, 0x08	; 8
    1468:	21 c0       	rjmp	.+66     	; 0x14ac <vfprintf+0xca>
    146a:	27 fd       	sbrc	r18, 7
    146c:	27 c0       	rjmp	.+78     	; 0x14bc <vfprintf+0xda>
    146e:	30 ed       	ldi	r19, 0xD0	; 208
    1470:	38 0f       	add	r19, r24
    1472:	3a 30       	cpi	r19, 0x0A	; 10
    1474:	78 f4       	brcc	.+30     	; 0x1494 <vfprintf+0xb2>
    1476:	26 ff       	sbrs	r18, 6
    1478:	06 c0       	rjmp	.+12     	; 0x1486 <vfprintf+0xa4>
    147a:	fa e0       	ldi	r31, 0x0A	; 10
    147c:	5f 9e       	mul	r5, r31
    147e:	30 0d       	add	r19, r0
    1480:	11 24       	eor	r1, r1
    1482:	53 2e       	mov	r5, r19
    1484:	13 c0       	rjmp	.+38     	; 0x14ac <vfprintf+0xca>
    1486:	8a e0       	ldi	r24, 0x0A	; 10
    1488:	38 9e       	mul	r3, r24
    148a:	30 0d       	add	r19, r0
    148c:	11 24       	eor	r1, r1
    148e:	33 2e       	mov	r3, r19
    1490:	20 62       	ori	r18, 0x20	; 32
    1492:	0c c0       	rjmp	.+24     	; 0x14ac <vfprintf+0xca>
    1494:	8e 32       	cpi	r24, 0x2E	; 46
    1496:	21 f4       	brne	.+8      	; 0x14a0 <vfprintf+0xbe>
    1498:	26 fd       	sbrc	r18, 6
    149a:	6b c1       	rjmp	.+726    	; 0x1772 <vfprintf+0x390>
    149c:	20 64       	ori	r18, 0x40	; 64
    149e:	06 c0       	rjmp	.+12     	; 0x14ac <vfprintf+0xca>
    14a0:	8c 36       	cpi	r24, 0x6C	; 108
    14a2:	11 f4       	brne	.+4      	; 0x14a8 <vfprintf+0xc6>
    14a4:	20 68       	ori	r18, 0x80	; 128
    14a6:	02 c0       	rjmp	.+4      	; 0x14ac <vfprintf+0xca>
    14a8:	88 36       	cpi	r24, 0x68	; 104
    14aa:	41 f4       	brne	.+16     	; 0x14bc <vfprintf+0xda>
    14ac:	f6 01       	movw	r30, r12
    14ae:	93 fd       	sbrc	r25, 3
    14b0:	85 91       	lpm	r24, Z+
    14b2:	93 ff       	sbrs	r25, 3
    14b4:	81 91       	ld	r24, Z+
    14b6:	6f 01       	movw	r12, r30
    14b8:	81 11       	cpse	r24, r1
    14ba:	c1 cf       	rjmp	.-126    	; 0x143e <vfprintf+0x5c>
    14bc:	98 2f       	mov	r25, r24
    14be:	9f 7d       	andi	r25, 0xDF	; 223
    14c0:	95 54       	subi	r25, 0x45	; 69
    14c2:	93 30       	cpi	r25, 0x03	; 3
    14c4:	28 f4       	brcc	.+10     	; 0x14d0 <vfprintf+0xee>
    14c6:	0c 5f       	subi	r16, 0xFC	; 252
    14c8:	1f 4f       	sbci	r17, 0xFF	; 255
    14ca:	ff e3       	ldi	r31, 0x3F	; 63
    14cc:	f9 83       	std	Y+1, r31	; 0x01
    14ce:	0d c0       	rjmp	.+26     	; 0x14ea <vfprintf+0x108>
    14d0:	83 36       	cpi	r24, 0x63	; 99
    14d2:	31 f0       	breq	.+12     	; 0x14e0 <vfprintf+0xfe>
    14d4:	83 37       	cpi	r24, 0x73	; 115
    14d6:	71 f0       	breq	.+28     	; 0x14f4 <vfprintf+0x112>
    14d8:	83 35       	cpi	r24, 0x53	; 83
    14da:	09 f0       	breq	.+2      	; 0x14de <vfprintf+0xfc>
    14dc:	5b c0       	rjmp	.+182    	; 0x1594 <vfprintf+0x1b2>
    14de:	22 c0       	rjmp	.+68     	; 0x1524 <vfprintf+0x142>
    14e0:	f8 01       	movw	r30, r16
    14e2:	80 81       	ld	r24, Z
    14e4:	89 83       	std	Y+1, r24	; 0x01
    14e6:	0e 5f       	subi	r16, 0xFE	; 254
    14e8:	1f 4f       	sbci	r17, 0xFF	; 255
    14ea:	44 24       	eor	r4, r4
    14ec:	43 94       	inc	r4
    14ee:	51 2c       	mov	r5, r1
    14f0:	54 01       	movw	r10, r8
    14f2:	15 c0       	rjmp	.+42     	; 0x151e <vfprintf+0x13c>
    14f4:	38 01       	movw	r6, r16
    14f6:	f2 e0       	ldi	r31, 0x02	; 2
    14f8:	6f 0e       	add	r6, r31
    14fa:	71 1c       	adc	r7, r1
    14fc:	f8 01       	movw	r30, r16
    14fe:	a0 80       	ld	r10, Z
    1500:	b1 80       	ldd	r11, Z+1	; 0x01
    1502:	26 ff       	sbrs	r18, 6
    1504:	03 c0       	rjmp	.+6      	; 0x150c <vfprintf+0x12a>
    1506:	65 2d       	mov	r22, r5
    1508:	70 e0       	ldi	r23, 0x00	; 0
    150a:	02 c0       	rjmp	.+4      	; 0x1510 <vfprintf+0x12e>
    150c:	6f ef       	ldi	r22, 0xFF	; 255
    150e:	7f ef       	ldi	r23, 0xFF	; 255
    1510:	c5 01       	movw	r24, r10
    1512:	2c 87       	std	Y+12, r18	; 0x0c
    1514:	0e 94 18 0d 	call	0x1a30	; 0x1a30 <strnlen>
    1518:	2c 01       	movw	r4, r24
    151a:	83 01       	movw	r16, r6
    151c:	2c 85       	ldd	r18, Y+12	; 0x0c
    151e:	2f 77       	andi	r18, 0x7F	; 127
    1520:	22 2e       	mov	r2, r18
    1522:	17 c0       	rjmp	.+46     	; 0x1552 <vfprintf+0x170>
    1524:	38 01       	movw	r6, r16
    1526:	f2 e0       	ldi	r31, 0x02	; 2
    1528:	6f 0e       	add	r6, r31
    152a:	71 1c       	adc	r7, r1
    152c:	f8 01       	movw	r30, r16
    152e:	a0 80       	ld	r10, Z
    1530:	b1 80       	ldd	r11, Z+1	; 0x01
    1532:	26 ff       	sbrs	r18, 6
    1534:	03 c0       	rjmp	.+6      	; 0x153c <vfprintf+0x15a>
    1536:	65 2d       	mov	r22, r5
    1538:	70 e0       	ldi	r23, 0x00	; 0
    153a:	02 c0       	rjmp	.+4      	; 0x1540 <vfprintf+0x15e>
    153c:	6f ef       	ldi	r22, 0xFF	; 255
    153e:	7f ef       	ldi	r23, 0xFF	; 255
    1540:	c5 01       	movw	r24, r10
    1542:	2c 87       	std	Y+12, r18	; 0x0c
    1544:	0e 94 06 0d 	call	0x1a0c	; 0x1a0c <strnlen_P>
    1548:	2c 01       	movw	r4, r24
    154a:	2c 85       	ldd	r18, Y+12	; 0x0c
    154c:	20 68       	ori	r18, 0x80	; 128
    154e:	22 2e       	mov	r2, r18
    1550:	83 01       	movw	r16, r6
    1552:	23 fc       	sbrc	r2, 3
    1554:	1b c0       	rjmp	.+54     	; 0x158c <vfprintf+0x1aa>
    1556:	83 2d       	mov	r24, r3
    1558:	90 e0       	ldi	r25, 0x00	; 0
    155a:	48 16       	cp	r4, r24
    155c:	59 06       	cpc	r5, r25
    155e:	b0 f4       	brcc	.+44     	; 0x158c <vfprintf+0x1aa>
    1560:	b7 01       	movw	r22, r14
    1562:	80 e2       	ldi	r24, 0x20	; 32
    1564:	90 e0       	ldi	r25, 0x00	; 0
    1566:	0e 94 23 0d 	call	0x1a46	; 0x1a46 <fputc>
    156a:	3a 94       	dec	r3
    156c:	f4 cf       	rjmp	.-24     	; 0x1556 <vfprintf+0x174>
    156e:	f5 01       	movw	r30, r10
    1570:	27 fc       	sbrc	r2, 7
    1572:	85 91       	lpm	r24, Z+
    1574:	27 fe       	sbrs	r2, 7
    1576:	81 91       	ld	r24, Z+
    1578:	5f 01       	movw	r10, r30
    157a:	b7 01       	movw	r22, r14
    157c:	90 e0       	ldi	r25, 0x00	; 0
    157e:	0e 94 23 0d 	call	0x1a46	; 0x1a46 <fputc>
    1582:	31 10       	cpse	r3, r1
    1584:	3a 94       	dec	r3
    1586:	f1 e0       	ldi	r31, 0x01	; 1
    1588:	4f 1a       	sub	r4, r31
    158a:	51 08       	sbc	r5, r1
    158c:	41 14       	cp	r4, r1
    158e:	51 04       	cpc	r5, r1
    1590:	71 f7       	brne	.-36     	; 0x156e <vfprintf+0x18c>
    1592:	e5 c0       	rjmp	.+458    	; 0x175e <vfprintf+0x37c>
    1594:	84 36       	cpi	r24, 0x64	; 100
    1596:	11 f0       	breq	.+4      	; 0x159c <vfprintf+0x1ba>
    1598:	89 36       	cpi	r24, 0x69	; 105
    159a:	39 f5       	brne	.+78     	; 0x15ea <vfprintf+0x208>
    159c:	f8 01       	movw	r30, r16
    159e:	27 ff       	sbrs	r18, 7
    15a0:	07 c0       	rjmp	.+14     	; 0x15b0 <vfprintf+0x1ce>
    15a2:	60 81       	ld	r22, Z
    15a4:	71 81       	ldd	r23, Z+1	; 0x01
    15a6:	82 81       	ldd	r24, Z+2	; 0x02
    15a8:	93 81       	ldd	r25, Z+3	; 0x03
    15aa:	0c 5f       	subi	r16, 0xFC	; 252
    15ac:	1f 4f       	sbci	r17, 0xFF	; 255
    15ae:	08 c0       	rjmp	.+16     	; 0x15c0 <vfprintf+0x1de>
    15b0:	60 81       	ld	r22, Z
    15b2:	71 81       	ldd	r23, Z+1	; 0x01
    15b4:	88 27       	eor	r24, r24
    15b6:	77 fd       	sbrc	r23, 7
    15b8:	80 95       	com	r24
    15ba:	98 2f       	mov	r25, r24
    15bc:	0e 5f       	subi	r16, 0xFE	; 254
    15be:	1f 4f       	sbci	r17, 0xFF	; 255
    15c0:	2f 76       	andi	r18, 0x6F	; 111
    15c2:	b2 2e       	mov	r11, r18
    15c4:	97 ff       	sbrs	r25, 7
    15c6:	09 c0       	rjmp	.+18     	; 0x15da <vfprintf+0x1f8>
    15c8:	90 95       	com	r25
    15ca:	80 95       	com	r24
    15cc:	70 95       	com	r23
    15ce:	61 95       	neg	r22
    15d0:	7f 4f       	sbci	r23, 0xFF	; 255
    15d2:	8f 4f       	sbci	r24, 0xFF	; 255
    15d4:	9f 4f       	sbci	r25, 0xFF	; 255
    15d6:	20 68       	ori	r18, 0x80	; 128
    15d8:	b2 2e       	mov	r11, r18
    15da:	2a e0       	ldi	r18, 0x0A	; 10
    15dc:	30 e0       	ldi	r19, 0x00	; 0
    15de:	a4 01       	movw	r20, r8
    15e0:	0e 94 55 0d 	call	0x1aaa	; 0x1aaa <__ultoa_invert>
    15e4:	a8 2e       	mov	r10, r24
    15e6:	a8 18       	sub	r10, r8
    15e8:	44 c0       	rjmp	.+136    	; 0x1672 <vfprintf+0x290>
    15ea:	85 37       	cpi	r24, 0x75	; 117
    15ec:	29 f4       	brne	.+10     	; 0x15f8 <vfprintf+0x216>
    15ee:	2f 7e       	andi	r18, 0xEF	; 239
    15f0:	b2 2e       	mov	r11, r18
    15f2:	2a e0       	ldi	r18, 0x0A	; 10
    15f4:	30 e0       	ldi	r19, 0x00	; 0
    15f6:	25 c0       	rjmp	.+74     	; 0x1642 <vfprintf+0x260>
    15f8:	f2 2f       	mov	r31, r18
    15fa:	f9 7f       	andi	r31, 0xF9	; 249
    15fc:	bf 2e       	mov	r11, r31
    15fe:	8f 36       	cpi	r24, 0x6F	; 111
    1600:	c1 f0       	breq	.+48     	; 0x1632 <vfprintf+0x250>
    1602:	18 f4       	brcc	.+6      	; 0x160a <vfprintf+0x228>
    1604:	88 35       	cpi	r24, 0x58	; 88
    1606:	79 f0       	breq	.+30     	; 0x1626 <vfprintf+0x244>
    1608:	b4 c0       	rjmp	.+360    	; 0x1772 <vfprintf+0x390>
    160a:	80 37       	cpi	r24, 0x70	; 112
    160c:	19 f0       	breq	.+6      	; 0x1614 <vfprintf+0x232>
    160e:	88 37       	cpi	r24, 0x78	; 120
    1610:	21 f0       	breq	.+8      	; 0x161a <vfprintf+0x238>
    1612:	af c0       	rjmp	.+350    	; 0x1772 <vfprintf+0x390>
    1614:	2f 2f       	mov	r18, r31
    1616:	20 61       	ori	r18, 0x10	; 16
    1618:	b2 2e       	mov	r11, r18
    161a:	b4 fe       	sbrs	r11, 4
    161c:	0d c0       	rjmp	.+26     	; 0x1638 <vfprintf+0x256>
    161e:	8b 2d       	mov	r24, r11
    1620:	84 60       	ori	r24, 0x04	; 4
    1622:	b8 2e       	mov	r11, r24
    1624:	09 c0       	rjmp	.+18     	; 0x1638 <vfprintf+0x256>
    1626:	24 ff       	sbrs	r18, 4
    1628:	0a c0       	rjmp	.+20     	; 0x163e <vfprintf+0x25c>
    162a:	9f 2f       	mov	r25, r31
    162c:	96 60       	ori	r25, 0x06	; 6
    162e:	b9 2e       	mov	r11, r25
    1630:	06 c0       	rjmp	.+12     	; 0x163e <vfprintf+0x25c>
    1632:	28 e0       	ldi	r18, 0x08	; 8
    1634:	30 e0       	ldi	r19, 0x00	; 0
    1636:	05 c0       	rjmp	.+10     	; 0x1642 <vfprintf+0x260>
    1638:	20 e1       	ldi	r18, 0x10	; 16
    163a:	30 e0       	ldi	r19, 0x00	; 0
    163c:	02 c0       	rjmp	.+4      	; 0x1642 <vfprintf+0x260>
    163e:	20 e1       	ldi	r18, 0x10	; 16
    1640:	32 e0       	ldi	r19, 0x02	; 2
    1642:	f8 01       	movw	r30, r16
    1644:	b7 fe       	sbrs	r11, 7
    1646:	07 c0       	rjmp	.+14     	; 0x1656 <vfprintf+0x274>
    1648:	60 81       	ld	r22, Z
    164a:	71 81       	ldd	r23, Z+1	; 0x01
    164c:	82 81       	ldd	r24, Z+2	; 0x02
    164e:	93 81       	ldd	r25, Z+3	; 0x03
    1650:	0c 5f       	subi	r16, 0xFC	; 252
    1652:	1f 4f       	sbci	r17, 0xFF	; 255
    1654:	06 c0       	rjmp	.+12     	; 0x1662 <vfprintf+0x280>
    1656:	60 81       	ld	r22, Z
    1658:	71 81       	ldd	r23, Z+1	; 0x01
    165a:	80 e0       	ldi	r24, 0x00	; 0
    165c:	90 e0       	ldi	r25, 0x00	; 0
    165e:	0e 5f       	subi	r16, 0xFE	; 254
    1660:	1f 4f       	sbci	r17, 0xFF	; 255
    1662:	a4 01       	movw	r20, r8
    1664:	0e 94 55 0d 	call	0x1aaa	; 0x1aaa <__ultoa_invert>
    1668:	a8 2e       	mov	r10, r24
    166a:	a8 18       	sub	r10, r8
    166c:	fb 2d       	mov	r31, r11
    166e:	ff 77       	andi	r31, 0x7F	; 127
    1670:	bf 2e       	mov	r11, r31
    1672:	b6 fe       	sbrs	r11, 6
    1674:	0b c0       	rjmp	.+22     	; 0x168c <vfprintf+0x2aa>
    1676:	2b 2d       	mov	r18, r11
    1678:	2e 7f       	andi	r18, 0xFE	; 254
    167a:	a5 14       	cp	r10, r5
    167c:	50 f4       	brcc	.+20     	; 0x1692 <vfprintf+0x2b0>
    167e:	b4 fe       	sbrs	r11, 4
    1680:	0a c0       	rjmp	.+20     	; 0x1696 <vfprintf+0x2b4>
    1682:	b2 fc       	sbrc	r11, 2
    1684:	08 c0       	rjmp	.+16     	; 0x1696 <vfprintf+0x2b4>
    1686:	2b 2d       	mov	r18, r11
    1688:	2e 7e       	andi	r18, 0xEE	; 238
    168a:	05 c0       	rjmp	.+10     	; 0x1696 <vfprintf+0x2b4>
    168c:	7a 2c       	mov	r7, r10
    168e:	2b 2d       	mov	r18, r11
    1690:	03 c0       	rjmp	.+6      	; 0x1698 <vfprintf+0x2b6>
    1692:	7a 2c       	mov	r7, r10
    1694:	01 c0       	rjmp	.+2      	; 0x1698 <vfprintf+0x2b6>
    1696:	75 2c       	mov	r7, r5
    1698:	24 ff       	sbrs	r18, 4
    169a:	0d c0       	rjmp	.+26     	; 0x16b6 <vfprintf+0x2d4>
    169c:	fe 01       	movw	r30, r28
    169e:	ea 0d       	add	r30, r10
    16a0:	f1 1d       	adc	r31, r1
    16a2:	80 81       	ld	r24, Z
    16a4:	80 33       	cpi	r24, 0x30	; 48
    16a6:	11 f4       	brne	.+4      	; 0x16ac <vfprintf+0x2ca>
    16a8:	29 7e       	andi	r18, 0xE9	; 233
    16aa:	09 c0       	rjmp	.+18     	; 0x16be <vfprintf+0x2dc>
    16ac:	22 ff       	sbrs	r18, 2
    16ae:	06 c0       	rjmp	.+12     	; 0x16bc <vfprintf+0x2da>
    16b0:	73 94       	inc	r7
    16b2:	73 94       	inc	r7
    16b4:	04 c0       	rjmp	.+8      	; 0x16be <vfprintf+0x2dc>
    16b6:	82 2f       	mov	r24, r18
    16b8:	86 78       	andi	r24, 0x86	; 134
    16ba:	09 f0       	breq	.+2      	; 0x16be <vfprintf+0x2dc>
    16bc:	73 94       	inc	r7
    16be:	23 fd       	sbrc	r18, 3
    16c0:	13 c0       	rjmp	.+38     	; 0x16e8 <vfprintf+0x306>
    16c2:	20 ff       	sbrs	r18, 0
    16c4:	06 c0       	rjmp	.+12     	; 0x16d2 <vfprintf+0x2f0>
    16c6:	5a 2c       	mov	r5, r10
    16c8:	73 14       	cp	r7, r3
    16ca:	18 f4       	brcc	.+6      	; 0x16d2 <vfprintf+0x2f0>
    16cc:	53 0c       	add	r5, r3
    16ce:	57 18       	sub	r5, r7
    16d0:	73 2c       	mov	r7, r3
    16d2:	73 14       	cp	r7, r3
    16d4:	68 f4       	brcc	.+26     	; 0x16f0 <vfprintf+0x30e>
    16d6:	b7 01       	movw	r22, r14
    16d8:	80 e2       	ldi	r24, 0x20	; 32
    16da:	90 e0       	ldi	r25, 0x00	; 0
    16dc:	2c 87       	std	Y+12, r18	; 0x0c
    16de:	0e 94 23 0d 	call	0x1a46	; 0x1a46 <fputc>
    16e2:	73 94       	inc	r7
    16e4:	2c 85       	ldd	r18, Y+12	; 0x0c
    16e6:	f5 cf       	rjmp	.-22     	; 0x16d2 <vfprintf+0x2f0>
    16e8:	73 14       	cp	r7, r3
    16ea:	10 f4       	brcc	.+4      	; 0x16f0 <vfprintf+0x30e>
    16ec:	37 18       	sub	r3, r7
    16ee:	01 c0       	rjmp	.+2      	; 0x16f2 <vfprintf+0x310>
    16f0:	31 2c       	mov	r3, r1
    16f2:	24 ff       	sbrs	r18, 4
    16f4:	12 c0       	rjmp	.+36     	; 0x171a <vfprintf+0x338>
    16f6:	b7 01       	movw	r22, r14
    16f8:	80 e3       	ldi	r24, 0x30	; 48
    16fa:	90 e0       	ldi	r25, 0x00	; 0
    16fc:	2c 87       	std	Y+12, r18	; 0x0c
    16fe:	0e 94 23 0d 	call	0x1a46	; 0x1a46 <fputc>
    1702:	2c 85       	ldd	r18, Y+12	; 0x0c
    1704:	22 ff       	sbrs	r18, 2
    1706:	17 c0       	rjmp	.+46     	; 0x1736 <vfprintf+0x354>
    1708:	21 ff       	sbrs	r18, 1
    170a:	03 c0       	rjmp	.+6      	; 0x1712 <vfprintf+0x330>
    170c:	88 e5       	ldi	r24, 0x58	; 88
    170e:	90 e0       	ldi	r25, 0x00	; 0
    1710:	02 c0       	rjmp	.+4      	; 0x1716 <vfprintf+0x334>
    1712:	88 e7       	ldi	r24, 0x78	; 120
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	b7 01       	movw	r22, r14
    1718:	0c c0       	rjmp	.+24     	; 0x1732 <vfprintf+0x350>
    171a:	82 2f       	mov	r24, r18
    171c:	86 78       	andi	r24, 0x86	; 134
    171e:	59 f0       	breq	.+22     	; 0x1736 <vfprintf+0x354>
    1720:	21 fd       	sbrc	r18, 1
    1722:	02 c0       	rjmp	.+4      	; 0x1728 <vfprintf+0x346>
    1724:	80 e2       	ldi	r24, 0x20	; 32
    1726:	01 c0       	rjmp	.+2      	; 0x172a <vfprintf+0x348>
    1728:	8b e2       	ldi	r24, 0x2B	; 43
    172a:	27 fd       	sbrc	r18, 7
    172c:	8d e2       	ldi	r24, 0x2D	; 45
    172e:	b7 01       	movw	r22, r14
    1730:	90 e0       	ldi	r25, 0x00	; 0
    1732:	0e 94 23 0d 	call	0x1a46	; 0x1a46 <fputc>
    1736:	a5 14       	cp	r10, r5
    1738:	38 f4       	brcc	.+14     	; 0x1748 <vfprintf+0x366>
    173a:	b7 01       	movw	r22, r14
    173c:	80 e3       	ldi	r24, 0x30	; 48
    173e:	90 e0       	ldi	r25, 0x00	; 0
    1740:	0e 94 23 0d 	call	0x1a46	; 0x1a46 <fputc>
    1744:	5a 94       	dec	r5
    1746:	f7 cf       	rjmp	.-18     	; 0x1736 <vfprintf+0x354>
    1748:	aa 94       	dec	r10
    174a:	f4 01       	movw	r30, r8
    174c:	ea 0d       	add	r30, r10
    174e:	f1 1d       	adc	r31, r1
    1750:	80 81       	ld	r24, Z
    1752:	b7 01       	movw	r22, r14
    1754:	90 e0       	ldi	r25, 0x00	; 0
    1756:	0e 94 23 0d 	call	0x1a46	; 0x1a46 <fputc>
    175a:	a1 10       	cpse	r10, r1
    175c:	f5 cf       	rjmp	.-22     	; 0x1748 <vfprintf+0x366>
    175e:	33 20       	and	r3, r3
    1760:	09 f4       	brne	.+2      	; 0x1764 <vfprintf+0x382>
    1762:	51 ce       	rjmp	.-862    	; 0x1406 <vfprintf+0x24>
    1764:	b7 01       	movw	r22, r14
    1766:	80 e2       	ldi	r24, 0x20	; 32
    1768:	90 e0       	ldi	r25, 0x00	; 0
    176a:	0e 94 23 0d 	call	0x1a46	; 0x1a46 <fputc>
    176e:	3a 94       	dec	r3
    1770:	f6 cf       	rjmp	.-20     	; 0x175e <vfprintf+0x37c>
    1772:	f7 01       	movw	r30, r14
    1774:	86 81       	ldd	r24, Z+6	; 0x06
    1776:	97 81       	ldd	r25, Z+7	; 0x07
    1778:	02 c0       	rjmp	.+4      	; 0x177e <vfprintf+0x39c>
    177a:	8f ef       	ldi	r24, 0xFF	; 255
    177c:	9f ef       	ldi	r25, 0xFF	; 255
    177e:	2c 96       	adiw	r28, 0x0c	; 12
    1780:	e2 e1       	ldi	r30, 0x12	; 18
    1782:	0c 94 cf 0d 	jmp	0x1b9e	; 0x1b9e <__epilogue_restores__>

00001786 <calloc>:
    1786:	0f 93       	push	r16
    1788:	1f 93       	push	r17
    178a:	cf 93       	push	r28
    178c:	df 93       	push	r29
    178e:	86 9f       	mul	r24, r22
    1790:	80 01       	movw	r16, r0
    1792:	87 9f       	mul	r24, r23
    1794:	10 0d       	add	r17, r0
    1796:	96 9f       	mul	r25, r22
    1798:	10 0d       	add	r17, r0
    179a:	11 24       	eor	r1, r1
    179c:	c8 01       	movw	r24, r16
    179e:	0e 94 df 0b 	call	0x17be	; 0x17be <malloc>
    17a2:	ec 01       	movw	r28, r24
    17a4:	00 97       	sbiw	r24, 0x00	; 0
    17a6:	29 f0       	breq	.+10     	; 0x17b2 <calloc+0x2c>
    17a8:	a8 01       	movw	r20, r16
    17aa:	60 e0       	ldi	r22, 0x00	; 0
    17ac:	70 e0       	ldi	r23, 0x00	; 0
    17ae:	0e 94 11 0d 	call	0x1a22	; 0x1a22 <memset>
    17b2:	ce 01       	movw	r24, r28
    17b4:	df 91       	pop	r29
    17b6:	cf 91       	pop	r28
    17b8:	1f 91       	pop	r17
    17ba:	0f 91       	pop	r16
    17bc:	08 95       	ret

000017be <malloc>:
    17be:	cf 93       	push	r28
    17c0:	df 93       	push	r29
    17c2:	82 30       	cpi	r24, 0x02	; 2
    17c4:	91 05       	cpc	r25, r1
    17c6:	10 f4       	brcc	.+4      	; 0x17cc <malloc+0xe>
    17c8:	82 e0       	ldi	r24, 0x02	; 2
    17ca:	90 e0       	ldi	r25, 0x00	; 0
    17cc:	e0 91 4f 04 	lds	r30, 0x044F
    17d0:	f0 91 50 04 	lds	r31, 0x0450
    17d4:	20 e0       	ldi	r18, 0x00	; 0
    17d6:	30 e0       	ldi	r19, 0x00	; 0
    17d8:	a0 e0       	ldi	r26, 0x00	; 0
    17da:	b0 e0       	ldi	r27, 0x00	; 0
    17dc:	30 97       	sbiw	r30, 0x00	; 0
    17de:	39 f1       	breq	.+78     	; 0x182e <malloc+0x70>
    17e0:	40 81       	ld	r20, Z
    17e2:	51 81       	ldd	r21, Z+1	; 0x01
    17e4:	48 17       	cp	r20, r24
    17e6:	59 07       	cpc	r21, r25
    17e8:	b8 f0       	brcs	.+46     	; 0x1818 <malloc+0x5a>
    17ea:	48 17       	cp	r20, r24
    17ec:	59 07       	cpc	r21, r25
    17ee:	71 f4       	brne	.+28     	; 0x180c <malloc+0x4e>
    17f0:	82 81       	ldd	r24, Z+2	; 0x02
    17f2:	93 81       	ldd	r25, Z+3	; 0x03
    17f4:	10 97       	sbiw	r26, 0x00	; 0
    17f6:	29 f0       	breq	.+10     	; 0x1802 <malloc+0x44>
    17f8:	13 96       	adiw	r26, 0x03	; 3
    17fa:	9c 93       	st	X, r25
    17fc:	8e 93       	st	-X, r24
    17fe:	12 97       	sbiw	r26, 0x02	; 2
    1800:	2c c0       	rjmp	.+88     	; 0x185a <malloc+0x9c>
    1802:	90 93 50 04 	sts	0x0450, r25
    1806:	80 93 4f 04 	sts	0x044F, r24
    180a:	27 c0       	rjmp	.+78     	; 0x185a <malloc+0x9c>
    180c:	21 15       	cp	r18, r1
    180e:	31 05       	cpc	r19, r1
    1810:	31 f0       	breq	.+12     	; 0x181e <malloc+0x60>
    1812:	42 17       	cp	r20, r18
    1814:	53 07       	cpc	r21, r19
    1816:	18 f0       	brcs	.+6      	; 0x181e <malloc+0x60>
    1818:	a9 01       	movw	r20, r18
    181a:	db 01       	movw	r26, r22
    181c:	01 c0       	rjmp	.+2      	; 0x1820 <malloc+0x62>
    181e:	ef 01       	movw	r28, r30
    1820:	9a 01       	movw	r18, r20
    1822:	bd 01       	movw	r22, r26
    1824:	df 01       	movw	r26, r30
    1826:	02 80       	ldd	r0, Z+2	; 0x02
    1828:	f3 81       	ldd	r31, Z+3	; 0x03
    182a:	e0 2d       	mov	r30, r0
    182c:	d7 cf       	rjmp	.-82     	; 0x17dc <malloc+0x1e>
    182e:	21 15       	cp	r18, r1
    1830:	31 05       	cpc	r19, r1
    1832:	f9 f0       	breq	.+62     	; 0x1872 <malloc+0xb4>
    1834:	28 1b       	sub	r18, r24
    1836:	39 0b       	sbc	r19, r25
    1838:	24 30       	cpi	r18, 0x04	; 4
    183a:	31 05       	cpc	r19, r1
    183c:	80 f4       	brcc	.+32     	; 0x185e <malloc+0xa0>
    183e:	8a 81       	ldd	r24, Y+2	; 0x02
    1840:	9b 81       	ldd	r25, Y+3	; 0x03
    1842:	61 15       	cp	r22, r1
    1844:	71 05       	cpc	r23, r1
    1846:	21 f0       	breq	.+8      	; 0x1850 <malloc+0x92>
    1848:	fb 01       	movw	r30, r22
    184a:	93 83       	std	Z+3, r25	; 0x03
    184c:	82 83       	std	Z+2, r24	; 0x02
    184e:	04 c0       	rjmp	.+8      	; 0x1858 <malloc+0x9a>
    1850:	90 93 50 04 	sts	0x0450, r25
    1854:	80 93 4f 04 	sts	0x044F, r24
    1858:	fe 01       	movw	r30, r28
    185a:	32 96       	adiw	r30, 0x02	; 2
    185c:	44 c0       	rjmp	.+136    	; 0x18e6 <malloc+0x128>
    185e:	fe 01       	movw	r30, r28
    1860:	e2 0f       	add	r30, r18
    1862:	f3 1f       	adc	r31, r19
    1864:	81 93       	st	Z+, r24
    1866:	91 93       	st	Z+, r25
    1868:	22 50       	subi	r18, 0x02	; 2
    186a:	31 09       	sbc	r19, r1
    186c:	39 83       	std	Y+1, r19	; 0x01
    186e:	28 83       	st	Y, r18
    1870:	3a c0       	rjmp	.+116    	; 0x18e6 <malloc+0x128>
    1872:	20 91 4d 04 	lds	r18, 0x044D
    1876:	30 91 4e 04 	lds	r19, 0x044E
    187a:	23 2b       	or	r18, r19
    187c:	41 f4       	brne	.+16     	; 0x188e <malloc+0xd0>
    187e:	20 91 02 01 	lds	r18, 0x0102
    1882:	30 91 03 01 	lds	r19, 0x0103
    1886:	30 93 4e 04 	sts	0x044E, r19
    188a:	20 93 4d 04 	sts	0x044D, r18
    188e:	20 91 00 01 	lds	r18, 0x0100
    1892:	30 91 01 01 	lds	r19, 0x0101
    1896:	21 15       	cp	r18, r1
    1898:	31 05       	cpc	r19, r1
    189a:	41 f4       	brne	.+16     	; 0x18ac <malloc+0xee>
    189c:	2d b7       	in	r18, 0x3d	; 61
    189e:	3e b7       	in	r19, 0x3e	; 62
    18a0:	40 91 04 01 	lds	r20, 0x0104
    18a4:	50 91 05 01 	lds	r21, 0x0105
    18a8:	24 1b       	sub	r18, r20
    18aa:	35 0b       	sbc	r19, r21
    18ac:	e0 91 4d 04 	lds	r30, 0x044D
    18b0:	f0 91 4e 04 	lds	r31, 0x044E
    18b4:	e2 17       	cp	r30, r18
    18b6:	f3 07       	cpc	r31, r19
    18b8:	a0 f4       	brcc	.+40     	; 0x18e2 <malloc+0x124>
    18ba:	2e 1b       	sub	r18, r30
    18bc:	3f 0b       	sbc	r19, r31
    18be:	28 17       	cp	r18, r24
    18c0:	39 07       	cpc	r19, r25
    18c2:	78 f0       	brcs	.+30     	; 0x18e2 <malloc+0x124>
    18c4:	ac 01       	movw	r20, r24
    18c6:	4e 5f       	subi	r20, 0xFE	; 254
    18c8:	5f 4f       	sbci	r21, 0xFF	; 255
    18ca:	24 17       	cp	r18, r20
    18cc:	35 07       	cpc	r19, r21
    18ce:	48 f0       	brcs	.+18     	; 0x18e2 <malloc+0x124>
    18d0:	4e 0f       	add	r20, r30
    18d2:	5f 1f       	adc	r21, r31
    18d4:	50 93 4e 04 	sts	0x044E, r21
    18d8:	40 93 4d 04 	sts	0x044D, r20
    18dc:	81 93       	st	Z+, r24
    18de:	91 93       	st	Z+, r25
    18e0:	02 c0       	rjmp	.+4      	; 0x18e6 <malloc+0x128>
    18e2:	e0 e0       	ldi	r30, 0x00	; 0
    18e4:	f0 e0       	ldi	r31, 0x00	; 0
    18e6:	cf 01       	movw	r24, r30
    18e8:	df 91       	pop	r29
    18ea:	cf 91       	pop	r28
    18ec:	08 95       	ret

000018ee <free>:
    18ee:	cf 93       	push	r28
    18f0:	df 93       	push	r29
    18f2:	00 97       	sbiw	r24, 0x00	; 0
    18f4:	09 f4       	brne	.+2      	; 0x18f8 <free+0xa>
    18f6:	87 c0       	rjmp	.+270    	; 0x1a06 <free+0x118>
    18f8:	fc 01       	movw	r30, r24
    18fa:	32 97       	sbiw	r30, 0x02	; 2
    18fc:	13 82       	std	Z+3, r1	; 0x03
    18fe:	12 82       	std	Z+2, r1	; 0x02
    1900:	c0 91 4f 04 	lds	r28, 0x044F
    1904:	d0 91 50 04 	lds	r29, 0x0450
    1908:	20 97       	sbiw	r28, 0x00	; 0
    190a:	81 f4       	brne	.+32     	; 0x192c <free+0x3e>
    190c:	20 81       	ld	r18, Z
    190e:	31 81       	ldd	r19, Z+1	; 0x01
    1910:	28 0f       	add	r18, r24
    1912:	39 1f       	adc	r19, r25
    1914:	80 91 4d 04 	lds	r24, 0x044D
    1918:	90 91 4e 04 	lds	r25, 0x044E
    191c:	82 17       	cp	r24, r18
    191e:	93 07       	cpc	r25, r19
    1920:	79 f5       	brne	.+94     	; 0x1980 <free+0x92>
    1922:	f0 93 4e 04 	sts	0x044E, r31
    1926:	e0 93 4d 04 	sts	0x044D, r30
    192a:	6d c0       	rjmp	.+218    	; 0x1a06 <free+0x118>
    192c:	de 01       	movw	r26, r28
    192e:	20 e0       	ldi	r18, 0x00	; 0
    1930:	30 e0       	ldi	r19, 0x00	; 0
    1932:	ae 17       	cp	r26, r30
    1934:	bf 07       	cpc	r27, r31
    1936:	50 f4       	brcc	.+20     	; 0x194c <free+0x5e>
    1938:	12 96       	adiw	r26, 0x02	; 2
    193a:	4d 91       	ld	r20, X+
    193c:	5c 91       	ld	r21, X
    193e:	13 97       	sbiw	r26, 0x03	; 3
    1940:	9d 01       	movw	r18, r26
    1942:	41 15       	cp	r20, r1
    1944:	51 05       	cpc	r21, r1
    1946:	09 f1       	breq	.+66     	; 0x198a <free+0x9c>
    1948:	da 01       	movw	r26, r20
    194a:	f3 cf       	rjmp	.-26     	; 0x1932 <free+0x44>
    194c:	b3 83       	std	Z+3, r27	; 0x03
    194e:	a2 83       	std	Z+2, r26	; 0x02
    1950:	40 81       	ld	r20, Z
    1952:	51 81       	ldd	r21, Z+1	; 0x01
    1954:	84 0f       	add	r24, r20
    1956:	95 1f       	adc	r25, r21
    1958:	8a 17       	cp	r24, r26
    195a:	9b 07       	cpc	r25, r27
    195c:	71 f4       	brne	.+28     	; 0x197a <free+0x8c>
    195e:	8d 91       	ld	r24, X+
    1960:	9c 91       	ld	r25, X
    1962:	11 97       	sbiw	r26, 0x01	; 1
    1964:	84 0f       	add	r24, r20
    1966:	95 1f       	adc	r25, r21
    1968:	02 96       	adiw	r24, 0x02	; 2
    196a:	91 83       	std	Z+1, r25	; 0x01
    196c:	80 83       	st	Z, r24
    196e:	12 96       	adiw	r26, 0x02	; 2
    1970:	8d 91       	ld	r24, X+
    1972:	9c 91       	ld	r25, X
    1974:	13 97       	sbiw	r26, 0x03	; 3
    1976:	93 83       	std	Z+3, r25	; 0x03
    1978:	82 83       	std	Z+2, r24	; 0x02
    197a:	21 15       	cp	r18, r1
    197c:	31 05       	cpc	r19, r1
    197e:	29 f4       	brne	.+10     	; 0x198a <free+0x9c>
    1980:	f0 93 50 04 	sts	0x0450, r31
    1984:	e0 93 4f 04 	sts	0x044F, r30
    1988:	3e c0       	rjmp	.+124    	; 0x1a06 <free+0x118>
    198a:	d9 01       	movw	r26, r18
    198c:	13 96       	adiw	r26, 0x03	; 3
    198e:	fc 93       	st	X, r31
    1990:	ee 93       	st	-X, r30
    1992:	12 97       	sbiw	r26, 0x02	; 2
    1994:	4d 91       	ld	r20, X+
    1996:	5d 91       	ld	r21, X+
    1998:	a4 0f       	add	r26, r20
    199a:	b5 1f       	adc	r27, r21
    199c:	ea 17       	cp	r30, r26
    199e:	fb 07       	cpc	r31, r27
    19a0:	79 f4       	brne	.+30     	; 0x19c0 <free+0xd2>
    19a2:	80 81       	ld	r24, Z
    19a4:	91 81       	ldd	r25, Z+1	; 0x01
    19a6:	84 0f       	add	r24, r20
    19a8:	95 1f       	adc	r25, r21
    19aa:	02 96       	adiw	r24, 0x02	; 2
    19ac:	d9 01       	movw	r26, r18
    19ae:	11 96       	adiw	r26, 0x01	; 1
    19b0:	9c 93       	st	X, r25
    19b2:	8e 93       	st	-X, r24
    19b4:	82 81       	ldd	r24, Z+2	; 0x02
    19b6:	93 81       	ldd	r25, Z+3	; 0x03
    19b8:	13 96       	adiw	r26, 0x03	; 3
    19ba:	9c 93       	st	X, r25
    19bc:	8e 93       	st	-X, r24
    19be:	12 97       	sbiw	r26, 0x02	; 2
    19c0:	e0 e0       	ldi	r30, 0x00	; 0
    19c2:	f0 e0       	ldi	r31, 0x00	; 0
    19c4:	8a 81       	ldd	r24, Y+2	; 0x02
    19c6:	9b 81       	ldd	r25, Y+3	; 0x03
    19c8:	00 97       	sbiw	r24, 0x00	; 0
    19ca:	19 f0       	breq	.+6      	; 0x19d2 <free+0xe4>
    19cc:	fe 01       	movw	r30, r28
    19ce:	ec 01       	movw	r28, r24
    19d0:	f9 cf       	rjmp	.-14     	; 0x19c4 <free+0xd6>
    19d2:	ce 01       	movw	r24, r28
    19d4:	02 96       	adiw	r24, 0x02	; 2
    19d6:	28 81       	ld	r18, Y
    19d8:	39 81       	ldd	r19, Y+1	; 0x01
    19da:	82 0f       	add	r24, r18
    19dc:	93 1f       	adc	r25, r19
    19de:	20 91 4d 04 	lds	r18, 0x044D
    19e2:	30 91 4e 04 	lds	r19, 0x044E
    19e6:	28 17       	cp	r18, r24
    19e8:	39 07       	cpc	r19, r25
    19ea:	69 f4       	brne	.+26     	; 0x1a06 <free+0x118>
    19ec:	30 97       	sbiw	r30, 0x00	; 0
    19ee:	29 f4       	brne	.+10     	; 0x19fa <free+0x10c>
    19f0:	10 92 50 04 	sts	0x0450, r1
    19f4:	10 92 4f 04 	sts	0x044F, r1
    19f8:	02 c0       	rjmp	.+4      	; 0x19fe <free+0x110>
    19fa:	13 82       	std	Z+3, r1	; 0x03
    19fc:	12 82       	std	Z+2, r1	; 0x02
    19fe:	d0 93 4e 04 	sts	0x044E, r29
    1a02:	c0 93 4d 04 	sts	0x044D, r28
    1a06:	df 91       	pop	r29
    1a08:	cf 91       	pop	r28
    1a0a:	08 95       	ret

00001a0c <strnlen_P>:
    1a0c:	fc 01       	movw	r30, r24
    1a0e:	05 90       	lpm	r0, Z+
    1a10:	61 50       	subi	r22, 0x01	; 1
    1a12:	70 40       	sbci	r23, 0x00	; 0
    1a14:	01 10       	cpse	r0, r1
    1a16:	d8 f7       	brcc	.-10     	; 0x1a0e <strnlen_P+0x2>
    1a18:	80 95       	com	r24
    1a1a:	90 95       	com	r25
    1a1c:	8e 0f       	add	r24, r30
    1a1e:	9f 1f       	adc	r25, r31
    1a20:	08 95       	ret

00001a22 <memset>:
    1a22:	dc 01       	movw	r26, r24
    1a24:	01 c0       	rjmp	.+2      	; 0x1a28 <memset+0x6>
    1a26:	6d 93       	st	X+, r22
    1a28:	41 50       	subi	r20, 0x01	; 1
    1a2a:	50 40       	sbci	r21, 0x00	; 0
    1a2c:	e0 f7       	brcc	.-8      	; 0x1a26 <memset+0x4>
    1a2e:	08 95       	ret

00001a30 <strnlen>:
    1a30:	fc 01       	movw	r30, r24
    1a32:	61 50       	subi	r22, 0x01	; 1
    1a34:	70 40       	sbci	r23, 0x00	; 0
    1a36:	01 90       	ld	r0, Z+
    1a38:	01 10       	cpse	r0, r1
    1a3a:	d8 f7       	brcc	.-10     	; 0x1a32 <strnlen+0x2>
    1a3c:	80 95       	com	r24
    1a3e:	90 95       	com	r25
    1a40:	8e 0f       	add	r24, r30
    1a42:	9f 1f       	adc	r25, r31
    1a44:	08 95       	ret

00001a46 <fputc>:
    1a46:	0f 93       	push	r16
    1a48:	1f 93       	push	r17
    1a4a:	cf 93       	push	r28
    1a4c:	df 93       	push	r29
    1a4e:	18 2f       	mov	r17, r24
    1a50:	09 2f       	mov	r16, r25
    1a52:	eb 01       	movw	r28, r22
    1a54:	8b 81       	ldd	r24, Y+3	; 0x03
    1a56:	81 fd       	sbrc	r24, 1
    1a58:	03 c0       	rjmp	.+6      	; 0x1a60 <fputc+0x1a>
    1a5a:	8f ef       	ldi	r24, 0xFF	; 255
    1a5c:	9f ef       	ldi	r25, 0xFF	; 255
    1a5e:	20 c0       	rjmp	.+64     	; 0x1aa0 <fputc+0x5a>
    1a60:	82 ff       	sbrs	r24, 2
    1a62:	10 c0       	rjmp	.+32     	; 0x1a84 <fputc+0x3e>
    1a64:	4e 81       	ldd	r20, Y+6	; 0x06
    1a66:	5f 81       	ldd	r21, Y+7	; 0x07
    1a68:	2c 81       	ldd	r18, Y+4	; 0x04
    1a6a:	3d 81       	ldd	r19, Y+5	; 0x05
    1a6c:	42 17       	cp	r20, r18
    1a6e:	53 07       	cpc	r21, r19
    1a70:	7c f4       	brge	.+30     	; 0x1a90 <fputc+0x4a>
    1a72:	e8 81       	ld	r30, Y
    1a74:	f9 81       	ldd	r31, Y+1	; 0x01
    1a76:	9f 01       	movw	r18, r30
    1a78:	2f 5f       	subi	r18, 0xFF	; 255
    1a7a:	3f 4f       	sbci	r19, 0xFF	; 255
    1a7c:	39 83       	std	Y+1, r19	; 0x01
    1a7e:	28 83       	st	Y, r18
    1a80:	10 83       	st	Z, r17
    1a82:	06 c0       	rjmp	.+12     	; 0x1a90 <fputc+0x4a>
    1a84:	e8 85       	ldd	r30, Y+8	; 0x08
    1a86:	f9 85       	ldd	r31, Y+9	; 0x09
    1a88:	81 2f       	mov	r24, r17
    1a8a:	09 95       	icall
    1a8c:	89 2b       	or	r24, r25
    1a8e:	29 f7       	brne	.-54     	; 0x1a5a <fputc+0x14>
    1a90:	2e 81       	ldd	r18, Y+6	; 0x06
    1a92:	3f 81       	ldd	r19, Y+7	; 0x07
    1a94:	2f 5f       	subi	r18, 0xFF	; 255
    1a96:	3f 4f       	sbci	r19, 0xFF	; 255
    1a98:	3f 83       	std	Y+7, r19	; 0x07
    1a9a:	2e 83       	std	Y+6, r18	; 0x06
    1a9c:	81 2f       	mov	r24, r17
    1a9e:	90 2f       	mov	r25, r16
    1aa0:	df 91       	pop	r29
    1aa2:	cf 91       	pop	r28
    1aa4:	1f 91       	pop	r17
    1aa6:	0f 91       	pop	r16
    1aa8:	08 95       	ret

00001aaa <__ultoa_invert>:
    1aaa:	fa 01       	movw	r30, r20
    1aac:	aa 27       	eor	r26, r26
    1aae:	28 30       	cpi	r18, 0x08	; 8
    1ab0:	51 f1       	breq	.+84     	; 0x1b06 <__ultoa_invert+0x5c>
    1ab2:	20 31       	cpi	r18, 0x10	; 16
    1ab4:	81 f1       	breq	.+96     	; 0x1b16 <__ultoa_invert+0x6c>
    1ab6:	e8 94       	clt
    1ab8:	6f 93       	push	r22
    1aba:	6e 7f       	andi	r22, 0xFE	; 254
    1abc:	6e 5f       	subi	r22, 0xFE	; 254
    1abe:	7f 4f       	sbci	r23, 0xFF	; 255
    1ac0:	8f 4f       	sbci	r24, 0xFF	; 255
    1ac2:	9f 4f       	sbci	r25, 0xFF	; 255
    1ac4:	af 4f       	sbci	r26, 0xFF	; 255
    1ac6:	b1 e0       	ldi	r27, 0x01	; 1
    1ac8:	3e d0       	rcall	.+124    	; 0x1b46 <__ultoa_invert+0x9c>
    1aca:	b4 e0       	ldi	r27, 0x04	; 4
    1acc:	3c d0       	rcall	.+120    	; 0x1b46 <__ultoa_invert+0x9c>
    1ace:	67 0f       	add	r22, r23
    1ad0:	78 1f       	adc	r23, r24
    1ad2:	89 1f       	adc	r24, r25
    1ad4:	9a 1f       	adc	r25, r26
    1ad6:	a1 1d       	adc	r26, r1
    1ad8:	68 0f       	add	r22, r24
    1ada:	79 1f       	adc	r23, r25
    1adc:	8a 1f       	adc	r24, r26
    1ade:	91 1d       	adc	r25, r1
    1ae0:	a1 1d       	adc	r26, r1
    1ae2:	6a 0f       	add	r22, r26
    1ae4:	71 1d       	adc	r23, r1
    1ae6:	81 1d       	adc	r24, r1
    1ae8:	91 1d       	adc	r25, r1
    1aea:	a1 1d       	adc	r26, r1
    1aec:	20 d0       	rcall	.+64     	; 0x1b2e <__ultoa_invert+0x84>
    1aee:	09 f4       	brne	.+2      	; 0x1af2 <__ultoa_invert+0x48>
    1af0:	68 94       	set
    1af2:	3f 91       	pop	r19
    1af4:	2a e0       	ldi	r18, 0x0A	; 10
    1af6:	26 9f       	mul	r18, r22
    1af8:	11 24       	eor	r1, r1
    1afa:	30 19       	sub	r19, r0
    1afc:	30 5d       	subi	r19, 0xD0	; 208
    1afe:	31 93       	st	Z+, r19
    1b00:	de f6       	brtc	.-74     	; 0x1ab8 <__ultoa_invert+0xe>
    1b02:	cf 01       	movw	r24, r30
    1b04:	08 95       	ret
    1b06:	46 2f       	mov	r20, r22
    1b08:	47 70       	andi	r20, 0x07	; 7
    1b0a:	40 5d       	subi	r20, 0xD0	; 208
    1b0c:	41 93       	st	Z+, r20
    1b0e:	b3 e0       	ldi	r27, 0x03	; 3
    1b10:	0f d0       	rcall	.+30     	; 0x1b30 <__ultoa_invert+0x86>
    1b12:	c9 f7       	brne	.-14     	; 0x1b06 <__ultoa_invert+0x5c>
    1b14:	f6 cf       	rjmp	.-20     	; 0x1b02 <__ultoa_invert+0x58>
    1b16:	46 2f       	mov	r20, r22
    1b18:	4f 70       	andi	r20, 0x0F	; 15
    1b1a:	40 5d       	subi	r20, 0xD0	; 208
    1b1c:	4a 33       	cpi	r20, 0x3A	; 58
    1b1e:	18 f0       	brcs	.+6      	; 0x1b26 <__ultoa_invert+0x7c>
    1b20:	49 5d       	subi	r20, 0xD9	; 217
    1b22:	31 fd       	sbrc	r19, 1
    1b24:	40 52       	subi	r20, 0x20	; 32
    1b26:	41 93       	st	Z+, r20
    1b28:	02 d0       	rcall	.+4      	; 0x1b2e <__ultoa_invert+0x84>
    1b2a:	a9 f7       	brne	.-22     	; 0x1b16 <__ultoa_invert+0x6c>
    1b2c:	ea cf       	rjmp	.-44     	; 0x1b02 <__ultoa_invert+0x58>
    1b2e:	b4 e0       	ldi	r27, 0x04	; 4
    1b30:	a6 95       	lsr	r26
    1b32:	97 95       	ror	r25
    1b34:	87 95       	ror	r24
    1b36:	77 95       	ror	r23
    1b38:	67 95       	ror	r22
    1b3a:	ba 95       	dec	r27
    1b3c:	c9 f7       	brne	.-14     	; 0x1b30 <__ultoa_invert+0x86>
    1b3e:	00 97       	sbiw	r24, 0x00	; 0
    1b40:	61 05       	cpc	r22, r1
    1b42:	71 05       	cpc	r23, r1
    1b44:	08 95       	ret
    1b46:	9b 01       	movw	r18, r22
    1b48:	ac 01       	movw	r20, r24
    1b4a:	0a 2e       	mov	r0, r26
    1b4c:	06 94       	lsr	r0
    1b4e:	57 95       	ror	r21
    1b50:	47 95       	ror	r20
    1b52:	37 95       	ror	r19
    1b54:	27 95       	ror	r18
    1b56:	ba 95       	dec	r27
    1b58:	c9 f7       	brne	.-14     	; 0x1b4c <__ultoa_invert+0xa2>
    1b5a:	62 0f       	add	r22, r18
    1b5c:	73 1f       	adc	r23, r19
    1b5e:	84 1f       	adc	r24, r20
    1b60:	95 1f       	adc	r25, r21
    1b62:	a0 1d       	adc	r26, r0
    1b64:	08 95       	ret

00001b66 <__prologue_saves__>:
    1b66:	2f 92       	push	r2
    1b68:	3f 92       	push	r3
    1b6a:	4f 92       	push	r4
    1b6c:	5f 92       	push	r5
    1b6e:	6f 92       	push	r6
    1b70:	7f 92       	push	r7
    1b72:	8f 92       	push	r8
    1b74:	9f 92       	push	r9
    1b76:	af 92       	push	r10
    1b78:	bf 92       	push	r11
    1b7a:	cf 92       	push	r12
    1b7c:	df 92       	push	r13
    1b7e:	ef 92       	push	r14
    1b80:	ff 92       	push	r15
    1b82:	0f 93       	push	r16
    1b84:	1f 93       	push	r17
    1b86:	cf 93       	push	r28
    1b88:	df 93       	push	r29
    1b8a:	cd b7       	in	r28, 0x3d	; 61
    1b8c:	de b7       	in	r29, 0x3e	; 62
    1b8e:	ca 1b       	sub	r28, r26
    1b90:	db 0b       	sbc	r29, r27
    1b92:	0f b6       	in	r0, 0x3f	; 63
    1b94:	f8 94       	cli
    1b96:	de bf       	out	0x3e, r29	; 62
    1b98:	0f be       	out	0x3f, r0	; 63
    1b9a:	cd bf       	out	0x3d, r28	; 61
    1b9c:	09 94       	ijmp

00001b9e <__epilogue_restores__>:
    1b9e:	2a 88       	ldd	r2, Y+18	; 0x12
    1ba0:	39 88       	ldd	r3, Y+17	; 0x11
    1ba2:	48 88       	ldd	r4, Y+16	; 0x10
    1ba4:	5f 84       	ldd	r5, Y+15	; 0x0f
    1ba6:	6e 84       	ldd	r6, Y+14	; 0x0e
    1ba8:	7d 84       	ldd	r7, Y+13	; 0x0d
    1baa:	8c 84       	ldd	r8, Y+12	; 0x0c
    1bac:	9b 84       	ldd	r9, Y+11	; 0x0b
    1bae:	aa 84       	ldd	r10, Y+10	; 0x0a
    1bb0:	b9 84       	ldd	r11, Y+9	; 0x09
    1bb2:	c8 84       	ldd	r12, Y+8	; 0x08
    1bb4:	df 80       	ldd	r13, Y+7	; 0x07
    1bb6:	ee 80       	ldd	r14, Y+6	; 0x06
    1bb8:	fd 80       	ldd	r15, Y+5	; 0x05
    1bba:	0c 81       	ldd	r16, Y+4	; 0x04
    1bbc:	1b 81       	ldd	r17, Y+3	; 0x03
    1bbe:	aa 81       	ldd	r26, Y+2	; 0x02
    1bc0:	b9 81       	ldd	r27, Y+1	; 0x01
    1bc2:	ce 0f       	add	r28, r30
    1bc4:	d1 1d       	adc	r29, r1
    1bc6:	0f b6       	in	r0, 0x3f	; 63
    1bc8:	f8 94       	cli
    1bca:	de bf       	out	0x3e, r29	; 62
    1bcc:	0f be       	out	0x3f, r0	; 63
    1bce:	cd bf       	out	0x3d, r28	; 61
    1bd0:	ed 01       	movw	r28, r26
    1bd2:	08 95       	ret

00001bd4 <_exit>:
    1bd4:	f8 94       	cli

00001bd6 <__stop_program>:
    1bd6:	ff cf       	rjmp	.-2      	; 0x1bd6 <__stop_program>
