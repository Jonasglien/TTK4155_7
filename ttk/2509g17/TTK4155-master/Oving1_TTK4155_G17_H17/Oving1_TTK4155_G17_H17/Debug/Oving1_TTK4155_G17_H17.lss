
Oving1_TTK4155_G17_H17.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000002a4  00800100  00001bf4  00001c88  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001bf4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000008d  008003a4  008003a4  00001f2c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001f2c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000340  00000000  00000000  00001f88  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003c57  00000000  00000000  000022c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001056  00000000  00000000  00005f1f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000011d5  00000000  00000000  00006f75  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000a9c  00000000  00000000  0000814c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000cc3  00000000  00000000  00008be8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00002977  00000000  00000000  000098ab  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000318  00000000  00000000  0000c222  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
       4:	0c 94 b0 00 	jmp	0x160	; 0x160 <__vector_1>
       8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__vector_2>
       c:	0c 94 2b 02 	jmp	0x456	; 0x456 <__vector_3>
      10:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      14:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      18:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      1c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      20:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      24:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      28:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      2c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      30:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      34:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      38:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      3c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      40:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      44:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      48:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      4c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      50:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      54:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      58:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      5c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      60:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      64:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      68:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
      6c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	43 61       	ori	r20, 0x13	; 19
      72:	6c 69       	ori	r22, 0x9C	; 156
      74:	62 72       	andi	r22, 0x22	; 34
      76:	61 74       	andi	r22, 0x41	; 65
      78:	65 00       	.word	0x0065	; ????

0000007a <debug_entry_0>:
      7a:	66 69 74 20 73 63 72 65 65 6e 00                    fit screen.

00000085 <option_entry_1>:
      85:	43 6f 6e 74 72 61 73 74 00                          Contrast.

0000008e <option_entry_0>:
      8e:	4d 75 73 69 63 00                                   Music.

00000094 <mainmenu_entry_3>:
      94:	4f 70 74 69 6f 6e 73 00                             Options.

0000009c <mainmenu_entry_2>:
      9c:	44 65 62 75 67 00                                   Debug.

000000a2 <mainmenu_entry_1>:
      a2:	48 69 67 68 73 63 6f 72 65 00                       Highscore.

000000ac <__ctors_end>:
      ac:	11 24       	eor	r1, r1
      ae:	1f be       	out	0x3f, r1	; 63
      b0:	cf ef       	ldi	r28, 0xFF	; 255
      b2:	d4 e0       	ldi	r29, 0x04	; 4
      b4:	de bf       	out	0x3e, r29	; 62
      b6:	cd bf       	out	0x3d, r28	; 61

000000b8 <__do_copy_data>:
      b8:	13 e0       	ldi	r17, 0x03	; 3
      ba:	a0 e0       	ldi	r26, 0x00	; 0
      bc:	b1 e0       	ldi	r27, 0x01	; 1
      be:	e4 ef       	ldi	r30, 0xF4	; 244
      c0:	fb e1       	ldi	r31, 0x1B	; 27
      c2:	02 c0       	rjmp	.+4      	; 0xc8 <__do_copy_data+0x10>
      c4:	05 90       	lpm	r0, Z+
      c6:	0d 92       	st	X+, r0
      c8:	a4 3a       	cpi	r26, 0xA4	; 164
      ca:	b1 07       	cpc	r27, r17
      cc:	d9 f7       	brne	.-10     	; 0xc4 <__do_copy_data+0xc>

000000ce <__do_clear_bss>:
      ce:	24 e0       	ldi	r18, 0x04	; 4
      d0:	a4 ea       	ldi	r26, 0xA4	; 164
      d2:	b3 e0       	ldi	r27, 0x03	; 3
      d4:	01 c0       	rjmp	.+2      	; 0xd8 <.do_clear_bss_start>

000000d6 <.do_clear_bss_loop>:
      d6:	1d 92       	st	X+, r1

000000d8 <.do_clear_bss_start>:
      d8:	a1 33       	cpi	r26, 0x31	; 49
      da:	b2 07       	cpc	r27, r18
      dc:	e1 f7       	brne	.-8      	; 0xd6 <.do_clear_bss_loop>
      de:	0e 94 98 04 	call	0x930	; 0x930 <main>
      e2:	0c 94 f8 0d 	jmp	0x1bf0	; 0x1bf0 <_exit>

000000e6 <__bad_interrupt>:
      e6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ea <readADC>:
      ea:	82 30       	cpi	r24, 0x02	; 2
      ec:	91 05       	cpc	r25, r1
      ee:	71 f0       	breq	.+28     	; 0x10c <readADC+0x22>
      f0:	1c f4       	brge	.+6      	; 0xf8 <readADC+0xe>
      f2:	01 97       	sbiw	r24, 0x01	; 1
      f4:	39 f0       	breq	.+14     	; 0x104 <readADC+0x1a>
      f6:	1c c0       	rjmp	.+56     	; 0x130 <readADC+0x46>
      f8:	83 30       	cpi	r24, 0x03	; 3
      fa:	91 05       	cpc	r25, r1
      fc:	59 f0       	breq	.+22     	; 0x114 <readADC+0x2a>
      fe:	04 97       	sbiw	r24, 0x04	; 4
     100:	69 f0       	breq	.+26     	; 0x11c <readADC+0x32>
     102:	16 c0       	rjmp	.+44     	; 0x130 <readADC+0x46>
     104:	84 e1       	ldi	r24, 0x14	; 20
     106:	80 93 00 14 	sts	0x1400, r24
     10a:	0b c0       	rjmp	.+22     	; 0x122 <readADC+0x38>
     10c:	85 e1       	ldi	r24, 0x15	; 21
     10e:	80 93 00 14 	sts	0x1400, r24
     112:	07 c0       	rjmp	.+14     	; 0x122 <readADC+0x38>
     114:	86 e1       	ldi	r24, 0x16	; 22
     116:	80 93 00 14 	sts	0x1400, r24
     11a:	03 c0       	rjmp	.+6      	; 0x122 <readADC+0x38>
     11c:	87 e1       	ldi	r24, 0x17	; 23
     11e:	80 93 00 14 	sts	0x1400, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     122:	82 e5       	ldi	r24, 0x52	; 82
     124:	8a 95       	dec	r24
     126:	f1 f7       	brne	.-4      	; 0x124 <readADC+0x3a>
     128:	80 91 00 14 	lds	r24, 0x1400
     12c:	90 e0       	ldi	r25, 0x00	; 0
     12e:	08 95       	ret
     130:	80 e0       	ldi	r24, 0x00	; 0
     132:	90 e0       	ldi	r25, 0x00	; 0
     134:	08 95       	ret

00000136 <initalize_interrupts>:
     136:	ba 9a       	sbi	0x17, 2	; 23
     138:	bb 9a       	sbi	0x17, 3	; 23
     13a:	85 b7       	in	r24, 0x35	; 53
     13c:	81 60       	ori	r24, 0x01	; 1
     13e:	85 bf       	out	0x35, r24	; 53
     140:	85 b7       	in	r24, 0x35	; 53
     142:	82 60       	ori	r24, 0x02	; 2
     144:	85 bf       	out	0x35, r24	; 53
     146:	85 b7       	in	r24, 0x35	; 53
     148:	84 60       	ori	r24, 0x04	; 4
     14a:	85 bf       	out	0x35, r24	; 53
     14c:	85 b7       	in	r24, 0x35	; 53
     14e:	88 60       	ori	r24, 0x08	; 8
     150:	85 bf       	out	0x35, r24	; 53
     152:	8b b7       	in	r24, 0x3b	; 59
     154:	80 64       	ori	r24, 0x40	; 64
     156:	8b bf       	out	0x3b, r24	; 59
     158:	8b b7       	in	r24, 0x3b	; 59
     15a:	80 68       	ori	r24, 0x80	; 128
     15c:	8b bf       	out	0x3b, r24	; 59
     15e:	08 95       	ret

00000160 <__vector_1>:
     160:	1f 92       	push	r1
     162:	0f 92       	push	r0
     164:	0f b6       	in	r0, 0x3f	; 63
     166:	0f 92       	push	r0
     168:	11 24       	eor	r1, r1
     16a:	ef 92       	push	r14
     16c:	ff 92       	push	r15
     16e:	0f 93       	push	r16
     170:	1f 93       	push	r17
     172:	2f 93       	push	r18
     174:	3f 93       	push	r19
     176:	4f 93       	push	r20
     178:	5f 93       	push	r21
     17a:	6f 93       	push	r22
     17c:	7f 93       	push	r23
     17e:	8f 93       	push	r24
     180:	9f 93       	push	r25
     182:	af 93       	push	r26
     184:	bf 93       	push	r27
     186:	cf 93       	push	r28
     188:	df 93       	push	r29
     18a:	ef 93       	push	r30
     18c:	ff 93       	push	r31
     18e:	8c e0       	ldi	r24, 0x0C	; 12
     190:	91 e0       	ldi	r25, 0x01	; 1
     192:	9f 93       	push	r25
     194:	8f 93       	push	r24
     196:	0e 94 be 09 	call	0x137c	; 0x137c <printf>
     19a:	82 e5       	ldi	r24, 0x52	; 82
     19c:	0e 94 4c 03 	call	0x698	; 0x698 <read_control_input>
     1a0:	f8 2e       	mov	r15, r24
     1a2:	e9 2e       	mov	r14, r25
     1a4:	8c e4       	ldi	r24, 0x4C	; 76
     1a6:	0e 94 4c 03 	call	0x698	; 0x698 <read_control_input>
     1aa:	18 2f       	mov	r17, r24
     1ac:	09 2f       	mov	r16, r25
     1ae:	89 e5       	ldi	r24, 0x59	; 89
     1b0:	0e 94 4c 03 	call	0x698	; 0x698 <read_control_input>
     1b4:	c8 2f       	mov	r28, r24
     1b6:	d9 2f       	mov	r29, r25
     1b8:	88 e5       	ldi	r24, 0x58	; 88
     1ba:	0e 94 4c 03 	call	0x698	; 0x698 <read_control_input>
     1be:	ef 92       	push	r14
     1c0:	ff 92       	push	r15
     1c2:	0f 93       	push	r16
     1c4:	1f 93       	push	r17
     1c6:	df 93       	push	r29
     1c8:	cf 93       	push	r28
     1ca:	9f 93       	push	r25
     1cc:	8f 93       	push	r24
     1ce:	85 e3       	ldi	r24, 0x35	; 53
     1d0:	91 e0       	ldi	r25, 0x01	; 1
     1d2:	9f 93       	push	r25
     1d4:	8f 93       	push	r24
     1d6:	0e 94 be 09 	call	0x137c	; 0x137c <printf>
     1da:	0e 94 0f 06 	call	0xc1e	; 0xc1e <menu_right_button_flag>
     1de:	8d b7       	in	r24, 0x3d	; 61
     1e0:	9e b7       	in	r25, 0x3e	; 62
     1e2:	0c 96       	adiw	r24, 0x0c	; 12
     1e4:	0f b6       	in	r0, 0x3f	; 63
     1e6:	f8 94       	cli
     1e8:	9e bf       	out	0x3e, r25	; 62
     1ea:	0f be       	out	0x3f, r0	; 63
     1ec:	8d bf       	out	0x3d, r24	; 61
     1ee:	ff 91       	pop	r31
     1f0:	ef 91       	pop	r30
     1f2:	df 91       	pop	r29
     1f4:	cf 91       	pop	r28
     1f6:	bf 91       	pop	r27
     1f8:	af 91       	pop	r26
     1fa:	9f 91       	pop	r25
     1fc:	8f 91       	pop	r24
     1fe:	7f 91       	pop	r23
     200:	6f 91       	pop	r22
     202:	5f 91       	pop	r21
     204:	4f 91       	pop	r20
     206:	3f 91       	pop	r19
     208:	2f 91       	pop	r18
     20a:	1f 91       	pop	r17
     20c:	0f 91       	pop	r16
     20e:	ff 90       	pop	r15
     210:	ef 90       	pop	r14
     212:	0f 90       	pop	r0
     214:	0f be       	out	0x3f, r0	; 63
     216:	0f 90       	pop	r0
     218:	1f 90       	pop	r1
     21a:	18 95       	reti

0000021c <__vector_2>:
     21c:	1f 92       	push	r1
     21e:	0f 92       	push	r0
     220:	0f b6       	in	r0, 0x3f	; 63
     222:	0f 92       	push	r0
     224:	11 24       	eor	r1, r1
     226:	2f 93       	push	r18
     228:	3f 93       	push	r19
     22a:	4f 93       	push	r20
     22c:	5f 93       	push	r21
     22e:	6f 93       	push	r22
     230:	7f 93       	push	r23
     232:	8f 93       	push	r24
     234:	9f 93       	push	r25
     236:	af 93       	push	r26
     238:	bf 93       	push	r27
     23a:	ef 93       	push	r30
     23c:	ff 93       	push	r31
     23e:	0e 94 0b 06 	call	0xc16	; 0xc16 <menu_left_button_flag>
     242:	ff 91       	pop	r31
     244:	ef 91       	pop	r30
     246:	bf 91       	pop	r27
     248:	af 91       	pop	r26
     24a:	9f 91       	pop	r25
     24c:	8f 91       	pop	r24
     24e:	7f 91       	pop	r23
     250:	6f 91       	pop	r22
     252:	5f 91       	pop	r21
     254:	4f 91       	pop	r20
     256:	3f 91       	pop	r19
     258:	2f 91       	pop	r18
     25a:	0f 90       	pop	r0
     25c:	0f be       	out	0x3f, r0	; 63
     25e:	0f 90       	pop	r0
     260:	1f 90       	pop	r1
     262:	18 95       	reti

00000264 <CAN_initialize>:
static CAN_message_t CAN_send_buffer;

void CAN_initialize(void){
	int i = 1;
	i++;
	EMCUCR &= ~(1<<ISC2);
     264:	86 b7       	in	r24, 0x36	; 54
     266:	8e 7f       	andi	r24, 0xFE	; 254
     268:	86 bf       	out	0x36, r24	; 54
	GICR |= (1<<INT2);
     26a:	8b b7       	in	r24, 0x3b	; 59
     26c:	80 62       	ori	r24, 0x20	; 32
     26e:	8b bf       	out	0x3b, r24	; 59
	MCP2515_bit_modify(CANINTE,0b00000001,0b00000001);
     270:	41 e0       	ldi	r20, 0x01	; 1
     272:	61 e0       	ldi	r22, 0x01	; 1
     274:	8b e2       	ldi	r24, 0x2B	; 43
     276:	0e 94 30 05 	call	0xa60	; 0xa60 <MCP2515_bit_modify>
     27a:	08 95       	ret

0000027c <CAN_message_receive>:
}

CAN_message_t* CAN_message_receive(void){	
	return &CAN_receive_buffer;
}
     27c:	8f ea       	ldi	r24, 0xAF	; 175
     27e:	93 e0       	ldi	r25, 0x03	; 3
     280:	08 95       	ret

00000282 <CAN_construct_meassage>:

void CAN_construct_meassage(int id, uint8_t length, uint8_t *data){
	CAN_send_buffer.id = id;
     282:	90 93 a5 03 	sts	0x03A5, r25
     286:	80 93 a4 03 	sts	0x03A4, r24
	CAN_send_buffer.length = length;
     28a:	60 93 a6 03 	sts	0x03A6, r22
	for(uint8_t i = 0; i < CAN_send_buffer.length; i++){
     28e:	66 23       	and	r22, r22
     290:	59 f0       	breq	.+22     	; 0x2a8 <CAN_construct_meassage+0x26>
     292:	94 2f       	mov	r25, r20
     294:	a7 ea       	ldi	r26, 0xA7	; 167
     296:	b3 e0       	ldi	r27, 0x03	; 3
     298:	e4 2f       	mov	r30, r20
     29a:	f5 2f       	mov	r31, r21
		CAN_send_buffer.data[i] = data[i];
     29c:	81 91       	ld	r24, Z+
     29e:	8d 93       	st	X+, r24
     2a0:	8e 2f       	mov	r24, r30
     2a2:	89 1b       	sub	r24, r25
}

void CAN_construct_meassage(int id, uint8_t length, uint8_t *data){
	CAN_send_buffer.id = id;
	CAN_send_buffer.length = length;
	for(uint8_t i = 0; i < CAN_send_buffer.length; i++){
     2a4:	86 17       	cp	r24, r22
     2a6:	d0 f3       	brcs	.-12     	; 0x29c <CAN_construct_meassage+0x1a>
     2a8:	08 95       	ret

000002aa <CAN_send_byte>:
		CAN_send_buffer.data[i] = data[i];
	}
	CAN_send_byte(&CAN_send_buffer,0);
}

void CAN_send_byte(CAN_message_t* message,uint8_t n){
     2aa:	ff 92       	push	r15
     2ac:	0f 93       	push	r16
     2ae:	1f 93       	push	r17
     2b0:	cf 93       	push	r28
     2b2:	df 93       	push	r29
     2b4:	ec 01       	movw	r28, r24
     2b6:	f6 2e       	mov	r15, r22
	MCP2515_write(0x31+n*0x10,message->id>>3);//8 most significant bits of the message ID
     2b8:	06 2f       	mov	r16, r22
     2ba:	02 95       	swap	r16
     2bc:	00 7f       	andi	r16, 0xF0	; 240
     2be:	28 81       	ld	r18, Y
     2c0:	39 81       	ldd	r19, Y+1	; 0x01
     2c2:	b9 01       	movw	r22, r18
     2c4:	75 95       	asr	r23
     2c6:	67 95       	ror	r22
     2c8:	75 95       	asr	r23
     2ca:	67 95       	ror	r22
     2cc:	75 95       	asr	r23
     2ce:	67 95       	ror	r22
     2d0:	81 e3       	ldi	r24, 0x31	; 49
     2d2:	80 0f       	add	r24, r16
     2d4:	0e 94 f7 04 	call	0x9ee	; 0x9ee <MCP2515_write>
	MCP2515_write(0x32+n*0x10,message->id<<5);//3 least significant bits of the message ID
     2d8:	68 81       	ld	r22, Y
     2da:	62 95       	swap	r22
     2dc:	66 0f       	add	r22, r22
     2de:	60 7e       	andi	r22, 0xE0	; 224
     2e0:	82 e3       	ldi	r24, 0x32	; 50
     2e2:	80 0f       	add	r24, r16
     2e4:	0e 94 f7 04 	call	0x9ee	; 0x9ee <MCP2515_write>
	MCP2515_write(0x35+n*0x10,(0b00001111)&(message->length));//Message length
     2e8:	6a 81       	ldd	r22, Y+2	; 0x02
     2ea:	6f 70       	andi	r22, 0x0F	; 15
     2ec:	85 e3       	ldi	r24, 0x35	; 53
     2ee:	80 0f       	add	r24, r16
     2f0:	0e 94 f7 04 	call	0x9ee	; 0x9ee <MCP2515_write>
	
	for (uint8_t i = 0; i < message->length;i++)
     2f4:	8a 81       	ldd	r24, Y+2	; 0x02
     2f6:	88 23       	and	r24, r24
     2f8:	71 f0       	breq	.+28     	; 0x316 <CAN_send_byte+0x6c>
     2fa:	10 e0       	ldi	r17, 0x00	; 0
	{
		MCP2515_write(0x36+n*0x10+i,message->data[i]);//Message data
     2fc:	0a 5c       	subi	r16, 0xCA	; 202
     2fe:	fe 01       	movw	r30, r28
     300:	e1 0f       	add	r30, r17
     302:	f1 1d       	adc	r31, r1
     304:	63 81       	ldd	r22, Z+3	; 0x03
     306:	80 2f       	mov	r24, r16
     308:	81 0f       	add	r24, r17
     30a:	0e 94 f7 04 	call	0x9ee	; 0x9ee <MCP2515_write>
void CAN_send_byte(CAN_message_t* message,uint8_t n){
	MCP2515_write(0x31+n*0x10,message->id>>3);//8 most significant bits of the message ID
	MCP2515_write(0x32+n*0x10,message->id<<5);//3 least significant bits of the message ID
	MCP2515_write(0x35+n*0x10,(0b00001111)&(message->length));//Message length
	
	for (uint8_t i = 0; i < message->length;i++)
     30e:	1f 5f       	subi	r17, 0xFF	; 255
     310:	9a 81       	ldd	r25, Y+2	; 0x02
     312:	19 17       	cp	r17, r25
     314:	a0 f3       	brcs	.-24     	; 0x2fe <CAN_send_byte+0x54>
	{
		MCP2515_write(0x36+n*0x10+i,message->data[i]);//Message data
	}
	
	MCP2515_request_to_send(0x80+(1<<n));
     316:	81 e0       	ldi	r24, 0x01	; 1
     318:	90 e0       	ldi	r25, 0x00	; 0
     31a:	02 c0       	rjmp	.+4      	; 0x320 <CAN_send_byte+0x76>
     31c:	88 0f       	add	r24, r24
     31e:	99 1f       	adc	r25, r25
     320:	fa 94       	dec	r15
     322:	e2 f7       	brpl	.-8      	; 0x31c <CAN_send_byte+0x72>
     324:	80 58       	subi	r24, 0x80	; 128
     326:	0e 94 1d 05 	call	0xa3a	; 0xa3a <MCP2515_request_to_send>
	//printf("ID %i L: %i DATA: %i %i %i %i %i %i %i %i\n",CAN_send_buffer.id,CAN_send_buffer.length,CAN_send_buffer.data[0],CAN_send_buffer.data[1],CAN_send_buffer.data[2],CAN_send_buffer.data[3],CAN_send_buffer.data[4],CAN_send_buffer.data[5],CAN_send_buffer.data[6],CAN_send_buffer.data[7]);
	
}
     32a:	df 91       	pop	r29
     32c:	cf 91       	pop	r28
     32e:	1f 91       	pop	r17
     330:	0f 91       	pop	r16
     332:	ff 90       	pop	r15
     334:	08 95       	ret

00000336 <CAN_message_send>:
		CAN_send_buffer.data[i] = data[i];
	}
}

void CAN_message_send(uint8_t *data){//array of uint8_t as input
	for(uint8_t i = 0; i < CAN_send_buffer.length; i++){
     336:	20 91 a6 03 	lds	r18, 0x03A6
     33a:	22 23       	and	r18, r18
     33c:	59 f0       	breq	.+22     	; 0x354 <CAN_message_send+0x1e>
     33e:	38 2f       	mov	r19, r24
     340:	a7 ea       	ldi	r26, 0xA7	; 167
     342:	b3 e0       	ldi	r27, 0x03	; 3
     344:	e8 2f       	mov	r30, r24
     346:	f9 2f       	mov	r31, r25
		CAN_send_buffer.data[i] = data[i];
     348:	81 91       	ld	r24, Z+
     34a:	8d 93       	st	X+, r24
     34c:	8e 2f       	mov	r24, r30
     34e:	83 1b       	sub	r24, r19
		CAN_send_buffer.data[i] = data[i];
	}
}

void CAN_message_send(uint8_t *data){//array of uint8_t as input
	for(uint8_t i = 0; i < CAN_send_buffer.length; i++){
     350:	82 17       	cp	r24, r18
     352:	d0 f3       	brcs	.-12     	; 0x348 <CAN_message_send+0x12>
		CAN_send_buffer.data[i] = data[i];
	}
	CAN_send_byte(&CAN_send_buffer,0);
     354:	60 e0       	ldi	r22, 0x00	; 0
     356:	84 ea       	ldi	r24, 0xA4	; 164
     358:	93 e0       	ldi	r25, 0x03	; 3
     35a:	0e 94 55 01 	call	0x2aa	; 0x2aa <CAN_send_byte>
     35e:	08 95       	ret

00000360 <CAN_read>:
	//printf("ID %i L: %i DATA: %i %i %i %i %i %i %i %i\n",CAN_send_buffer.id,CAN_send_buffer.length,CAN_send_buffer.data[0],CAN_send_buffer.data[1],CAN_send_buffer.data[2],CAN_send_buffer.data[3],CAN_send_buffer.data[4],CAN_send_buffer.data[5],CAN_send_buffer.data[6],CAN_send_buffer.data[7]);
	
}

uint8_t CAN_read(uint8_t adr){
	return MCP2515_read(adr);
     360:	0e 94 0b 05 	call	0xa16	; 0xa16 <MCP2515_read>
}
     364:	08 95       	ret

00000366 <CAN_transmit_complete>:
ISR(INT2_vect){//interrupt button Left
	CAN_data_receive();
}


uint8_t CAN_transmit_complete(void){
     366:	cf 93       	push	r28
     368:	df 93       	push	r29
     36a:	1f 92       	push	r1
     36c:	cd b7       	in	r28, 0x3d	; 61
     36e:	de b7       	in	r29, 0x3e	; 62


	volatile char interrupt = MCP2515_read(MCP_CANINTF);
     370:	8c e2       	ldi	r24, 0x2C	; 44
     372:	0e 94 0b 05 	call	0xa16	; 0xa16 <MCP2515_read>
     376:	89 83       	std	Y+1, r24	; 0x01

	while((!((1 << MCP_RX0IF) & interrupt))&&(!((1 << MCP_RX1IF)&interrupt))){
     378:	89 81       	ldd	r24, Y+1	; 0x01
     37a:	81 fd       	sbrc	r24, 1
     37c:	0d c0       	rjmp	.+26     	; 0x398 <CAN_transmit_complete+0x32>
     37e:	89 81       	ldd	r24, Y+1	; 0x01
     380:	82 fd       	sbrc	r24, 2
     382:	0a c0       	rjmp	.+20     	; 0x398 <CAN_transmit_complete+0x32>
		interrupt = MCP2515_read(MCP_CANINTF);
     384:	8c e2       	ldi	r24, 0x2C	; 44
     386:	0e 94 0b 05 	call	0xa16	; 0xa16 <MCP2515_read>
     38a:	89 83       	std	Y+1, r24	; 0x01
uint8_t CAN_transmit_complete(void){


	volatile char interrupt = MCP2515_read(MCP_CANINTF);

	while((!((1 << MCP_RX0IF) & interrupt))&&(!((1 << MCP_RX1IF)&interrupt))){
     38c:	89 81       	ldd	r24, Y+1	; 0x01
     38e:	81 fd       	sbrc	r24, 1
     390:	03 c0       	rjmp	.+6      	; 0x398 <CAN_transmit_complete+0x32>
     392:	89 81       	ldd	r24, Y+1	; 0x01
     394:	82 ff       	sbrs	r24, 2
     396:	f6 cf       	rjmp	.-20     	; 0x384 <CAN_transmit_complete+0x1e>
		interrupt = MCP2515_read(MCP_CANINTF);
	}
	

	if((1 << MCP_RX0IF)&interrupt){
     398:	89 81       	ldd	r24, Y+1	; 0x01
     39a:	81 fd       	sbrc	r24, 1
     39c:	05 c0       	rjmp	.+10     	; 0x3a8 <CAN_transmit_complete+0x42>
		return 0;
	}
	else if((1 << MCP_RX1IF)&interrupt){
     39e:	89 81       	ldd	r24, Y+1	; 0x01
     3a0:	82 ff       	sbrs	r24, 2
     3a2:	04 c0       	rjmp	.+8      	; 0x3ac <CAN_transmit_complete+0x46>
		return 1;
     3a4:	81 e0       	ldi	r24, 0x01	; 1
     3a6:	03 c0       	rjmp	.+6      	; 0x3ae <CAN_transmit_complete+0x48>
		interrupt = MCP2515_read(MCP_CANINTF);
	}
	

	if((1 << MCP_RX0IF)&interrupt){
		return 0;
     3a8:	80 e0       	ldi	r24, 0x00	; 0
     3aa:	01 c0       	rjmp	.+2      	; 0x3ae <CAN_transmit_complete+0x48>
	}
	else if((1 << MCP_RX1IF)&interrupt){
		return 1;
	}
	else{
		return -1;
     3ac:	8f ef       	ldi	r24, 0xFF	; 255
	}
     3ae:	0f 90       	pop	r0
     3b0:	df 91       	pop	r29
     3b2:	cf 91       	pop	r28
     3b4:	08 95       	ret

000003b6 <CAN_data_receive>:
#define RXBnSIDH 0x61
#define RXBnSIDL 0x62
#define RXBnDLC 0x65
#define RXBnDM 0x66

void CAN_data_receive() {
     3b6:	ff 92       	push	r15
     3b8:	0f 93       	push	r16
     3ba:	1f 93       	push	r17
     3bc:	cf 93       	push	r28
     3be:	df 93       	push	r29
	uint8_t n = CAN_transmit_complete();
     3c0:	0e 94 b3 01 	call	0x366	; 0x366 <CAN_transmit_complete>
	if (n >= 1){
     3c4:	88 23       	and	r24, r24
     3c6:	71 f1       	breq	.+92     	; 0x424 <CAN_data_receive+0x6e>
		CAN_receive_buffer.id = ((CAN_read(RXBnSIDH + n*0x10)<<3)|(0b11100000 & (CAN_read(RXBnSIDL + n*0x10))>>5));
     3c8:	c8 2f       	mov	r28, r24
     3ca:	c2 95       	swap	r28
     3cc:	c0 7f       	andi	r28, 0xF0	; 240
     3ce:	82 e6       	ldi	r24, 0x62	; 98
     3d0:	8c 0f       	add	r24, r28
     3d2:	0e 94 b0 01 	call	0x360	; 0x360 <CAN_read>
     3d6:	81 e6       	ldi	r24, 0x61	; 97
     3d8:	8c 0f       	add	r24, r28
     3da:	0e 94 b0 01 	call	0x360	; 0x360 <CAN_read>
     3de:	28 e0       	ldi	r18, 0x08	; 8
     3e0:	82 9f       	mul	r24, r18
     3e2:	c0 01       	movw	r24, r0
     3e4:	11 24       	eor	r1, r1
     3e6:	90 93 b0 03 	sts	0x03B0, r25
     3ea:	80 93 af 03 	sts	0x03AF, r24
		CAN_receive_buffer.length = (CAN_read(RXBnDLC + n*0x10) & 0b00001111);
     3ee:	85 e6       	ldi	r24, 0x65	; 101
     3f0:	8c 0f       	add	r24, r28
     3f2:	0e 94 b0 01 	call	0x360	; 0x360 <CAN_read>
     3f6:	8f 70       	andi	r24, 0x0F	; 15
     3f8:	e1 eb       	ldi	r30, 0xB1	; 177
     3fa:	f3 e0       	ldi	r31, 0x03	; 3
     3fc:	80 83       	st	Z, r24
		for (uint8_t m = 0; m < CAN_receive_buffer.length; m++){
     3fe:	80 81       	ld	r24, Z
     400:	88 23       	and	r24, r24
     402:	81 f0       	breq	.+32     	; 0x424 <CAN_data_receive+0x6e>
     404:	f1 2c       	mov	r15, r1
     406:	8f 01       	movw	r16, r30
			CAN_receive_buffer.data[m] = CAN_read(RXBnDM + m);
     408:	cf 2d       	mov	r28, r15
     40a:	d0 e0       	ldi	r29, 0x00	; 0
     40c:	86 e6       	ldi	r24, 0x66	; 102
     40e:	8f 0d       	add	r24, r15
     410:	0e 94 b0 01 	call	0x360	; 0x360 <CAN_read>
     414:	c1 55       	subi	r28, 0x51	; 81
     416:	dc 4f       	sbci	r29, 0xFC	; 252
     418:	8b 83       	std	Y+3, r24	; 0x03
void CAN_data_receive() {
	uint8_t n = CAN_transmit_complete();
	if (n >= 1){
		CAN_receive_buffer.id = ((CAN_read(RXBnSIDH + n*0x10)<<3)|(0b11100000 & (CAN_read(RXBnSIDL + n*0x10))>>5));
		CAN_receive_buffer.length = (CAN_read(RXBnDLC + n*0x10) & 0b00001111);
		for (uint8_t m = 0; m < CAN_receive_buffer.length; m++){
     41a:	f3 94       	inc	r15
     41c:	f8 01       	movw	r30, r16
     41e:	80 81       	ld	r24, Z
     420:	f8 16       	cp	r15, r24
     422:	90 f3       	brcs	.-28     	; 0x408 <CAN_data_receive+0x52>
			CAN_receive_buffer.data[m] = CAN_read(RXBnDM + m);
		}
		
	}
	printf("%i",CAN_receive_buffer.data[0]);
     424:	80 91 b2 03 	lds	r24, 0x03B2
     428:	1f 92       	push	r1
     42a:	8f 93       	push	r24
     42c:	8e e4       	ldi	r24, 0x4E	; 78
     42e:	91 e0       	ldi	r25, 0x01	; 1
     430:	9f 93       	push	r25
     432:	8f 93       	push	r24
     434:	0e 94 be 09 	call	0x137c	; 0x137c <printf>
	MCP2515_bit_modify(MCP_CANINTF,0xFF,0); //clear all interrupts
     438:	40 e0       	ldi	r20, 0x00	; 0
     43a:	6f ef       	ldi	r22, 0xFF	; 255
     43c:	8c e2       	ldi	r24, 0x2C	; 44
     43e:	0e 94 30 05 	call	0xa60	; 0xa60 <MCP2515_bit_modify>
     442:	0f 90       	pop	r0
     444:	0f 90       	pop	r0
     446:	0f 90       	pop	r0
     448:	0f 90       	pop	r0
}
     44a:	df 91       	pop	r29
     44c:	cf 91       	pop	r28
     44e:	1f 91       	pop	r17
     450:	0f 91       	pop	r16
     452:	ff 90       	pop	r15
     454:	08 95       	ret

00000456 <__vector_3>:

ISR(INT2_vect){//interrupt button Left
     456:	1f 92       	push	r1
     458:	0f 92       	push	r0
     45a:	0f b6       	in	r0, 0x3f	; 63
     45c:	0f 92       	push	r0
     45e:	11 24       	eor	r1, r1
     460:	2f 93       	push	r18
     462:	3f 93       	push	r19
     464:	4f 93       	push	r20
     466:	5f 93       	push	r21
     468:	6f 93       	push	r22
     46a:	7f 93       	push	r23
     46c:	8f 93       	push	r24
     46e:	9f 93       	push	r25
     470:	af 93       	push	r26
     472:	bf 93       	push	r27
     474:	ef 93       	push	r30
     476:	ff 93       	push	r31
	CAN_data_receive();
     478:	0e 94 db 01 	call	0x3b6	; 0x3b6 <CAN_data_receive>
}
     47c:	ff 91       	pop	r31
     47e:	ef 91       	pop	r30
     480:	bf 91       	pop	r27
     482:	af 91       	pop	r26
     484:	9f 91       	pop	r25
     486:	8f 91       	pop	r24
     488:	7f 91       	pop	r23
     48a:	6f 91       	pop	r22
     48c:	5f 91       	pop	r21
     48e:	4f 91       	pop	r20
     490:	3f 91       	pop	r19
     492:	2f 91       	pop	r18
     494:	0f 90       	pop	r0
     496:	0f be       	out	0x3f, r0	; 63
     498:	0f 90       	pop	r0
     49a:	1f 90       	pop	r1
     49c:	18 95       	reti

0000049e <calibrate_joystick>:
     49e:	0f 93       	push	r16
     4a0:	1f 93       	push	r17
     4a2:	cf 93       	push	r28
     4a4:	df 93       	push	r29
     4a6:	c4 e6       	ldi	r28, 0x64	; 100
     4a8:	d0 e0       	ldi	r29, 0x00	; 0
     4aa:	00 91 c4 03 	lds	r16, 0x03C4
     4ae:	10 91 c5 03 	lds	r17, 0x03C5
     4b2:	81 e0       	ldi	r24, 0x01	; 1
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	0e 94 75 00 	call	0xea	; 0xea <readADC>
     4ba:	01 58       	subi	r16, 0x81	; 129
     4bc:	1f 4f       	sbci	r17, 0xFF	; 255
     4be:	08 1b       	sub	r16, r24
     4c0:	19 0b       	sbc	r17, r25
     4c2:	10 93 c5 03 	sts	0x03C5, r17
     4c6:	00 93 c4 03 	sts	0x03C4, r16
     4ca:	00 91 c2 03 	lds	r16, 0x03C2
     4ce:	10 91 c3 03 	lds	r17, 0x03C3
     4d2:	82 e0       	ldi	r24, 0x02	; 2
     4d4:	90 e0       	ldi	r25, 0x00	; 0
     4d6:	0e 94 75 00 	call	0xea	; 0xea <readADC>
     4da:	01 58       	subi	r16, 0x81	; 129
     4dc:	1f 4f       	sbci	r17, 0xFF	; 255
     4de:	08 1b       	sub	r16, r24
     4e0:	19 0b       	sbc	r17, r25
     4e2:	10 93 c3 03 	sts	0x03C3, r17
     4e6:	00 93 c2 03 	sts	0x03C2, r16
     4ea:	21 97       	sbiw	r28, 0x01	; 1
     4ec:	20 97       	sbiw	r28, 0x00	; 0
     4ee:	e9 f6       	brne	.-70     	; 0x4aa <calibrate_joystick+0xc>
     4f0:	80 91 c4 03 	lds	r24, 0x03C4
     4f4:	90 91 c5 03 	lds	r25, 0x03C5
     4f8:	24 e6       	ldi	r18, 0x64	; 100
     4fa:	30 e0       	ldi	r19, 0x00	; 0
     4fc:	b9 01       	movw	r22, r18
     4fe:	0e 94 4b 09 	call	0x1296	; 0x1296 <__divmodhi4>
     502:	70 93 c5 03 	sts	0x03C5, r23
     506:	60 93 c4 03 	sts	0x03C4, r22
     50a:	80 91 c2 03 	lds	r24, 0x03C2
     50e:	90 91 c3 03 	lds	r25, 0x03C3
     512:	b9 01       	movw	r22, r18
     514:	0e 94 4b 09 	call	0x1296	; 0x1296 <__divmodhi4>
     518:	70 93 c3 03 	sts	0x03C3, r23
     51c:	60 93 c2 03 	sts	0x03C2, r22
     520:	df 91       	pop	r29
     522:	cf 91       	pop	r28
     524:	1f 91       	pop	r17
     526:	0f 91       	pop	r16
     528:	08 95       	ret

0000052a <signal_to_range>:
     52a:	2f 92       	push	r2
     52c:	3f 92       	push	r3
     52e:	4f 92       	push	r4
     530:	5f 92       	push	r5
     532:	6f 92       	push	r6
     534:	7f 92       	push	r7
     536:	8f 92       	push	r8
     538:	9f 92       	push	r9
     53a:	af 92       	push	r10
     53c:	bf 92       	push	r11
     53e:	cf 92       	push	r12
     540:	df 92       	push	r13
     542:	ef 92       	push	r14
     544:	ff 92       	push	r15
     546:	0f 93       	push	r16
     548:	1f 93       	push	r17
     54a:	cf 93       	push	r28
     54c:	df 93       	push	r29
     54e:	00 d0       	rcall	.+0      	; 0x550 <signal_to_range+0x26>
     550:	00 d0       	rcall	.+0      	; 0x552 <signal_to_range+0x28>
     552:	00 d0       	rcall	.+0      	; 0x554 <signal_to_range+0x2a>
     554:	cd b7       	in	r28, 0x3d	; 61
     556:	de b7       	in	r29, 0x3e	; 62
     558:	3c 01       	movw	r6, r24
     55a:	7a 83       	std	Y+2, r23	; 0x02
     55c:	69 83       	std	Y+1, r22	; 0x01
     55e:	5c 83       	std	Y+4, r21	; 0x04
     560:	4b 83       	std	Y+3, r20	; 0x03
     562:	3e 83       	std	Y+6, r19	; 0x06
     564:	2d 83       	std	Y+5, r18	; 0x05
     566:	18 01       	movw	r2, r16
     568:	85 01       	movw	r16, r10
     56a:	b9 01       	movw	r22, r18
     56c:	88 27       	eor	r24, r24
     56e:	77 fd       	sbrc	r23, 7
     570:	80 95       	com	r24
     572:	98 2f       	mov	r25, r24
     574:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <__floatsisf>
     578:	4b 01       	movw	r8, r22
     57a:	5c 01       	movw	r10, r24
     57c:	b3 01       	movw	r22, r6
     57e:	6e 0d       	add	r22, r14
     580:	7f 1d       	adc	r23, r15
     582:	29 81       	ldd	r18, Y+1	; 0x01
     584:	3a 81       	ldd	r19, Y+2	; 0x02
     586:	62 1b       	sub	r22, r18
     588:	73 0b       	sbc	r23, r19
     58a:	88 27       	eor	r24, r24
     58c:	77 fd       	sbrc	r23, 7
     58e:	80 95       	com	r24
     590:	98 2f       	mov	r25, r24
     592:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <__floatsisf>
     596:	2b 01       	movw	r4, r22
     598:	3c 01       	movw	r6, r24
     59a:	b1 01       	movw	r22, r2
     59c:	8d 81       	ldd	r24, Y+5	; 0x05
     59e:	9e 81       	ldd	r25, Y+6	; 0x06
     5a0:	68 1b       	sub	r22, r24
     5a2:	79 0b       	sbc	r23, r25
     5a4:	88 27       	eor	r24, r24
     5a6:	77 fd       	sbrc	r23, 7
     5a8:	80 95       	com	r24
     5aa:	98 2f       	mov	r25, r24
     5ac:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <__floatsisf>
     5b0:	9b 01       	movw	r18, r22
     5b2:	ac 01       	movw	r20, r24
     5b4:	c3 01       	movw	r24, r6
     5b6:	b2 01       	movw	r22, r4
     5b8:	0e 94 e8 08 	call	0x11d0	; 0x11d0 <__mulsf3>
     5bc:	2b 01       	movw	r4, r22
     5be:	3c 01       	movw	r6, r24
     5c0:	6b 81       	ldd	r22, Y+3	; 0x03
     5c2:	7c 81       	ldd	r23, Y+4	; 0x04
     5c4:	e9 81       	ldd	r30, Y+1	; 0x01
     5c6:	fa 81       	ldd	r31, Y+2	; 0x02
     5c8:	6e 1b       	sub	r22, r30
     5ca:	7f 0b       	sbc	r23, r31
     5cc:	88 27       	eor	r24, r24
     5ce:	77 fd       	sbrc	r23, 7
     5d0:	80 95       	com	r24
     5d2:	98 2f       	mov	r25, r24
     5d4:	0e 94 5c 08 	call	0x10b8	; 0x10b8 <__floatsisf>
     5d8:	9b 01       	movw	r18, r22
     5da:	ac 01       	movw	r20, r24
     5dc:	c3 01       	movw	r24, r6
     5de:	b2 01       	movw	r22, r4
     5e0:	0e 94 c1 07 	call	0xf82	; 0xf82 <__divsf3>
     5e4:	9b 01       	movw	r18, r22
     5e6:	ac 01       	movw	r20, r24
     5e8:	c5 01       	movw	r24, r10
     5ea:	b4 01       	movw	r22, r8
     5ec:	0e 94 5d 07 	call	0xeba	; 0xeba <__addsf3>
     5f0:	0e 94 29 08 	call	0x1052	; 0x1052 <__fixsfsi>
     5f4:	c1 01       	movw	r24, r2
     5f6:	80 1b       	sub	r24, r16
     5f8:	91 0b       	sbc	r25, r17
     5fa:	68 17       	cp	r22, r24
     5fc:	79 07       	cpc	r23, r25
     5fe:	74 f5       	brge	.+92     	; 0x65c <signal_to_range+0x132>
     600:	8d 81       	ldd	r24, Y+5	; 0x05
     602:	9e 81       	ldd	r25, Y+6	; 0x06
     604:	80 0f       	add	r24, r16
     606:	91 1f       	adc	r25, r17
     608:	86 17       	cp	r24, r22
     60a:	97 07       	cpc	r25, r23
     60c:	4c f5       	brge	.+82     	; 0x660 <signal_to_range+0x136>
     60e:	f8 01       	movw	r30, r16
     610:	11 23       	and	r17, r17
     612:	0c f4       	brge	.+2      	; 0x616 <signal_to_range+0xec>
     614:	31 96       	adiw	r30, 0x01	; 1
     616:	f5 95       	asr	r31
     618:	e7 95       	ror	r30
     61a:	d8 01       	movw	r26, r16
     61c:	12 c0       	rjmp	.+36     	; 0x642 <signal_to_range+0x118>
     61e:	8a 0f       	add	r24, r26
     620:	9b 1f       	adc	r25, r27
     622:	ac 01       	movw	r20, r24
     624:	4e 0f       	add	r20, r30
     626:	5f 1f       	adc	r21, r31
     628:	64 17       	cp	r22, r20
     62a:	75 07       	cpc	r23, r21
     62c:	14 f0       	brlt	.+4      	; 0x632 <signal_to_range+0x108>
     62e:	69 01       	movw	r12, r18
     630:	0b c0       	rjmp	.+22     	; 0x648 <signal_to_range+0x11e>
     632:	c6 01       	movw	r24, r12
     634:	8e 1b       	sub	r24, r30
     636:	9f 0b       	sbc	r25, r31
     638:	86 17       	cp	r24, r22
     63a:	97 07       	cpc	r25, r23
     63c:	14 f0       	brlt	.+4      	; 0x642 <signal_to_range+0x118>
     63e:	c0 1a       	sub	r12, r16
     640:	d1 0a       	sbc	r13, r17
     642:	c6 01       	movw	r24, r12
     644:	80 1b       	sub	r24, r16
     646:	91 0b       	sbc	r25, r17
     648:	96 01       	movw	r18, r12
     64a:	20 0f       	add	r18, r16
     64c:	31 1f       	adc	r19, r17
     64e:	62 17       	cp	r22, r18
     650:	73 07       	cpc	r23, r19
     652:	2c f7       	brge	.-54     	; 0x61e <signal_to_range+0xf4>
     654:	86 17       	cp	r24, r22
     656:	97 07       	cpc	r25, r23
     658:	14 f7       	brge	.-60     	; 0x61e <signal_to_range+0xf4>
     65a:	04 c0       	rjmp	.+8      	; 0x664 <signal_to_range+0x13a>
     65c:	61 01       	movw	r12, r2
     65e:	02 c0       	rjmp	.+4      	; 0x664 <signal_to_range+0x13a>
     660:	cd 80       	ldd	r12, Y+5	; 0x05
     662:	de 80       	ldd	r13, Y+6	; 0x06
     664:	c6 01       	movw	r24, r12
     666:	26 96       	adiw	r28, 0x06	; 6
     668:	0f b6       	in	r0, 0x3f	; 63
     66a:	f8 94       	cli
     66c:	de bf       	out	0x3e, r29	; 62
     66e:	0f be       	out	0x3f, r0	; 63
     670:	cd bf       	out	0x3d, r28	; 61
     672:	df 91       	pop	r29
     674:	cf 91       	pop	r28
     676:	1f 91       	pop	r17
     678:	0f 91       	pop	r16
     67a:	ff 90       	pop	r15
     67c:	ef 90       	pop	r14
     67e:	df 90       	pop	r13
     680:	cf 90       	pop	r12
     682:	bf 90       	pop	r11
     684:	af 90       	pop	r10
     686:	9f 90       	pop	r9
     688:	8f 90       	pop	r8
     68a:	7f 90       	pop	r7
     68c:	6f 90       	pop	r6
     68e:	5f 90       	pop	r5
     690:	4f 90       	pop	r4
     692:	3f 90       	pop	r3
     694:	2f 90       	pop	r2
     696:	08 95       	ret

00000698 <read_control_input>:
     698:	af 92       	push	r10
     69a:	bf 92       	push	r11
     69c:	cf 92       	push	r12
     69e:	df 92       	push	r13
     6a0:	ef 92       	push	r14
     6a2:	ff 92       	push	r15
     6a4:	0f 93       	push	r16
     6a6:	1f 93       	push	r17
     6a8:	82 35       	cpi	r24, 0x52	; 82
     6aa:	09 f4       	brne	.+2      	; 0x6ae <read_control_input+0x16>
     6ac:	74 c0       	rjmp	.+232    	; 0x796 <read_control_input+0xfe>
     6ae:	20 f4       	brcc	.+8      	; 0x6b8 <read_control_input+0x20>
     6b0:	8c 34       	cpi	r24, 0x4C	; 76
     6b2:	09 f4       	brne	.+2      	; 0x6b6 <read_control_input+0x1e>
     6b4:	4e c0       	rjmp	.+156    	; 0x752 <read_control_input+0xba>
     6b6:	91 c0       	rjmp	.+290    	; 0x7da <read_control_input+0x142>
     6b8:	88 35       	cpi	r24, 0x58	; 88
     6ba:	19 f0       	breq	.+6      	; 0x6c2 <read_control_input+0x2a>
     6bc:	89 35       	cpi	r24, 0x59	; 89
     6be:	29 f1       	breq	.+74     	; 0x70a <read_control_input+0x72>
     6c0:	8c c0       	rjmp	.+280    	; 0x7da <read_control_input+0x142>
     6c2:	c0 90 c0 03 	lds	r12, 0x03C0
     6c6:	d0 90 c1 03 	lds	r13, 0x03C1
     6ca:	e0 90 c4 03 	lds	r14, 0x03C4
     6ce:	f0 90 c5 03 	lds	r15, 0x03C5
     6d2:	81 e0       	ldi	r24, 0x01	; 1
     6d4:	90 e0       	ldi	r25, 0x00	; 0
     6d6:	0e 94 75 00 	call	0xea	; 0xea <readADC>
     6da:	0f 2e       	mov	r0, r31
     6dc:	fa e0       	ldi	r31, 0x0A	; 10
     6de:	af 2e       	mov	r10, r31
     6e0:	b1 2c       	mov	r11, r1
     6e2:	f0 2d       	mov	r31, r0
     6e4:	04 e6       	ldi	r16, 0x64	; 100
     6e6:	10 e0       	ldi	r17, 0x00	; 0
     6e8:	2c e9       	ldi	r18, 0x9C	; 156
     6ea:	3f ef       	ldi	r19, 0xFF	; 255
     6ec:	4f ef       	ldi	r20, 0xFF	; 255
     6ee:	50 e0       	ldi	r21, 0x00	; 0
     6f0:	60 e0       	ldi	r22, 0x00	; 0
     6f2:	70 e0       	ldi	r23, 0x00	; 0
     6f4:	0e 94 95 02 	call	0x52a	; 0x52a <signal_to_range>
     6f8:	90 93 c1 03 	sts	0x03C1, r25
     6fc:	80 93 c0 03 	sts	0x03C0, r24
     700:	80 91 c0 03 	lds	r24, 0x03C0
     704:	90 91 c1 03 	lds	r25, 0x03C1
     708:	6a c0       	rjmp	.+212    	; 0x7de <read_control_input+0x146>
     70a:	c0 90 be 03 	lds	r12, 0x03BE
     70e:	d0 90 bf 03 	lds	r13, 0x03BF
     712:	e0 90 c2 03 	lds	r14, 0x03C2
     716:	f0 90 c3 03 	lds	r15, 0x03C3
     71a:	82 e0       	ldi	r24, 0x02	; 2
     71c:	90 e0       	ldi	r25, 0x00	; 0
     71e:	0e 94 75 00 	call	0xea	; 0xea <readADC>
     722:	0f 2e       	mov	r0, r31
     724:	fa e0       	ldi	r31, 0x0A	; 10
     726:	af 2e       	mov	r10, r31
     728:	b1 2c       	mov	r11, r1
     72a:	f0 2d       	mov	r31, r0
     72c:	04 e6       	ldi	r16, 0x64	; 100
     72e:	10 e0       	ldi	r17, 0x00	; 0
     730:	2c e9       	ldi	r18, 0x9C	; 156
     732:	3f ef       	ldi	r19, 0xFF	; 255
     734:	4f ef       	ldi	r20, 0xFF	; 255
     736:	50 e0       	ldi	r21, 0x00	; 0
     738:	60 e0       	ldi	r22, 0x00	; 0
     73a:	70 e0       	ldi	r23, 0x00	; 0
     73c:	0e 94 95 02 	call	0x52a	; 0x52a <signal_to_range>
     740:	90 93 bf 03 	sts	0x03BF, r25
     744:	80 93 be 03 	sts	0x03BE, r24
     748:	80 91 be 03 	lds	r24, 0x03BE
     74c:	90 91 bf 03 	lds	r25, 0x03BF
     750:	46 c0       	rjmp	.+140    	; 0x7de <read_control_input+0x146>
     752:	c0 90 bc 03 	lds	r12, 0x03BC
     756:	d0 90 bd 03 	lds	r13, 0x03BD
     75a:	83 e0       	ldi	r24, 0x03	; 3
     75c:	90 e0       	ldi	r25, 0x00	; 0
     75e:	0e 94 75 00 	call	0xea	; 0xea <readADC>
     762:	0f 2e       	mov	r0, r31
     764:	fa e0       	ldi	r31, 0x0A	; 10
     766:	af 2e       	mov	r10, r31
     768:	b1 2c       	mov	r11, r1
     76a:	f0 2d       	mov	r31, r0
     76c:	e1 2c       	mov	r14, r1
     76e:	f1 2c       	mov	r15, r1
     770:	04 e6       	ldi	r16, 0x64	; 100
     772:	10 e0       	ldi	r17, 0x00	; 0
     774:	20 e0       	ldi	r18, 0x00	; 0
     776:	30 e0       	ldi	r19, 0x00	; 0
     778:	4f ef       	ldi	r20, 0xFF	; 255
     77a:	50 e0       	ldi	r21, 0x00	; 0
     77c:	60 e0       	ldi	r22, 0x00	; 0
     77e:	70 e0       	ldi	r23, 0x00	; 0
     780:	0e 94 95 02 	call	0x52a	; 0x52a <signal_to_range>
     784:	90 93 bd 03 	sts	0x03BD, r25
     788:	80 93 bc 03 	sts	0x03BC, r24
     78c:	80 91 bc 03 	lds	r24, 0x03BC
     790:	90 91 bd 03 	lds	r25, 0x03BD
     794:	24 c0       	rjmp	.+72     	; 0x7de <read_control_input+0x146>
     796:	c0 90 ba 03 	lds	r12, 0x03BA
     79a:	d0 90 bb 03 	lds	r13, 0x03BB
     79e:	84 e0       	ldi	r24, 0x04	; 4
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	0e 94 75 00 	call	0xea	; 0xea <readADC>
     7a6:	0f 2e       	mov	r0, r31
     7a8:	fa e0       	ldi	r31, 0x0A	; 10
     7aa:	af 2e       	mov	r10, r31
     7ac:	b1 2c       	mov	r11, r1
     7ae:	f0 2d       	mov	r31, r0
     7b0:	e1 2c       	mov	r14, r1
     7b2:	f1 2c       	mov	r15, r1
     7b4:	04 e6       	ldi	r16, 0x64	; 100
     7b6:	10 e0       	ldi	r17, 0x00	; 0
     7b8:	20 e0       	ldi	r18, 0x00	; 0
     7ba:	30 e0       	ldi	r19, 0x00	; 0
     7bc:	4f ef       	ldi	r20, 0xFF	; 255
     7be:	50 e0       	ldi	r21, 0x00	; 0
     7c0:	60 e0       	ldi	r22, 0x00	; 0
     7c2:	70 e0       	ldi	r23, 0x00	; 0
     7c4:	0e 94 95 02 	call	0x52a	; 0x52a <signal_to_range>
     7c8:	90 93 bb 03 	sts	0x03BB, r25
     7cc:	80 93 ba 03 	sts	0x03BA, r24
     7d0:	80 91 ba 03 	lds	r24, 0x03BA
     7d4:	90 91 bb 03 	lds	r25, 0x03BB
     7d8:	02 c0       	rjmp	.+4      	; 0x7de <read_control_input+0x146>
     7da:	80 e0       	ldi	r24, 0x00	; 0
     7dc:	90 e0       	ldi	r25, 0x00	; 0
     7de:	1f 91       	pop	r17
     7e0:	0f 91       	pop	r16
     7e2:	ff 90       	pop	r15
     7e4:	ef 90       	pop	r14
     7e6:	df 90       	pop	r13
     7e8:	cf 90       	pop	r12
     7ea:	bf 90       	pop	r11
     7ec:	af 90       	pop	r10
     7ee:	08 95       	ret

000007f0 <initialize_control_input>:
     7f0:	0e 94 4f 02 	call	0x49e	; 0x49e <calibrate_joystick>
     7f4:	88 e5       	ldi	r24, 0x58	; 88
     7f6:	0e 94 4c 03 	call	0x698	; 0x698 <read_control_input>
     7fa:	90 93 c1 03 	sts	0x03C1, r25
     7fe:	80 93 c0 03 	sts	0x03C0, r24
     802:	89 e5       	ldi	r24, 0x59	; 89
     804:	0e 94 4c 03 	call	0x698	; 0x698 <read_control_input>
     808:	90 93 bf 03 	sts	0x03BF, r25
     80c:	80 93 be 03 	sts	0x03BE, r24
     810:	8c e4       	ldi	r24, 0x4C	; 76
     812:	0e 94 4c 03 	call	0x698	; 0x698 <read_control_input>
     816:	90 93 bd 03 	sts	0x03BD, r25
     81a:	80 93 bc 03 	sts	0x03BC, r24
     81e:	82 e5       	ldi	r24, 0x52	; 82
     820:	0e 94 4c 03 	call	0x698	; 0x698 <read_control_input>
     824:	90 93 bb 03 	sts	0x03BB, r25
     828:	80 93 ba 03 	sts	0x03BA, r24
     82c:	20 91 c2 03 	lds	r18, 0x03C2
     830:	30 91 c3 03 	lds	r19, 0x03C3
     834:	80 91 c4 03 	lds	r24, 0x03C4
     838:	90 91 c5 03 	lds	r25, 0x03C5
     83c:	3f 93       	push	r19
     83e:	2f 93       	push	r18
     840:	9f 93       	push	r25
     842:	8f 93       	push	r24
     844:	81 e5       	ldi	r24, 0x51	; 81
     846:	91 e0       	ldi	r25, 0x01	; 1
     848:	9f 93       	push	r25
     84a:	8f 93       	push	r24
     84c:	0e 94 be 09 	call	0x137c	; 0x137c <printf>
     850:	60 91 ba 03 	lds	r22, 0x03BA
     854:	70 91 bb 03 	lds	r23, 0x03BB
     858:	40 91 bc 03 	lds	r20, 0x03BC
     85c:	50 91 bd 03 	lds	r21, 0x03BD
     860:	20 91 be 03 	lds	r18, 0x03BE
     864:	30 91 bf 03 	lds	r19, 0x03BF
     868:	80 91 c0 03 	lds	r24, 0x03C0
     86c:	90 91 c1 03 	lds	r25, 0x03C1
     870:	7f 93       	push	r23
     872:	6f 93       	push	r22
     874:	5f 93       	push	r21
     876:	4f 93       	push	r20
     878:	3f 93       	push	r19
     87a:	2f 93       	push	r18
     87c:	9f 93       	push	r25
     87e:	8f 93       	push	r24
     880:	8a e7       	ldi	r24, 0x7A	; 122
     882:	91 e0       	ldi	r25, 0x01	; 1
     884:	9f 93       	push	r25
     886:	8f 93       	push	r24
     888:	0e 94 be 09 	call	0x137c	; 0x137c <printf>
     88c:	8d b7       	in	r24, 0x3d	; 61
     88e:	9e b7       	in	r25, 0x3e	; 62
     890:	40 96       	adiw	r24, 0x10	; 16
     892:	0f b6       	in	r0, 0x3f	; 63
     894:	f8 94       	cli
     896:	9e bf       	out	0x3e, r25	; 62
     898:	0f be       	out	0x3f, r0	; 63
     89a:	8d bf       	out	0x3d, r24	; 61
     89c:	08 95       	ret

0000089e <initalize>:




void initalize(void){
	cli();//disable interrupts
     89e:	f8 94       	cli
	init_UART(UBBR);
     8a0:	8f e1       	ldi	r24, 0x1F	; 31
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	0e 94 51 07 	call	0xea2	; 0xea2 <init_UART>
	printf("LOADING g17_%s %s %s\nINITIALIZING...\n\nUART successfully initialized\n\n", VERSION,__DATE__,__TIME__);
     8a8:	83 ea       	ldi	r24, 0xA3	; 163
     8aa:	91 e0       	ldi	r25, 0x01	; 1
     8ac:	9f 93       	push	r25
     8ae:	8f 93       	push	r24
     8b0:	8c ea       	ldi	r24, 0xAC	; 172
     8b2:	91 e0       	ldi	r25, 0x01	; 1
     8b4:	9f 93       	push	r25
     8b6:	8f 93       	push	r24
     8b8:	88 eb       	ldi	r24, 0xB8	; 184
     8ba:	91 e0       	ldi	r25, 0x01	; 1
     8bc:	9f 93       	push	r25
     8be:	8f 93       	push	r24
     8c0:	8d eb       	ldi	r24, 0xBD	; 189
     8c2:	91 e0       	ldi	r25, 0x01	; 1
     8c4:	9f 93       	push	r25
     8c6:	8f 93       	push	r24
     8c8:	0e 94 be 09 	call	0x137c	; 0x137c <printf>
	BIT_ON(MCUCR,SRE); //SET THIS IN SOME INITALIZE FUNBCTION
     8cc:	85 b7       	in	r24, 0x35	; 53
     8ce:	80 68       	ori	r24, 0x80	; 128
     8d0:	85 bf       	out	0x35, r24	; 53
	BIT_ON(SFIOR,XMM2);//HVORFOR GJORDE DE DETTE I OLED?
     8d2:	80 b7       	in	r24, 0x30	; 48
     8d4:	80 62       	ori	r24, 0x20	; 32
     8d6:	80 bf       	out	0x30, r24	; 48
	
	oled_ini();
     8d8:	0e 94 82 06 	call	0xd04	; 0xd04 <oled_ini>
	sram_init();
     8dc:	0e 94 0f 07 	call	0xe1e	; 0xe1e <sram_init>
	//bootscreen();
	//write_screen();
	
	
	printf("OLED successfully initialized\n");
     8e0:	83 e0       	ldi	r24, 0x03	; 3
     8e2:	92 e0       	ldi	r25, 0x02	; 2
     8e4:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <puts>
	initialize_menu();
     8e8:	0e 94 5d 05 	call	0xaba	; 0xaba <initialize_menu>
	
	initialize_control_input();
     8ec:	0e 94 f8 03 	call	0x7f0	; 0x7f0 <initialize_control_input>
	printf("control input successfully initialized\n\n");
     8f0:	81 e2       	ldi	r24, 0x21	; 33
     8f2:	92 e0       	ldi	r25, 0x02	; 2
     8f4:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <puts>
	//SRAM_test();
	printf("SRAM successfully initialized\n");
     8f8:	89 e4       	ldi	r24, 0x49	; 73
     8fa:	92 e0       	ldi	r25, 0x02	; 2
     8fc:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <puts>
	initalize_interrupts();
     900:	0e 94 9b 00 	call	0x136	; 0x136 <initalize_interrupts>
	printf("Interrupts successfully initialized\n");
     904:	87 e6       	ldi	r24, 0x67	; 103
     906:	92 e0       	ldi	r25, 0x02	; 2
     908:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <puts>
	printf("Interrupts activated\n");
     90c:	8b e8       	ldi	r24, 0x8B	; 139
     90e:	92 e0       	ldi	r25, 0x02	; 2
     910:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <puts>
	printf("\nINITIALIZATION COMPLETE\n");
     914:	80 ea       	ldi	r24, 0xA0	; 160
     916:	92 e0       	ldi	r25, 0x02	; 2
     918:	0e 94 d2 09 	call	0x13a4	; 0x13a4 <puts>
	sei();//enable interrupts
     91c:	78 94       	sei
     91e:	8d b7       	in	r24, 0x3d	; 61
     920:	9e b7       	in	r25, 0x3e	; 62
     922:	08 96       	adiw	r24, 0x08	; 8
     924:	0f b6       	in	r0, 0x3f	; 63
     926:	f8 94       	cli
     928:	9e bf       	out	0x3e, r25	; 62
     92a:	0f be       	out	0x3f, r0	; 63
     92c:	8d bf       	out	0x3d, r24	; 61
     92e:	08 95       	ret

00000930 <main>:
//#include "MCP2515_driver.h"
#include "can.h"


int main(void)
{
     930:	cf 93       	push	r28
     932:	df 93       	push	r29
     934:	cd b7       	in	r28, 0x3d	; 61
     936:	de b7       	in	r29, 0x3e	; 62
     938:	6c 97       	sbiw	r28, 0x1c	; 28
     93a:	0f b6       	in	r0, 0x3f	; 63
     93c:	f8 94       	cli
     93e:	de bf       	out	0x3e, r29	; 62
     940:	0f be       	out	0x3f, r0	; 63
     942:	cd bf       	out	0x3d, r28	; 61
	
	initalize();
     944:	0e 94 4f 04 	call	0x89e	; 0x89e <initalize>
	
	sram_init();
     948:	0e 94 0f 07 	call	0xe1e	; 0xe1e <sram_init>
	oled_goto_line(7);
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	90 e0       	ldi	r25, 0x00	; 0
     950:	0e 94 3e 06 	call	0xc7c	; 0xc7c <oled_goto_line>
	//sram_write_string(" - BYGGERN - G17");
	
	
	
	MCP2515_initialize();
     954:	0e 94 4a 05 	call	0xa94	; 0xa94 <MCP2515_initialize>
	CAN_initialize();
     958:	0e 94 32 01 	call	0x264	; 0x264 <CAN_initialize>
	uint8_t data[8];
	data[0] = 0;
     95c:	19 82       	std	Y+1, r1	; 0x01
	CAN_construct_meassage(6,1,data);
     95e:	ae 01       	movw	r20, r28
     960:	4f 5f       	subi	r20, 0xFF	; 255
     962:	5f 4f       	sbci	r21, 0xFF	; 255
     964:	61 e0       	ldi	r22, 0x01	; 1
     966:	86 e0       	ldi	r24, 0x06	; 6
     968:	90 e0       	ldi	r25, 0x00	; 0
     96a:	0e 94 41 01 	call	0x282	; 0x282 <CAN_construct_meassage>
	sei();
     96e:	78 94       	sei
     970:	6e 01       	movw	r12, r28
     972:	89 e0       	ldi	r24, 0x09	; 9
     974:	c8 0e       	add	r12, r24
     976:	d1 1c       	adc	r13, r1
     978:	7e 01       	movw	r14, r28
     97a:	9d e1       	ldi	r25, 0x1D	; 29
     97c:	e9 0e       	add	r14, r25
     97e:	f1 1c       	adc	r15, r1
     980:	86 01       	movw	r16, r12
     982:	80 2f       	mov	r24, r16
     984:	8c 19       	sub	r24, r12
	//MCP2515_testSPI();	
	uint8_t d[20];
	for(int i = 0; i < 20; i++){
		data[0] = i;
     986:	89 83       	std	Y+1, r24	; 0x01
		CAN_message_send(data);
     988:	ce 01       	movw	r24, r28
     98a:	01 96       	adiw	r24, 0x01	; 1
     98c:	0e 94 9b 01 	call	0x336	; 0x336 <CAN_message_send>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     990:	ec ec       	ldi	r30, 0xCC	; 204
     992:	f4 e0       	ldi	r31, 0x04	; 4
     994:	31 97       	sbiw	r30, 0x01	; 1
     996:	f1 f7       	brne	.-4      	; 0x994 <main+0x64>
     998:	00 c0       	rjmp	.+0      	; 0x99a <main+0x6a>
     99a:	00 00       	nop
		_delay_ms(1);
		d[i] = CAN_message_receive()->data[0];
     99c:	0e 94 3e 01 	call	0x27c	; 0x27c <CAN_message_receive>
     9a0:	fc 01       	movw	r30, r24
     9a2:	83 81       	ldd	r24, Z+3	; 0x03
     9a4:	f8 01       	movw	r30, r16
     9a6:	81 93       	st	Z+, r24
     9a8:	8f 01       	movw	r16, r30
	data[0] = 0;
	CAN_construct_meassage(6,1,data);
	sei();
	//MCP2515_testSPI();	
	uint8_t d[20];
	for(int i = 0; i < 20; i++){
     9aa:	ee 15       	cp	r30, r14
     9ac:	ff 05       	cpc	r31, r15
     9ae:	49 f7       	brne	.-46     	; 0x982 <main+0x52>
     9b0:	00 e0       	ldi	r16, 0x00	; 0
     9b2:	10 e0       	ldi	r17, 0x00	; 0
		d[i] = CAN_message_receive()->data[0];
		
	}
	
	for(int i = 0; i < 20; i++){
		printf("%i %i\n",i,d[i]);
     9b4:	0f 2e       	mov	r0, r31
     9b6:	f9 eb       	ldi	r31, 0xB9	; 185
     9b8:	ef 2e       	mov	r14, r31
     9ba:	f2 e0       	ldi	r31, 0x02	; 2
     9bc:	ff 2e       	mov	r15, r31
     9be:	f0 2d       	mov	r31, r0
     9c0:	f6 01       	movw	r30, r12
     9c2:	81 91       	ld	r24, Z+
     9c4:	6f 01       	movw	r12, r30
     9c6:	1f 92       	push	r1
     9c8:	8f 93       	push	r24
     9ca:	1f 93       	push	r17
     9cc:	0f 93       	push	r16
     9ce:	ff 92       	push	r15
     9d0:	ef 92       	push	r14
     9d2:	0e 94 be 09 	call	0x137c	; 0x137c <printf>
		_delay_ms(1);
		d[i] = CAN_message_receive()->data[0];
		
	}
	
	for(int i = 0; i < 20; i++){
     9d6:	0f 5f       	subi	r16, 0xFF	; 255
     9d8:	1f 4f       	sbci	r17, 0xFF	; 255
     9da:	0f 90       	pop	r0
     9dc:	0f 90       	pop	r0
     9de:	0f 90       	pop	r0
     9e0:	0f 90       	pop	r0
     9e2:	0f 90       	pop	r0
     9e4:	0f 90       	pop	r0
     9e6:	04 31       	cpi	r16, 0x14	; 20
     9e8:	11 05       	cpc	r17, r1
     9ea:	51 f7       	brne	.-44     	; 0x9c0 <main+0x90>
     9ec:	ff cf       	rjmp	.-2      	; 0x9ec <main+0xbc>

000009ee <MCP2515_write>:
	MCP2515_bit_modify(MCP_CANCTRL,MODE_MASK,MODE_LOOPBACK);
	//MCP2515_bit_modify(MCP_CANCTRL,0b11100000,0x00);
	SPI_deselect();
}

void MCP2515_write(uint8_t adr, unsigned char data){
     9ee:	cf 93       	push	r28
     9f0:	df 93       	push	r29
     9f2:	d8 2f       	mov	r29, r24
     9f4:	c6 2f       	mov	r28, r22
	SPI_select();
     9f6:	0e 94 3a 07 	call	0xe74	; 0xe74 <SPI_select>
	SPI_send(MCP_WRITE);
     9fa:	82 e0       	ldi	r24, 0x02	; 2
     9fc:	0e 94 2f 07 	call	0xe5e	; 0xe5e <SPI_send>
	SPI_send(adr);
     a00:	8d 2f       	mov	r24, r29
     a02:	0e 94 2f 07 	call	0xe5e	; 0xe5e <SPI_send>
	SPI_send(data);
     a06:	8c 2f       	mov	r24, r28
     a08:	0e 94 2f 07 	call	0xe5e	; 0xe5e <SPI_send>
	SPI_deselect();
     a0c:	0e 94 3c 07 	call	0xe78	; 0xe78 <SPI_deselect>
}
     a10:	df 91       	pop	r29
     a12:	cf 91       	pop	r28
     a14:	08 95       	ret

00000a16 <MCP2515_read>:
	SPI_send(MCP_READ);
	SPI_send(0x00);
	SPI_deselect();
}

uint8_t MCP2515_read(uint8_t adr){
     a16:	cf 93       	push	r28
     a18:	c8 2f       	mov	r28, r24
	SPI_select();
     a1a:	0e 94 3a 07 	call	0xe74	; 0xe74 <SPI_select>
	SPI_send(MCP_READ);
     a1e:	83 e0       	ldi	r24, 0x03	; 3
     a20:	0e 94 2f 07 	call	0xe5e	; 0xe5e <SPI_send>
	SPI_send(adr);
     a24:	8c 2f       	mov	r24, r28
     a26:	0e 94 2f 07 	call	0xe5e	; 0xe5e <SPI_send>
	uint8_t received_data = SPI_read();
     a2a:	0e 94 33 07 	call	0xe66	; 0xe66 <SPI_read>
     a2e:	c8 2f       	mov	r28, r24
	SPI_deselect();
     a30:	0e 94 3c 07 	call	0xe78	; 0xe78 <SPI_deselect>
	return received_data;
}
     a34:	8c 2f       	mov	r24, r28
     a36:	cf 91       	pop	r28
     a38:	08 95       	ret

00000a3a <MCP2515_request_to_send>:
	 	MCP2515_write(0b00000000,i);
	 	printf("Value of i: %i\t value of reg:\t%i\n",i,MCP2515_read(0b00000000));
	 }
}

void MCP2515_request_to_send(uint8_t buffer){
     a3a:	cf 93       	push	r28
     a3c:	c8 2f       	mov	r28, r24
	SPI_select();
     a3e:	0e 94 3a 07 	call	0xe74	; 0xe74 <SPI_select>
	SPI_send(0x80|(1<<buffer));
     a42:	21 e0       	ldi	r18, 0x01	; 1
     a44:	30 e0       	ldi	r19, 0x00	; 0
     a46:	c9 01       	movw	r24, r18
     a48:	02 c0       	rjmp	.+4      	; 0xa4e <MCP2515_request_to_send+0x14>
     a4a:	88 0f       	add	r24, r24
     a4c:	99 1f       	adc	r25, r25
     a4e:	ca 95       	dec	r28
     a50:	e2 f7       	brpl	.-8      	; 0xa4a <MCP2515_request_to_send+0x10>
     a52:	80 68       	ori	r24, 0x80	; 128
     a54:	0e 94 2f 07 	call	0xe5e	; 0xe5e <SPI_send>
	SPI_deselect();
     a58:	0e 94 3c 07 	call	0xe78	; 0xe78 <SPI_deselect>
}
     a5c:	cf 91       	pop	r28
     a5e:	08 95       	ret

00000a60 <MCP2515_bit_modify>:
	uint8_t recieved_status = SPI_read();
	SPI_deselect();
	return recieved_status;
}

void MCP2515_bit_modify(uint8_t adr, uint8_t mask, uint8_t data){
     a60:	1f 93       	push	r17
     a62:	cf 93       	push	r28
     a64:	df 93       	push	r29
     a66:	18 2f       	mov	r17, r24
     a68:	d6 2f       	mov	r29, r22
     a6a:	c4 2f       	mov	r28, r20
	SPI_select();
     a6c:	0e 94 3a 07 	call	0xe74	; 0xe74 <SPI_select>
	SPI_send(MCP_BITMOD);
     a70:	85 e0       	ldi	r24, 0x05	; 5
     a72:	0e 94 2f 07 	call	0xe5e	; 0xe5e <SPI_send>
	SPI_send(adr);
     a76:	81 2f       	mov	r24, r17
     a78:	0e 94 2f 07 	call	0xe5e	; 0xe5e <SPI_send>
	SPI_send(mask);
     a7c:	8d 2f       	mov	r24, r29
     a7e:	0e 94 2f 07 	call	0xe5e	; 0xe5e <SPI_send>
	SPI_send(data);
     a82:	8c 2f       	mov	r24, r28
     a84:	0e 94 2f 07 	call	0xe5e	; 0xe5e <SPI_send>
	SPI_deselect();
     a88:	0e 94 3c 07 	call	0xe78	; 0xe78 <SPI_deselect>
}
     a8c:	df 91       	pop	r29
     a8e:	cf 91       	pop	r28
     a90:	1f 91       	pop	r17
     a92:	08 95       	ret

00000a94 <MCP2515_initialize>:
 */ 

#include "MCP2515_driver.h"

void MCP2515_initialize(void){
	SPI_initialize();
     a94:	0e 94 3e 07 	call	0xe7c	; 0xe7c <SPI_initialize>
 	SPI_select();
     a98:	0e 94 3a 07 	call	0xe74	; 0xe74 <SPI_select>
	SPI_send(MCP_RESET);
     a9c:	80 ec       	ldi	r24, 0xC0	; 192
     a9e:	0e 94 2f 07 	call	0xe5e	; 0xe5e <SPI_send>
	SPI_deselect();
     aa2:	0e 94 3c 07 	call	0xe78	; 0xe78 <SPI_deselect>
	SPI_select();
     aa6:	0e 94 3a 07 	call	0xe74	; 0xe74 <SPI_select>
	//MCP2515_bit_modify(MCP_CANCTRL,0b11100000,MODE_CONFIG);
	MCP2515_bit_modify(MCP_CANCTRL,MODE_MASK,MODE_LOOPBACK);
     aaa:	40 e4       	ldi	r20, 0x40	; 64
     aac:	60 ee       	ldi	r22, 0xE0	; 224
     aae:	8f e0       	ldi	r24, 0x0F	; 15
     ab0:	0e 94 30 05 	call	0xa60	; 0xa60 <MCP2515_bit_modify>
	//MCP2515_bit_modify(MCP_CANCTRL,0b11100000,0x00);
	SPI_deselect();
     ab4:	0e 94 3c 07 	call	0xe78	; 0xe78 <SPI_deselect>
     ab8:	08 95       	ret

00000aba <initialize_menu>:
     aba:	cf 93       	push	r28
     abc:	df 93       	push	r29
     abe:	cd e1       	ldi	r28, 0x1D	; 29
     ac0:	d4 e0       	ldi	r29, 0x04	; 4
     ac2:	d0 93 04 04 	sts	0x0404, r29
     ac6:	c0 93 03 04 	sts	0x0403, r28
     aca:	10 92 06 04 	sts	0x0406, r1
     ace:	10 92 05 04 	sts	0x0405, r1
     ad2:	10 92 08 04 	sts	0x0408, r1
     ad6:	10 92 07 04 	sts	0x0407, r1
     ada:	ef ef       	ldi	r30, 0xFF	; 255
     adc:	f3 e0       	ldi	r31, 0x03	; 3
     ade:	82 ea       	ldi	r24, 0xA2	; 162
     ae0:	90 e0       	ldi	r25, 0x00	; 0
     ae2:	91 83       	std	Z+1, r25	; 0x01
     ae4:	80 83       	st	Z, r24
     ae6:	83 e0       	ldi	r24, 0x03	; 3
     ae8:	90 e0       	ldi	r25, 0x00	; 0
     aea:	90 93 02 04 	sts	0x0402, r25
     aee:	80 93 01 04 	sts	0x0401, r24
     af2:	21 ed       	ldi	r18, 0xD1	; 209
     af4:	33 e0       	ldi	r19, 0x03	; 3
     af6:	30 93 22 04 	sts	0x0422, r19
     afa:	20 93 21 04 	sts	0x0421, r18
     afe:	69 e0       	ldi	r22, 0x09	; 9
     b00:	74 e0       	ldi	r23, 0x04	; 4
     b02:	70 93 24 04 	sts	0x0424, r23
     b06:	60 93 23 04 	sts	0x0423, r22
     b0a:	10 92 26 04 	sts	0x0426, r1
     b0e:	10 92 25 04 	sts	0x0425, r1
     b12:	4c e9       	ldi	r20, 0x9C	; 156
     b14:	50 e0       	ldi	r21, 0x00	; 0
     b16:	59 83       	std	Y+1, r21	; 0x01
     b18:	48 83       	st	Y, r20
     b1a:	90 93 20 04 	sts	0x0420, r25
     b1e:	80 93 1f 04 	sts	0x041F, r24
     b22:	f0 93 d6 03 	sts	0x03D6, r31
     b26:	e0 93 d5 03 	sts	0x03D5, r30
     b2a:	cb ee       	ldi	r28, 0xEB	; 235
     b2c:	d3 e0       	ldi	r29, 0x03	; 3
     b2e:	d0 93 d8 03 	sts	0x03D8, r29
     b32:	c0 93 d7 03 	sts	0x03D7, r28
     b36:	10 92 da 03 	sts	0x03DA, r1
     b3a:	10 92 d9 03 	sts	0x03D9, r1
     b3e:	44 e9       	ldi	r20, 0x94	; 148
     b40:	50 e0       	ldi	r21, 0x00	; 0
     b42:	d9 01       	movw	r26, r18
     b44:	4d 93       	st	X+, r20
     b46:	5c 93       	st	X, r21
     b48:	90 93 d4 03 	sts	0x03D4, r25
     b4c:	80 93 d3 03 	sts	0x03D3, r24
     b50:	25 ef       	ldi	r18, 0xF5	; 245
     b52:	33 e0       	ldi	r19, 0x03	; 3
     b54:	30 93 f0 03 	sts	0x03F0, r19
     b58:	20 93 ef 03 	sts	0x03EF, r18
     b5c:	10 92 f2 03 	sts	0x03F2, r1
     b60:	10 92 f1 03 	sts	0x03F1, r1
     b64:	f0 93 f4 03 	sts	0x03F4, r31
     b68:	e0 93 f3 03 	sts	0x03F3, r30
     b6c:	8e e8       	ldi	r24, 0x8E	; 142
     b6e:	90 e0       	ldi	r25, 0x00	; 0
     b70:	99 83       	std	Y+1, r25	; 0x01
     b72:	88 83       	st	Y, r24
     b74:	82 e0       	ldi	r24, 0x02	; 2
     b76:	90 e0       	ldi	r25, 0x00	; 0
     b78:	90 93 ee 03 	sts	0x03EE, r25
     b7c:	80 93 ed 03 	sts	0x03ED, r24
     b80:	d0 93 fa 03 	sts	0x03FA, r29
     b84:	c0 93 f9 03 	sts	0x03F9, r28
     b88:	10 92 fc 03 	sts	0x03FC, r1
     b8c:	10 92 fb 03 	sts	0x03FB, r1
     b90:	f0 93 fe 03 	sts	0x03FE, r31
     b94:	e0 93 fd 03 	sts	0x03FD, r30
     b98:	45 e8       	ldi	r20, 0x85	; 133
     b9a:	50 e0       	ldi	r21, 0x00	; 0
     b9c:	d9 01       	movw	r26, r18
     b9e:	4d 93       	st	X+, r20
     ba0:	5c 93       	st	X, r21
     ba2:	90 93 f8 03 	sts	0x03F8, r25
     ba6:	80 93 f7 03 	sts	0x03F7, r24
     baa:	c3 e1       	ldi	r28, 0x13	; 19
     bac:	d4 e0       	ldi	r29, 0x04	; 4
     bae:	d0 93 0e 04 	sts	0x040E, r29
     bb2:	c0 93 0d 04 	sts	0x040D, r28
     bb6:	10 92 10 04 	sts	0x0410, r1
     bba:	10 92 0f 04 	sts	0x040F, r1
     bbe:	f0 93 12 04 	sts	0x0412, r31
     bc2:	e0 93 11 04 	sts	0x0411, r30
     bc6:	2a e7       	ldi	r18, 0x7A	; 122
     bc8:	30 e0       	ldi	r19, 0x00	; 0
     bca:	db 01       	movw	r26, r22
     bcc:	2d 93       	st	X+, r18
     bce:	3c 93       	st	X, r19
     bd0:	90 93 0c 04 	sts	0x040C, r25
     bd4:	80 93 0b 04 	sts	0x040B, r24
     bd8:	70 93 18 04 	sts	0x0418, r23
     bdc:	60 93 17 04 	sts	0x0417, r22
     be0:	10 92 1a 04 	sts	0x041A, r1
     be4:	10 92 19 04 	sts	0x0419, r1
     be8:	f0 93 1c 04 	sts	0x041C, r31
     bec:	e0 93 1b 04 	sts	0x041B, r30
     bf0:	20 e7       	ldi	r18, 0x70	; 112
     bf2:	30 e0       	ldi	r19, 0x00	; 0
     bf4:	39 83       	std	Y+1, r19	; 0x01
     bf6:	28 83       	st	Y, r18
     bf8:	90 93 16 04 	sts	0x0416, r25
     bfc:	80 93 15 04 	sts	0x0415, r24
     c00:	f0 93 ce 03 	sts	0x03CE, r31
     c04:	e0 93 cd 03 	sts	0x03CD, r30
     c08:	f0 93 d0 03 	sts	0x03D0, r31
     c0c:	e0 93 cf 03 	sts	0x03CF, r30
     c10:	df 91       	pop	r29
     c12:	cf 91       	pop	r28
     c14:	08 95       	ret

00000c16 <menu_left_button_flag>:
     c16:	81 e0       	ldi	r24, 0x01	; 1
     c18:	80 93 c6 03 	sts	0x03C6, r24
     c1c:	08 95       	ret

00000c1e <menu_right_button_flag>:
     c1e:	81 e0       	ldi	r24, 0x01	; 1
     c20:	80 93 c7 03 	sts	0x03C7, r24
     c24:	08 95       	ret

00000c26 <oled_home>:
     c26:	10 92 cc 03 	sts	0x03CC, r1
     c2a:	10 92 cb 03 	sts	0x03CB, r1
     c2e:	10 92 ca 03 	sts	0x03CA, r1
     c32:	10 92 c9 03 	sts	0x03C9, r1
     c36:	e0 91 0a 01 	lds	r30, 0x010A
     c3a:	f0 91 0b 01 	lds	r31, 0x010B
     c3e:	81 e2       	ldi	r24, 0x21	; 33
     c40:	80 83       	st	Z, r24
     c42:	e0 91 0a 01 	lds	r30, 0x010A
     c46:	f0 91 0b 01 	lds	r31, 0x010B
     c4a:	10 82       	st	Z, r1
     c4c:	e0 91 0a 01 	lds	r30, 0x010A
     c50:	f0 91 0b 01 	lds	r31, 0x010B
     c54:	8f e7       	ldi	r24, 0x7F	; 127
     c56:	80 83       	st	Z, r24
     c58:	e0 91 0a 01 	lds	r30, 0x010A
     c5c:	f0 91 0b 01 	lds	r31, 0x010B
     c60:	82 e2       	ldi	r24, 0x22	; 34
     c62:	80 83       	st	Z, r24
     c64:	e0 91 0a 01 	lds	r30, 0x010A
     c68:	f0 91 0b 01 	lds	r31, 0x010B
     c6c:	10 82       	st	Z, r1
     c6e:	e0 91 0a 01 	lds	r30, 0x010A
     c72:	f0 91 0b 01 	lds	r31, 0x010B
     c76:	87 e0       	ldi	r24, 0x07	; 7
     c78:	80 83       	st	Z, r24
     c7a:	08 95       	ret

00000c7c <oled_goto_line>:
     c7c:	cf 93       	push	r28
     c7e:	df 93       	push	r29
     c80:	ec 01       	movw	r28, r24
     c82:	0e 94 13 06 	call	0xc26	; 0xc26 <oled_home>
     c86:	d0 93 cc 03 	sts	0x03CC, r29
     c8a:	c0 93 cb 03 	sts	0x03CB, r28
     c8e:	ce 01       	movw	r24, r28
     c90:	87 70       	andi	r24, 0x07	; 7
     c92:	99 27       	eor	r25, r25
     c94:	89 2b       	or	r24, r25
     c96:	89 f0       	breq	.+34     	; 0xcba <oled_goto_line+0x3e>
     c98:	e0 91 0a 01 	lds	r30, 0x010A
     c9c:	f0 91 0b 01 	lds	r31, 0x010B
     ca0:	10 82       	st	Z, r1
     ca2:	e0 91 0a 01 	lds	r30, 0x010A
     ca6:	f0 91 0b 01 	lds	r31, 0x010B
     caa:	80 e1       	ldi	r24, 0x10	; 16
     cac:	80 83       	st	Z, r24
     cae:	c0 6b       	ori	r28, 0xB0	; 176
     cb0:	e0 91 0a 01 	lds	r30, 0x010A
     cb4:	f0 91 0b 01 	lds	r31, 0x010B
     cb8:	c0 83       	st	Z, r28
     cba:	df 91       	pop	r29
     cbc:	cf 91       	pop	r28
     cbe:	08 95       	ret

00000cc0 <oled_clear_line>:
     cc0:	cf 93       	push	r28
     cc2:	df 93       	push	r29
     cc4:	ec 01       	movw	r28, r24
     cc6:	0e 94 3e 06 	call	0xc7c	; 0xc7c <oled_goto_line>
     cca:	28 97       	sbiw	r28, 0x08	; 8
     ccc:	50 f4       	brcc	.+20     	; 0xce2 <oled_clear_line+0x22>
     cce:	80 e8       	ldi	r24, 0x80	; 128
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	e0 91 08 01 	lds	r30, 0x0108
     cd6:	f0 91 09 01 	lds	r31, 0x0109
     cda:	10 82       	st	Z, r1
     cdc:	01 97       	sbiw	r24, 0x01	; 1
     cde:	00 97       	sbiw	r24, 0x00	; 0
     ce0:	c1 f7       	brne	.-16     	; 0xcd2 <oled_clear_line+0x12>
     ce2:	df 91       	pop	r29
     ce4:	cf 91       	pop	r28
     ce6:	08 95       	ret

00000ce8 <oled_reset>:
     ce8:	cf 93       	push	r28
     cea:	df 93       	push	r29
     cec:	c0 e0       	ldi	r28, 0x00	; 0
     cee:	d0 e0       	ldi	r29, 0x00	; 0
     cf0:	ce 01       	movw	r24, r28
     cf2:	0e 94 60 06 	call	0xcc0	; 0xcc0 <oled_clear_line>
     cf6:	21 96       	adiw	r28, 0x01	; 1
     cf8:	c8 30       	cpi	r28, 0x08	; 8
     cfa:	d1 05       	cpc	r29, r1
     cfc:	c9 f7       	brne	.-14     	; 0xcf0 <oled_reset+0x8>
     cfe:	df 91       	pop	r29
     d00:	cf 91       	pop	r28
     d02:	08 95       	ret

00000d04 <oled_ini>:
     d04:	85 b7       	in	r24, 0x35	; 53
     d06:	80 68       	ori	r24, 0x80	; 128
     d08:	85 bf       	out	0x35, r24	; 53
     d0a:	80 b7       	in	r24, 0x30	; 48
     d0c:	80 62       	ori	r24, 0x20	; 32
     d0e:	80 bf       	out	0x30, r24	; 48
     d10:	e0 91 0a 01 	lds	r30, 0x010A
     d14:	f0 91 0b 01 	lds	r31, 0x010B
     d18:	8e ea       	ldi	r24, 0xAE	; 174
     d1a:	80 83       	st	Z, r24
     d1c:	e0 91 0a 01 	lds	r30, 0x010A
     d20:	f0 91 0b 01 	lds	r31, 0x010B
     d24:	81 ea       	ldi	r24, 0xA1	; 161
     d26:	80 83       	st	Z, r24
     d28:	e0 91 0a 01 	lds	r30, 0x010A
     d2c:	f0 91 0b 01 	lds	r31, 0x010B
     d30:	8a ed       	ldi	r24, 0xDA	; 218
     d32:	80 83       	st	Z, r24
     d34:	e0 91 0a 01 	lds	r30, 0x010A
     d38:	f0 91 0b 01 	lds	r31, 0x010B
     d3c:	82 e1       	ldi	r24, 0x12	; 18
     d3e:	80 83       	st	Z, r24
     d40:	e0 91 0a 01 	lds	r30, 0x010A
     d44:	f0 91 0b 01 	lds	r31, 0x010B
     d48:	88 ec       	ldi	r24, 0xC8	; 200
     d4a:	80 83       	st	Z, r24
     d4c:	e0 91 0a 01 	lds	r30, 0x010A
     d50:	f0 91 0b 01 	lds	r31, 0x010B
     d54:	88 ea       	ldi	r24, 0xA8	; 168
     d56:	80 83       	st	Z, r24
     d58:	e0 91 0a 01 	lds	r30, 0x010A
     d5c:	f0 91 0b 01 	lds	r31, 0x010B
     d60:	8f e3       	ldi	r24, 0x3F	; 63
     d62:	80 83       	st	Z, r24
     d64:	e0 91 0a 01 	lds	r30, 0x010A
     d68:	f0 91 0b 01 	lds	r31, 0x010B
     d6c:	85 ed       	ldi	r24, 0xD5	; 213
     d6e:	80 83       	st	Z, r24
     d70:	e0 91 0a 01 	lds	r30, 0x010A
     d74:	f0 91 0b 01 	lds	r31, 0x010B
     d78:	80 e8       	ldi	r24, 0x80	; 128
     d7a:	80 83       	st	Z, r24
     d7c:	e0 91 0a 01 	lds	r30, 0x010A
     d80:	f0 91 0b 01 	lds	r31, 0x010B
     d84:	81 e8       	ldi	r24, 0x81	; 129
     d86:	80 83       	st	Z, r24
     d88:	e0 91 0a 01 	lds	r30, 0x010A
     d8c:	f0 91 0b 01 	lds	r31, 0x010B
     d90:	80 e5       	ldi	r24, 0x50	; 80
     d92:	80 83       	st	Z, r24
     d94:	e0 91 0a 01 	lds	r30, 0x010A
     d98:	f0 91 0b 01 	lds	r31, 0x010B
     d9c:	89 ed       	ldi	r24, 0xD9	; 217
     d9e:	80 83       	st	Z, r24
     da0:	e0 91 0a 01 	lds	r30, 0x010A
     da4:	f0 91 0b 01 	lds	r31, 0x010B
     da8:	81 e2       	ldi	r24, 0x21	; 33
     daa:	80 83       	st	Z, r24
     dac:	e0 91 0a 01 	lds	r30, 0x010A
     db0:	f0 91 0b 01 	lds	r31, 0x010B
     db4:	80 e2       	ldi	r24, 0x20	; 32
     db6:	80 83       	st	Z, r24
     db8:	e0 91 0a 01 	lds	r30, 0x010A
     dbc:	f0 91 0b 01 	lds	r31, 0x010B
     dc0:	10 82       	st	Z, r1
     dc2:	e0 91 0a 01 	lds	r30, 0x010A
     dc6:	f0 91 0b 01 	lds	r31, 0x010B
     dca:	8b ed       	ldi	r24, 0xDB	; 219
     dcc:	80 83       	st	Z, r24
     dce:	e0 91 0a 01 	lds	r30, 0x010A
     dd2:	f0 91 0b 01 	lds	r31, 0x010B
     dd6:	80 e3       	ldi	r24, 0x30	; 48
     dd8:	80 83       	st	Z, r24
     dda:	e0 91 0a 01 	lds	r30, 0x010A
     dde:	f0 91 0b 01 	lds	r31, 0x010B
     de2:	8d ea       	ldi	r24, 0xAD	; 173
     de4:	80 83       	st	Z, r24
     de6:	e0 91 0a 01 	lds	r30, 0x010A
     dea:	f0 91 0b 01 	lds	r31, 0x010B
     dee:	10 82       	st	Z, r1
     df0:	e0 91 0a 01 	lds	r30, 0x010A
     df4:	f0 91 0b 01 	lds	r31, 0x010B
     df8:	84 ea       	ldi	r24, 0xA4	; 164
     dfa:	80 83       	st	Z, r24
     dfc:	e0 91 0a 01 	lds	r30, 0x010A
     e00:	f0 91 0b 01 	lds	r31, 0x010B
     e04:	86 ea       	ldi	r24, 0xA6	; 166
     e06:	80 83       	st	Z, r24
     e08:	e0 91 0a 01 	lds	r30, 0x010A
     e0c:	f0 91 0b 01 	lds	r31, 0x010B
     e10:	8f ea       	ldi	r24, 0xAF	; 175
     e12:	80 83       	st	Z, r24
     e14:	0e 94 74 06 	call	0xce8	; 0xce8 <oled_reset>
     e18:	0e 94 13 06 	call	0xc26	; 0xc26 <oled_home>
     e1c:	08 95       	ret

00000e1e <sram_init>:
     e1e:	40 e0       	ldi	r20, 0x00	; 0
     e20:	50 e0       	ldi	r21, 0x00	; 0
     e22:	70 e0       	ldi	r23, 0x00	; 0
     e24:	60 e0       	ldi	r22, 0x00	; 0
     e26:	14 c0       	rjmp	.+40     	; 0xe50 <sram_init+0x32>
     e28:	9c 01       	movw	r18, r24
     e2a:	24 0f       	add	r18, r20
     e2c:	35 1f       	adc	r19, r21
     e2e:	e0 91 06 01 	lds	r30, 0x0106
     e32:	f0 91 07 01 	lds	r31, 0x0107
     e36:	e2 0f       	add	r30, r18
     e38:	f3 1f       	adc	r31, r19
     e3a:	10 82       	st	Z, r1
     e3c:	01 96       	adiw	r24, 0x01	; 1
     e3e:	80 38       	cpi	r24, 0x80	; 128
     e40:	91 05       	cpc	r25, r1
     e42:	91 f7       	brne	.-28     	; 0xe28 <sram_init+0xa>
     e44:	40 58       	subi	r20, 0x80	; 128
     e46:	5f 4f       	sbci	r21, 0xFF	; 255
     e48:	41 15       	cp	r20, r1
     e4a:	84 e0       	ldi	r24, 0x04	; 4
     e4c:	58 07       	cpc	r21, r24
     e4e:	19 f0       	breq	.+6      	; 0xe56 <sram_init+0x38>
     e50:	87 2f       	mov	r24, r23
     e52:	96 2f       	mov	r25, r22
     e54:	e9 cf       	rjmp	.-46     	; 0xe28 <sram_init+0xa>
     e56:	8f ef       	ldi	r24, 0xFF	; 255
     e58:	80 93 c8 03 	sts	0x03C8, r24
     e5c:	08 95       	ret

00000e5e <SPI_send>:
     e5e:	8f b9       	out	0x0f, r24	; 15
     e60:	77 9b       	sbis	0x0e, 7	; 14
     e62:	fe cf       	rjmp	.-4      	; 0xe60 <SPI_send+0x2>
     e64:	08 95       	ret

00000e66 <SPI_read>:
     e66:	80 e0       	ldi	r24, 0x00	; 0
     e68:	0e 94 2f 07 	call	0xe5e	; 0xe5e <SPI_send>
     e6c:	77 9b       	sbis	0x0e, 7	; 14
     e6e:	fe cf       	rjmp	.-4      	; 0xe6c <SPI_read+0x6>
     e70:	8f b1       	in	r24, 0x0f	; 15
     e72:	08 95       	ret

00000e74 <SPI_select>:
     e74:	c4 98       	cbi	0x18, 4	; 24
     e76:	08 95       	ret

00000e78 <SPI_deselect>:
     e78:	c4 9a       	sbi	0x18, 4	; 24
     e7a:	08 95       	ret

00000e7c <SPI_initialize>:
     e7c:	87 b3       	in	r24, 0x17	; 23
     e7e:	80 6b       	ori	r24, 0xB0	; 176
     e80:	87 bb       	out	0x17, r24	; 23
     e82:	be 98       	cbi	0x17, 6	; 23
     e84:	6c 9a       	sbi	0x0d, 4	; 13
     e86:	6e 9a       	sbi	0x0d, 6	; 13
     e88:	70 9a       	sbi	0x0e, 0	; 14
     e8a:	0e 94 3c 07 	call	0xe78	; 0xe78 <SPI_deselect>
     e8e:	08 95       	ret

00000e90 <send_UART>:
     e90:	5d 9b       	sbis	0x0b, 5	; 11
     e92:	fe cf       	rjmp	.-4      	; 0xe90 <send_UART>
     e94:	8c b9       	out	0x0c, r24	; 12
     e96:	08 95       	ret

00000e98 <recieve_UART>:
     e98:	5f 9b       	sbis	0x0b, 7	; 11
     e9a:	fe cf       	rjmp	.-4      	; 0xe98 <recieve_UART>
     e9c:	8c b1       	in	r24, 0x0c	; 12
     e9e:	90 e0       	ldi	r25, 0x00	; 0
     ea0:	08 95       	ret

00000ea2 <init_UART>:
     ea2:	90 bd       	out	0x20, r25	; 32
     ea4:	89 b9       	out	0x09, r24	; 9
     ea6:	88 e1       	ldi	r24, 0x18	; 24
     ea8:	8a b9       	out	0x0a, r24	; 10
     eaa:	6c e4       	ldi	r22, 0x4C	; 76
     eac:	77 e0       	ldi	r23, 0x07	; 7
     eae:	88 e4       	ldi	r24, 0x48	; 72
     eb0:	97 e0       	ldi	r25, 0x07	; 7
     eb2:	0e 94 73 09 	call	0x12e6	; 0x12e6 <fdevopen>
     eb6:	08 95       	ret

00000eb8 <__subsf3>:
     eb8:	50 58       	subi	r21, 0x80	; 128

00000eba <__addsf3>:
     eba:	bb 27       	eor	r27, r27
     ebc:	aa 27       	eor	r26, r26
     ebe:	0e d0       	rcall	.+28     	; 0xedc <__addsf3x>
     ec0:	4d c1       	rjmp	.+666    	; 0x115c <__fp_round>
     ec2:	3e d1       	rcall	.+636    	; 0x1140 <__fp_pscA>
     ec4:	30 f0       	brcs	.+12     	; 0xed2 <__addsf3+0x18>
     ec6:	43 d1       	rcall	.+646    	; 0x114e <__fp_pscB>
     ec8:	20 f0       	brcs	.+8      	; 0xed2 <__addsf3+0x18>
     eca:	31 f4       	brne	.+12     	; 0xed8 <__addsf3+0x1e>
     ecc:	9f 3f       	cpi	r25, 0xFF	; 255
     ece:	11 f4       	brne	.+4      	; 0xed4 <__addsf3+0x1a>
     ed0:	1e f4       	brtc	.+6      	; 0xed8 <__addsf3+0x1e>
     ed2:	33 c1       	rjmp	.+614    	; 0x113a <__fp_nan>
     ed4:	0e f4       	brtc	.+2      	; 0xed8 <__addsf3+0x1e>
     ed6:	e0 95       	com	r30
     ed8:	e7 fb       	bst	r30, 7
     eda:	29 c1       	rjmp	.+594    	; 0x112e <__fp_inf>

00000edc <__addsf3x>:
     edc:	e9 2f       	mov	r30, r25
     ede:	4f d1       	rcall	.+670    	; 0x117e <__fp_split3>
     ee0:	80 f3       	brcs	.-32     	; 0xec2 <__addsf3+0x8>
     ee2:	ba 17       	cp	r27, r26
     ee4:	62 07       	cpc	r22, r18
     ee6:	73 07       	cpc	r23, r19
     ee8:	84 07       	cpc	r24, r20
     eea:	95 07       	cpc	r25, r21
     eec:	18 f0       	brcs	.+6      	; 0xef4 <__addsf3x+0x18>
     eee:	71 f4       	brne	.+28     	; 0xf0c <__addsf3x+0x30>
     ef0:	9e f5       	brtc	.+102    	; 0xf58 <__addsf3x+0x7c>
     ef2:	67 c1       	rjmp	.+718    	; 0x11c2 <__fp_zero>
     ef4:	0e f4       	brtc	.+2      	; 0xef8 <__addsf3x+0x1c>
     ef6:	e0 95       	com	r30
     ef8:	0b 2e       	mov	r0, r27
     efa:	ba 2f       	mov	r27, r26
     efc:	a0 2d       	mov	r26, r0
     efe:	0b 01       	movw	r0, r22
     f00:	b9 01       	movw	r22, r18
     f02:	90 01       	movw	r18, r0
     f04:	0c 01       	movw	r0, r24
     f06:	ca 01       	movw	r24, r20
     f08:	a0 01       	movw	r20, r0
     f0a:	11 24       	eor	r1, r1
     f0c:	ff 27       	eor	r31, r31
     f0e:	59 1b       	sub	r21, r25
     f10:	99 f0       	breq	.+38     	; 0xf38 <__addsf3x+0x5c>
     f12:	59 3f       	cpi	r21, 0xF9	; 249
     f14:	50 f4       	brcc	.+20     	; 0xf2a <__addsf3x+0x4e>
     f16:	50 3e       	cpi	r21, 0xE0	; 224
     f18:	68 f1       	brcs	.+90     	; 0xf74 <__addsf3x+0x98>
     f1a:	1a 16       	cp	r1, r26
     f1c:	f0 40       	sbci	r31, 0x00	; 0
     f1e:	a2 2f       	mov	r26, r18
     f20:	23 2f       	mov	r18, r19
     f22:	34 2f       	mov	r19, r20
     f24:	44 27       	eor	r20, r20
     f26:	58 5f       	subi	r21, 0xF8	; 248
     f28:	f3 cf       	rjmp	.-26     	; 0xf10 <__addsf3x+0x34>
     f2a:	46 95       	lsr	r20
     f2c:	37 95       	ror	r19
     f2e:	27 95       	ror	r18
     f30:	a7 95       	ror	r26
     f32:	f0 40       	sbci	r31, 0x00	; 0
     f34:	53 95       	inc	r21
     f36:	c9 f7       	brne	.-14     	; 0xf2a <__addsf3x+0x4e>
     f38:	7e f4       	brtc	.+30     	; 0xf58 <__addsf3x+0x7c>
     f3a:	1f 16       	cp	r1, r31
     f3c:	ba 0b       	sbc	r27, r26
     f3e:	62 0b       	sbc	r22, r18
     f40:	73 0b       	sbc	r23, r19
     f42:	84 0b       	sbc	r24, r20
     f44:	ba f0       	brmi	.+46     	; 0xf74 <__addsf3x+0x98>
     f46:	91 50       	subi	r25, 0x01	; 1
     f48:	a1 f0       	breq	.+40     	; 0xf72 <__addsf3x+0x96>
     f4a:	ff 0f       	add	r31, r31
     f4c:	bb 1f       	adc	r27, r27
     f4e:	66 1f       	adc	r22, r22
     f50:	77 1f       	adc	r23, r23
     f52:	88 1f       	adc	r24, r24
     f54:	c2 f7       	brpl	.-16     	; 0xf46 <__addsf3x+0x6a>
     f56:	0e c0       	rjmp	.+28     	; 0xf74 <__addsf3x+0x98>
     f58:	ba 0f       	add	r27, r26
     f5a:	62 1f       	adc	r22, r18
     f5c:	73 1f       	adc	r23, r19
     f5e:	84 1f       	adc	r24, r20
     f60:	48 f4       	brcc	.+18     	; 0xf74 <__addsf3x+0x98>
     f62:	87 95       	ror	r24
     f64:	77 95       	ror	r23
     f66:	67 95       	ror	r22
     f68:	b7 95       	ror	r27
     f6a:	f7 95       	ror	r31
     f6c:	9e 3f       	cpi	r25, 0xFE	; 254
     f6e:	08 f0       	brcs	.+2      	; 0xf72 <__addsf3x+0x96>
     f70:	b3 cf       	rjmp	.-154    	; 0xed8 <__addsf3+0x1e>
     f72:	93 95       	inc	r25
     f74:	88 0f       	add	r24, r24
     f76:	08 f0       	brcs	.+2      	; 0xf7a <__addsf3x+0x9e>
     f78:	99 27       	eor	r25, r25
     f7a:	ee 0f       	add	r30, r30
     f7c:	97 95       	ror	r25
     f7e:	87 95       	ror	r24
     f80:	08 95       	ret

00000f82 <__divsf3>:
     f82:	0c d0       	rcall	.+24     	; 0xf9c <__divsf3x>
     f84:	eb c0       	rjmp	.+470    	; 0x115c <__fp_round>
     f86:	e3 d0       	rcall	.+454    	; 0x114e <__fp_pscB>
     f88:	40 f0       	brcs	.+16     	; 0xf9a <__divsf3+0x18>
     f8a:	da d0       	rcall	.+436    	; 0x1140 <__fp_pscA>
     f8c:	30 f0       	brcs	.+12     	; 0xf9a <__divsf3+0x18>
     f8e:	21 f4       	brne	.+8      	; 0xf98 <__divsf3+0x16>
     f90:	5f 3f       	cpi	r21, 0xFF	; 255
     f92:	19 f0       	breq	.+6      	; 0xf9a <__divsf3+0x18>
     f94:	cc c0       	rjmp	.+408    	; 0x112e <__fp_inf>
     f96:	51 11       	cpse	r21, r1
     f98:	15 c1       	rjmp	.+554    	; 0x11c4 <__fp_szero>
     f9a:	cf c0       	rjmp	.+414    	; 0x113a <__fp_nan>

00000f9c <__divsf3x>:
     f9c:	f0 d0       	rcall	.+480    	; 0x117e <__fp_split3>
     f9e:	98 f3       	brcs	.-26     	; 0xf86 <__divsf3+0x4>

00000fa0 <__divsf3_pse>:
     fa0:	99 23       	and	r25, r25
     fa2:	c9 f3       	breq	.-14     	; 0xf96 <__divsf3+0x14>
     fa4:	55 23       	and	r21, r21
     fa6:	b1 f3       	breq	.-20     	; 0xf94 <__divsf3+0x12>
     fa8:	95 1b       	sub	r25, r21
     faa:	55 0b       	sbc	r21, r21
     fac:	bb 27       	eor	r27, r27
     fae:	aa 27       	eor	r26, r26
     fb0:	62 17       	cp	r22, r18
     fb2:	73 07       	cpc	r23, r19
     fb4:	84 07       	cpc	r24, r20
     fb6:	38 f0       	brcs	.+14     	; 0xfc6 <__divsf3_pse+0x26>
     fb8:	9f 5f       	subi	r25, 0xFF	; 255
     fba:	5f 4f       	sbci	r21, 0xFF	; 255
     fbc:	22 0f       	add	r18, r18
     fbe:	33 1f       	adc	r19, r19
     fc0:	44 1f       	adc	r20, r20
     fc2:	aa 1f       	adc	r26, r26
     fc4:	a9 f3       	breq	.-22     	; 0xfb0 <__divsf3_pse+0x10>
     fc6:	33 d0       	rcall	.+102    	; 0x102e <__divsf3_pse+0x8e>
     fc8:	0e 2e       	mov	r0, r30
     fca:	3a f0       	brmi	.+14     	; 0xfda <__divsf3_pse+0x3a>
     fcc:	e0 e8       	ldi	r30, 0x80	; 128
     fce:	30 d0       	rcall	.+96     	; 0x1030 <__divsf3_pse+0x90>
     fd0:	91 50       	subi	r25, 0x01	; 1
     fd2:	50 40       	sbci	r21, 0x00	; 0
     fd4:	e6 95       	lsr	r30
     fd6:	00 1c       	adc	r0, r0
     fd8:	ca f7       	brpl	.-14     	; 0xfcc <__divsf3_pse+0x2c>
     fda:	29 d0       	rcall	.+82     	; 0x102e <__divsf3_pse+0x8e>
     fdc:	fe 2f       	mov	r31, r30
     fde:	27 d0       	rcall	.+78     	; 0x102e <__divsf3_pse+0x8e>
     fe0:	66 0f       	add	r22, r22
     fe2:	77 1f       	adc	r23, r23
     fe4:	88 1f       	adc	r24, r24
     fe6:	bb 1f       	adc	r27, r27
     fe8:	26 17       	cp	r18, r22
     fea:	37 07       	cpc	r19, r23
     fec:	48 07       	cpc	r20, r24
     fee:	ab 07       	cpc	r26, r27
     ff0:	b0 e8       	ldi	r27, 0x80	; 128
     ff2:	09 f0       	breq	.+2      	; 0xff6 <__divsf3_pse+0x56>
     ff4:	bb 0b       	sbc	r27, r27
     ff6:	80 2d       	mov	r24, r0
     ff8:	bf 01       	movw	r22, r30
     ffa:	ff 27       	eor	r31, r31
     ffc:	93 58       	subi	r25, 0x83	; 131
     ffe:	5f 4f       	sbci	r21, 0xFF	; 255
    1000:	2a f0       	brmi	.+10     	; 0x100c <__divsf3_pse+0x6c>
    1002:	9e 3f       	cpi	r25, 0xFE	; 254
    1004:	51 05       	cpc	r21, r1
    1006:	68 f0       	brcs	.+26     	; 0x1022 <__divsf3_pse+0x82>
    1008:	92 c0       	rjmp	.+292    	; 0x112e <__fp_inf>
    100a:	dc c0       	rjmp	.+440    	; 0x11c4 <__fp_szero>
    100c:	5f 3f       	cpi	r21, 0xFF	; 255
    100e:	ec f3       	brlt	.-6      	; 0x100a <__divsf3_pse+0x6a>
    1010:	98 3e       	cpi	r25, 0xE8	; 232
    1012:	dc f3       	brlt	.-10     	; 0x100a <__divsf3_pse+0x6a>
    1014:	86 95       	lsr	r24
    1016:	77 95       	ror	r23
    1018:	67 95       	ror	r22
    101a:	b7 95       	ror	r27
    101c:	f7 95       	ror	r31
    101e:	9f 5f       	subi	r25, 0xFF	; 255
    1020:	c9 f7       	brne	.-14     	; 0x1014 <__divsf3_pse+0x74>
    1022:	88 0f       	add	r24, r24
    1024:	91 1d       	adc	r25, r1
    1026:	96 95       	lsr	r25
    1028:	87 95       	ror	r24
    102a:	97 f9       	bld	r25, 7
    102c:	08 95       	ret
    102e:	e1 e0       	ldi	r30, 0x01	; 1
    1030:	66 0f       	add	r22, r22
    1032:	77 1f       	adc	r23, r23
    1034:	88 1f       	adc	r24, r24
    1036:	bb 1f       	adc	r27, r27
    1038:	62 17       	cp	r22, r18
    103a:	73 07       	cpc	r23, r19
    103c:	84 07       	cpc	r24, r20
    103e:	ba 07       	cpc	r27, r26
    1040:	20 f0       	brcs	.+8      	; 0x104a <__divsf3_pse+0xaa>
    1042:	62 1b       	sub	r22, r18
    1044:	73 0b       	sbc	r23, r19
    1046:	84 0b       	sbc	r24, r20
    1048:	ba 0b       	sbc	r27, r26
    104a:	ee 1f       	adc	r30, r30
    104c:	88 f7       	brcc	.-30     	; 0x1030 <__divsf3_pse+0x90>
    104e:	e0 95       	com	r30
    1050:	08 95       	ret

00001052 <__fixsfsi>:
    1052:	04 d0       	rcall	.+8      	; 0x105c <__fixunssfsi>
    1054:	68 94       	set
    1056:	b1 11       	cpse	r27, r1
    1058:	b5 c0       	rjmp	.+362    	; 0x11c4 <__fp_szero>
    105a:	08 95       	ret

0000105c <__fixunssfsi>:
    105c:	98 d0       	rcall	.+304    	; 0x118e <__fp_splitA>
    105e:	88 f0       	brcs	.+34     	; 0x1082 <__fixunssfsi+0x26>
    1060:	9f 57       	subi	r25, 0x7F	; 127
    1062:	90 f0       	brcs	.+36     	; 0x1088 <__fixunssfsi+0x2c>
    1064:	b9 2f       	mov	r27, r25
    1066:	99 27       	eor	r25, r25
    1068:	b7 51       	subi	r27, 0x17	; 23
    106a:	a0 f0       	brcs	.+40     	; 0x1094 <__fixunssfsi+0x38>
    106c:	d1 f0       	breq	.+52     	; 0x10a2 <__fixunssfsi+0x46>
    106e:	66 0f       	add	r22, r22
    1070:	77 1f       	adc	r23, r23
    1072:	88 1f       	adc	r24, r24
    1074:	99 1f       	adc	r25, r25
    1076:	1a f0       	brmi	.+6      	; 0x107e <__fixunssfsi+0x22>
    1078:	ba 95       	dec	r27
    107a:	c9 f7       	brne	.-14     	; 0x106e <__fixunssfsi+0x12>
    107c:	12 c0       	rjmp	.+36     	; 0x10a2 <__fixunssfsi+0x46>
    107e:	b1 30       	cpi	r27, 0x01	; 1
    1080:	81 f0       	breq	.+32     	; 0x10a2 <__fixunssfsi+0x46>
    1082:	9f d0       	rcall	.+318    	; 0x11c2 <__fp_zero>
    1084:	b1 e0       	ldi	r27, 0x01	; 1
    1086:	08 95       	ret
    1088:	9c c0       	rjmp	.+312    	; 0x11c2 <__fp_zero>
    108a:	67 2f       	mov	r22, r23
    108c:	78 2f       	mov	r23, r24
    108e:	88 27       	eor	r24, r24
    1090:	b8 5f       	subi	r27, 0xF8	; 248
    1092:	39 f0       	breq	.+14     	; 0x10a2 <__fixunssfsi+0x46>
    1094:	b9 3f       	cpi	r27, 0xF9	; 249
    1096:	cc f3       	brlt	.-14     	; 0x108a <__fixunssfsi+0x2e>
    1098:	86 95       	lsr	r24
    109a:	77 95       	ror	r23
    109c:	67 95       	ror	r22
    109e:	b3 95       	inc	r27
    10a0:	d9 f7       	brne	.-10     	; 0x1098 <__fixunssfsi+0x3c>
    10a2:	3e f4       	brtc	.+14     	; 0x10b2 <__fixunssfsi+0x56>
    10a4:	90 95       	com	r25
    10a6:	80 95       	com	r24
    10a8:	70 95       	com	r23
    10aa:	61 95       	neg	r22
    10ac:	7f 4f       	sbci	r23, 0xFF	; 255
    10ae:	8f 4f       	sbci	r24, 0xFF	; 255
    10b0:	9f 4f       	sbci	r25, 0xFF	; 255
    10b2:	08 95       	ret

000010b4 <__floatunsisf>:
    10b4:	e8 94       	clt
    10b6:	09 c0       	rjmp	.+18     	; 0x10ca <__floatsisf+0x12>

000010b8 <__floatsisf>:
    10b8:	97 fb       	bst	r25, 7
    10ba:	3e f4       	brtc	.+14     	; 0x10ca <__floatsisf+0x12>
    10bc:	90 95       	com	r25
    10be:	80 95       	com	r24
    10c0:	70 95       	com	r23
    10c2:	61 95       	neg	r22
    10c4:	7f 4f       	sbci	r23, 0xFF	; 255
    10c6:	8f 4f       	sbci	r24, 0xFF	; 255
    10c8:	9f 4f       	sbci	r25, 0xFF	; 255
    10ca:	99 23       	and	r25, r25
    10cc:	a9 f0       	breq	.+42     	; 0x10f8 <__floatsisf+0x40>
    10ce:	f9 2f       	mov	r31, r25
    10d0:	96 e9       	ldi	r25, 0x96	; 150
    10d2:	bb 27       	eor	r27, r27
    10d4:	93 95       	inc	r25
    10d6:	f6 95       	lsr	r31
    10d8:	87 95       	ror	r24
    10da:	77 95       	ror	r23
    10dc:	67 95       	ror	r22
    10de:	b7 95       	ror	r27
    10e0:	f1 11       	cpse	r31, r1
    10e2:	f8 cf       	rjmp	.-16     	; 0x10d4 <__floatsisf+0x1c>
    10e4:	fa f4       	brpl	.+62     	; 0x1124 <__floatsisf+0x6c>
    10e6:	bb 0f       	add	r27, r27
    10e8:	11 f4       	brne	.+4      	; 0x10ee <__floatsisf+0x36>
    10ea:	60 ff       	sbrs	r22, 0
    10ec:	1b c0       	rjmp	.+54     	; 0x1124 <__floatsisf+0x6c>
    10ee:	6f 5f       	subi	r22, 0xFF	; 255
    10f0:	7f 4f       	sbci	r23, 0xFF	; 255
    10f2:	8f 4f       	sbci	r24, 0xFF	; 255
    10f4:	9f 4f       	sbci	r25, 0xFF	; 255
    10f6:	16 c0       	rjmp	.+44     	; 0x1124 <__floatsisf+0x6c>
    10f8:	88 23       	and	r24, r24
    10fa:	11 f0       	breq	.+4      	; 0x1100 <__floatsisf+0x48>
    10fc:	96 e9       	ldi	r25, 0x96	; 150
    10fe:	11 c0       	rjmp	.+34     	; 0x1122 <__floatsisf+0x6a>
    1100:	77 23       	and	r23, r23
    1102:	21 f0       	breq	.+8      	; 0x110c <__floatsisf+0x54>
    1104:	9e e8       	ldi	r25, 0x8E	; 142
    1106:	87 2f       	mov	r24, r23
    1108:	76 2f       	mov	r23, r22
    110a:	05 c0       	rjmp	.+10     	; 0x1116 <__floatsisf+0x5e>
    110c:	66 23       	and	r22, r22
    110e:	71 f0       	breq	.+28     	; 0x112c <__floatsisf+0x74>
    1110:	96 e8       	ldi	r25, 0x86	; 134
    1112:	86 2f       	mov	r24, r22
    1114:	70 e0       	ldi	r23, 0x00	; 0
    1116:	60 e0       	ldi	r22, 0x00	; 0
    1118:	2a f0       	brmi	.+10     	; 0x1124 <__floatsisf+0x6c>
    111a:	9a 95       	dec	r25
    111c:	66 0f       	add	r22, r22
    111e:	77 1f       	adc	r23, r23
    1120:	88 1f       	adc	r24, r24
    1122:	da f7       	brpl	.-10     	; 0x111a <__floatsisf+0x62>
    1124:	88 0f       	add	r24, r24
    1126:	96 95       	lsr	r25
    1128:	87 95       	ror	r24
    112a:	97 f9       	bld	r25, 7
    112c:	08 95       	ret

0000112e <__fp_inf>:
    112e:	97 f9       	bld	r25, 7
    1130:	9f 67       	ori	r25, 0x7F	; 127
    1132:	80 e8       	ldi	r24, 0x80	; 128
    1134:	70 e0       	ldi	r23, 0x00	; 0
    1136:	60 e0       	ldi	r22, 0x00	; 0
    1138:	08 95       	ret

0000113a <__fp_nan>:
    113a:	9f ef       	ldi	r25, 0xFF	; 255
    113c:	80 ec       	ldi	r24, 0xC0	; 192
    113e:	08 95       	ret

00001140 <__fp_pscA>:
    1140:	00 24       	eor	r0, r0
    1142:	0a 94       	dec	r0
    1144:	16 16       	cp	r1, r22
    1146:	17 06       	cpc	r1, r23
    1148:	18 06       	cpc	r1, r24
    114a:	09 06       	cpc	r0, r25
    114c:	08 95       	ret

0000114e <__fp_pscB>:
    114e:	00 24       	eor	r0, r0
    1150:	0a 94       	dec	r0
    1152:	12 16       	cp	r1, r18
    1154:	13 06       	cpc	r1, r19
    1156:	14 06       	cpc	r1, r20
    1158:	05 06       	cpc	r0, r21
    115a:	08 95       	ret

0000115c <__fp_round>:
    115c:	09 2e       	mov	r0, r25
    115e:	03 94       	inc	r0
    1160:	00 0c       	add	r0, r0
    1162:	11 f4       	brne	.+4      	; 0x1168 <__fp_round+0xc>
    1164:	88 23       	and	r24, r24
    1166:	52 f0       	brmi	.+20     	; 0x117c <__fp_round+0x20>
    1168:	bb 0f       	add	r27, r27
    116a:	40 f4       	brcc	.+16     	; 0x117c <__fp_round+0x20>
    116c:	bf 2b       	or	r27, r31
    116e:	11 f4       	brne	.+4      	; 0x1174 <__fp_round+0x18>
    1170:	60 ff       	sbrs	r22, 0
    1172:	04 c0       	rjmp	.+8      	; 0x117c <__fp_round+0x20>
    1174:	6f 5f       	subi	r22, 0xFF	; 255
    1176:	7f 4f       	sbci	r23, 0xFF	; 255
    1178:	8f 4f       	sbci	r24, 0xFF	; 255
    117a:	9f 4f       	sbci	r25, 0xFF	; 255
    117c:	08 95       	ret

0000117e <__fp_split3>:
    117e:	57 fd       	sbrc	r21, 7
    1180:	90 58       	subi	r25, 0x80	; 128
    1182:	44 0f       	add	r20, r20
    1184:	55 1f       	adc	r21, r21
    1186:	59 f0       	breq	.+22     	; 0x119e <__fp_splitA+0x10>
    1188:	5f 3f       	cpi	r21, 0xFF	; 255
    118a:	71 f0       	breq	.+28     	; 0x11a8 <__fp_splitA+0x1a>
    118c:	47 95       	ror	r20

0000118e <__fp_splitA>:
    118e:	88 0f       	add	r24, r24
    1190:	97 fb       	bst	r25, 7
    1192:	99 1f       	adc	r25, r25
    1194:	61 f0       	breq	.+24     	; 0x11ae <__fp_splitA+0x20>
    1196:	9f 3f       	cpi	r25, 0xFF	; 255
    1198:	79 f0       	breq	.+30     	; 0x11b8 <__fp_splitA+0x2a>
    119a:	87 95       	ror	r24
    119c:	08 95       	ret
    119e:	12 16       	cp	r1, r18
    11a0:	13 06       	cpc	r1, r19
    11a2:	14 06       	cpc	r1, r20
    11a4:	55 1f       	adc	r21, r21
    11a6:	f2 cf       	rjmp	.-28     	; 0x118c <__fp_split3+0xe>
    11a8:	46 95       	lsr	r20
    11aa:	f1 df       	rcall	.-30     	; 0x118e <__fp_splitA>
    11ac:	08 c0       	rjmp	.+16     	; 0x11be <__fp_splitA+0x30>
    11ae:	16 16       	cp	r1, r22
    11b0:	17 06       	cpc	r1, r23
    11b2:	18 06       	cpc	r1, r24
    11b4:	99 1f       	adc	r25, r25
    11b6:	f1 cf       	rjmp	.-30     	; 0x119a <__fp_splitA+0xc>
    11b8:	86 95       	lsr	r24
    11ba:	71 05       	cpc	r23, r1
    11bc:	61 05       	cpc	r22, r1
    11be:	08 94       	sec
    11c0:	08 95       	ret

000011c2 <__fp_zero>:
    11c2:	e8 94       	clt

000011c4 <__fp_szero>:
    11c4:	bb 27       	eor	r27, r27
    11c6:	66 27       	eor	r22, r22
    11c8:	77 27       	eor	r23, r23
    11ca:	cb 01       	movw	r24, r22
    11cc:	97 f9       	bld	r25, 7
    11ce:	08 95       	ret

000011d0 <__mulsf3>:
    11d0:	0b d0       	rcall	.+22     	; 0x11e8 <__mulsf3x>
    11d2:	c4 cf       	rjmp	.-120    	; 0x115c <__fp_round>
    11d4:	b5 df       	rcall	.-150    	; 0x1140 <__fp_pscA>
    11d6:	28 f0       	brcs	.+10     	; 0x11e2 <__mulsf3+0x12>
    11d8:	ba df       	rcall	.-140    	; 0x114e <__fp_pscB>
    11da:	18 f0       	brcs	.+6      	; 0x11e2 <__mulsf3+0x12>
    11dc:	95 23       	and	r25, r21
    11de:	09 f0       	breq	.+2      	; 0x11e2 <__mulsf3+0x12>
    11e0:	a6 cf       	rjmp	.-180    	; 0x112e <__fp_inf>
    11e2:	ab cf       	rjmp	.-170    	; 0x113a <__fp_nan>
    11e4:	11 24       	eor	r1, r1
    11e6:	ee cf       	rjmp	.-36     	; 0x11c4 <__fp_szero>

000011e8 <__mulsf3x>:
    11e8:	ca df       	rcall	.-108    	; 0x117e <__fp_split3>
    11ea:	a0 f3       	brcs	.-24     	; 0x11d4 <__mulsf3+0x4>

000011ec <__mulsf3_pse>:
    11ec:	95 9f       	mul	r25, r21
    11ee:	d1 f3       	breq	.-12     	; 0x11e4 <__mulsf3+0x14>
    11f0:	95 0f       	add	r25, r21
    11f2:	50 e0       	ldi	r21, 0x00	; 0
    11f4:	55 1f       	adc	r21, r21
    11f6:	62 9f       	mul	r22, r18
    11f8:	f0 01       	movw	r30, r0
    11fa:	72 9f       	mul	r23, r18
    11fc:	bb 27       	eor	r27, r27
    11fe:	f0 0d       	add	r31, r0
    1200:	b1 1d       	adc	r27, r1
    1202:	63 9f       	mul	r22, r19
    1204:	aa 27       	eor	r26, r26
    1206:	f0 0d       	add	r31, r0
    1208:	b1 1d       	adc	r27, r1
    120a:	aa 1f       	adc	r26, r26
    120c:	64 9f       	mul	r22, r20
    120e:	66 27       	eor	r22, r22
    1210:	b0 0d       	add	r27, r0
    1212:	a1 1d       	adc	r26, r1
    1214:	66 1f       	adc	r22, r22
    1216:	82 9f       	mul	r24, r18
    1218:	22 27       	eor	r18, r18
    121a:	b0 0d       	add	r27, r0
    121c:	a1 1d       	adc	r26, r1
    121e:	62 1f       	adc	r22, r18
    1220:	73 9f       	mul	r23, r19
    1222:	b0 0d       	add	r27, r0
    1224:	a1 1d       	adc	r26, r1
    1226:	62 1f       	adc	r22, r18
    1228:	83 9f       	mul	r24, r19
    122a:	a0 0d       	add	r26, r0
    122c:	61 1d       	adc	r22, r1
    122e:	22 1f       	adc	r18, r18
    1230:	74 9f       	mul	r23, r20
    1232:	33 27       	eor	r19, r19
    1234:	a0 0d       	add	r26, r0
    1236:	61 1d       	adc	r22, r1
    1238:	23 1f       	adc	r18, r19
    123a:	84 9f       	mul	r24, r20
    123c:	60 0d       	add	r22, r0
    123e:	21 1d       	adc	r18, r1
    1240:	82 2f       	mov	r24, r18
    1242:	76 2f       	mov	r23, r22
    1244:	6a 2f       	mov	r22, r26
    1246:	11 24       	eor	r1, r1
    1248:	9f 57       	subi	r25, 0x7F	; 127
    124a:	50 40       	sbci	r21, 0x00	; 0
    124c:	8a f0       	brmi	.+34     	; 0x1270 <__mulsf3_pse+0x84>
    124e:	e1 f0       	breq	.+56     	; 0x1288 <__mulsf3_pse+0x9c>
    1250:	88 23       	and	r24, r24
    1252:	4a f0       	brmi	.+18     	; 0x1266 <__mulsf3_pse+0x7a>
    1254:	ee 0f       	add	r30, r30
    1256:	ff 1f       	adc	r31, r31
    1258:	bb 1f       	adc	r27, r27
    125a:	66 1f       	adc	r22, r22
    125c:	77 1f       	adc	r23, r23
    125e:	88 1f       	adc	r24, r24
    1260:	91 50       	subi	r25, 0x01	; 1
    1262:	50 40       	sbci	r21, 0x00	; 0
    1264:	a9 f7       	brne	.-22     	; 0x1250 <__mulsf3_pse+0x64>
    1266:	9e 3f       	cpi	r25, 0xFE	; 254
    1268:	51 05       	cpc	r21, r1
    126a:	70 f0       	brcs	.+28     	; 0x1288 <__mulsf3_pse+0x9c>
    126c:	60 cf       	rjmp	.-320    	; 0x112e <__fp_inf>
    126e:	aa cf       	rjmp	.-172    	; 0x11c4 <__fp_szero>
    1270:	5f 3f       	cpi	r21, 0xFF	; 255
    1272:	ec f3       	brlt	.-6      	; 0x126e <__mulsf3_pse+0x82>
    1274:	98 3e       	cpi	r25, 0xE8	; 232
    1276:	dc f3       	brlt	.-10     	; 0x126e <__mulsf3_pse+0x82>
    1278:	86 95       	lsr	r24
    127a:	77 95       	ror	r23
    127c:	67 95       	ror	r22
    127e:	b7 95       	ror	r27
    1280:	f7 95       	ror	r31
    1282:	e7 95       	ror	r30
    1284:	9f 5f       	subi	r25, 0xFF	; 255
    1286:	c1 f7       	brne	.-16     	; 0x1278 <__mulsf3_pse+0x8c>
    1288:	fe 2b       	or	r31, r30
    128a:	88 0f       	add	r24, r24
    128c:	91 1d       	adc	r25, r1
    128e:	96 95       	lsr	r25
    1290:	87 95       	ror	r24
    1292:	97 f9       	bld	r25, 7
    1294:	08 95       	ret

00001296 <__divmodhi4>:
    1296:	97 fb       	bst	r25, 7
    1298:	07 2e       	mov	r0, r23
    129a:	16 f4       	brtc	.+4      	; 0x12a0 <__divmodhi4+0xa>
    129c:	00 94       	com	r0
    129e:	07 d0       	rcall	.+14     	; 0x12ae <__divmodhi4_neg1>
    12a0:	77 fd       	sbrc	r23, 7
    12a2:	09 d0       	rcall	.+18     	; 0x12b6 <__divmodhi4_neg2>
    12a4:	0e 94 5f 09 	call	0x12be	; 0x12be <__udivmodhi4>
    12a8:	07 fc       	sbrc	r0, 7
    12aa:	05 d0       	rcall	.+10     	; 0x12b6 <__divmodhi4_neg2>
    12ac:	3e f4       	brtc	.+14     	; 0x12bc <__divmodhi4_exit>

000012ae <__divmodhi4_neg1>:
    12ae:	90 95       	com	r25
    12b0:	81 95       	neg	r24
    12b2:	9f 4f       	sbci	r25, 0xFF	; 255
    12b4:	08 95       	ret

000012b6 <__divmodhi4_neg2>:
    12b6:	70 95       	com	r23
    12b8:	61 95       	neg	r22
    12ba:	7f 4f       	sbci	r23, 0xFF	; 255

000012bc <__divmodhi4_exit>:
    12bc:	08 95       	ret

000012be <__udivmodhi4>:
    12be:	aa 1b       	sub	r26, r26
    12c0:	bb 1b       	sub	r27, r27
    12c2:	51 e1       	ldi	r21, 0x11	; 17
    12c4:	07 c0       	rjmp	.+14     	; 0x12d4 <__udivmodhi4_ep>

000012c6 <__udivmodhi4_loop>:
    12c6:	aa 1f       	adc	r26, r26
    12c8:	bb 1f       	adc	r27, r27
    12ca:	a6 17       	cp	r26, r22
    12cc:	b7 07       	cpc	r27, r23
    12ce:	10 f0       	brcs	.+4      	; 0x12d4 <__udivmodhi4_ep>
    12d0:	a6 1b       	sub	r26, r22
    12d2:	b7 0b       	sbc	r27, r23

000012d4 <__udivmodhi4_ep>:
    12d4:	88 1f       	adc	r24, r24
    12d6:	99 1f       	adc	r25, r25
    12d8:	5a 95       	dec	r21
    12da:	a9 f7       	brne	.-22     	; 0x12c6 <__udivmodhi4_loop>
    12dc:	80 95       	com	r24
    12de:	90 95       	com	r25
    12e0:	bc 01       	movw	r22, r24
    12e2:	cd 01       	movw	r24, r26
    12e4:	08 95       	ret

000012e6 <fdevopen>:
    12e6:	0f 93       	push	r16
    12e8:	1f 93       	push	r17
    12ea:	cf 93       	push	r28
    12ec:	df 93       	push	r29
    12ee:	ec 01       	movw	r28, r24
    12f0:	8b 01       	movw	r16, r22
    12f2:	00 97       	sbiw	r24, 0x00	; 0
    12f4:	31 f4       	brne	.+12     	; 0x1302 <fdevopen+0x1c>
    12f6:	61 15       	cp	r22, r1
    12f8:	71 05       	cpc	r23, r1
    12fa:	19 f4       	brne	.+6      	; 0x1302 <fdevopen+0x1c>
    12fc:	80 e0       	ldi	r24, 0x00	; 0
    12fe:	90 e0       	ldi	r25, 0x00	; 0
    1300:	38 c0       	rjmp	.+112    	; 0x1372 <fdevopen+0x8c>
    1302:	6e e0       	ldi	r22, 0x0E	; 14
    1304:	70 e0       	ldi	r23, 0x00	; 0
    1306:	81 e0       	ldi	r24, 0x01	; 1
    1308:	90 e0       	ldi	r25, 0x00	; 0
    130a:	0e 94 d1 0b 	call	0x17a2	; 0x17a2 <calloc>
    130e:	fc 01       	movw	r30, r24
    1310:	00 97       	sbiw	r24, 0x00	; 0
    1312:	a1 f3       	breq	.-24     	; 0x12fc <fdevopen+0x16>
    1314:	80 e8       	ldi	r24, 0x80	; 128
    1316:	83 83       	std	Z+3, r24	; 0x03
    1318:	01 15       	cp	r16, r1
    131a:	11 05       	cpc	r17, r1
    131c:	71 f0       	breq	.+28     	; 0x133a <fdevopen+0x54>
    131e:	13 87       	std	Z+11, r17	; 0x0b
    1320:	02 87       	std	Z+10, r16	; 0x0a
    1322:	81 e8       	ldi	r24, 0x81	; 129
    1324:	83 83       	std	Z+3, r24	; 0x03
    1326:	80 91 27 04 	lds	r24, 0x0427
    132a:	90 91 28 04 	lds	r25, 0x0428
    132e:	89 2b       	or	r24, r25
    1330:	21 f4       	brne	.+8      	; 0x133a <fdevopen+0x54>
    1332:	f0 93 28 04 	sts	0x0428, r31
    1336:	e0 93 27 04 	sts	0x0427, r30
    133a:	20 97       	sbiw	r28, 0x00	; 0
    133c:	c9 f0       	breq	.+50     	; 0x1370 <fdevopen+0x8a>
    133e:	d1 87       	std	Z+9, r29	; 0x09
    1340:	c0 87       	std	Z+8, r28	; 0x08
    1342:	83 81       	ldd	r24, Z+3	; 0x03
    1344:	82 60       	ori	r24, 0x02	; 2
    1346:	83 83       	std	Z+3, r24	; 0x03
    1348:	80 91 29 04 	lds	r24, 0x0429
    134c:	90 91 2a 04 	lds	r25, 0x042A
    1350:	89 2b       	or	r24, r25
    1352:	71 f4       	brne	.+28     	; 0x1370 <fdevopen+0x8a>
    1354:	f0 93 2a 04 	sts	0x042A, r31
    1358:	e0 93 29 04 	sts	0x0429, r30
    135c:	80 91 2b 04 	lds	r24, 0x042B
    1360:	90 91 2c 04 	lds	r25, 0x042C
    1364:	89 2b       	or	r24, r25
    1366:	21 f4       	brne	.+8      	; 0x1370 <fdevopen+0x8a>
    1368:	f0 93 2c 04 	sts	0x042C, r31
    136c:	e0 93 2b 04 	sts	0x042B, r30
    1370:	cf 01       	movw	r24, r30
    1372:	df 91       	pop	r29
    1374:	cf 91       	pop	r28
    1376:	1f 91       	pop	r17
    1378:	0f 91       	pop	r16
    137a:	08 95       	ret

0000137c <printf>:
    137c:	a0 e0       	ldi	r26, 0x00	; 0
    137e:	b0 e0       	ldi	r27, 0x00	; 0
    1380:	e4 ec       	ldi	r30, 0xC4	; 196
    1382:	f9 e0       	ldi	r31, 0x09	; 9
    1384:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__prologue_saves__+0x20>
    1388:	fe 01       	movw	r30, r28
    138a:	35 96       	adiw	r30, 0x05	; 5
    138c:	61 91       	ld	r22, Z+
    138e:	71 91       	ld	r23, Z+
    1390:	af 01       	movw	r20, r30
    1392:	80 91 29 04 	lds	r24, 0x0429
    1396:	90 91 2a 04 	lds	r25, 0x042A
    139a:	0e 94 ff 09 	call	0x13fe	; 0x13fe <vfprintf>
    139e:	e2 e0       	ldi	r30, 0x02	; 2
    13a0:	0c 94 ed 0d 	jmp	0x1bda	; 0x1bda <__epilogue_restores__+0x20>

000013a4 <puts>:
    13a4:	0f 93       	push	r16
    13a6:	1f 93       	push	r17
    13a8:	cf 93       	push	r28
    13aa:	df 93       	push	r29
    13ac:	e0 91 29 04 	lds	r30, 0x0429
    13b0:	f0 91 2a 04 	lds	r31, 0x042A
    13b4:	23 81       	ldd	r18, Z+3	; 0x03
    13b6:	21 ff       	sbrs	r18, 1
    13b8:	1b c0       	rjmp	.+54     	; 0x13f0 <puts+0x4c>
    13ba:	ec 01       	movw	r28, r24
    13bc:	00 e0       	ldi	r16, 0x00	; 0
    13be:	10 e0       	ldi	r17, 0x00	; 0
    13c0:	89 91       	ld	r24, Y+
    13c2:	60 91 29 04 	lds	r22, 0x0429
    13c6:	70 91 2a 04 	lds	r23, 0x042A
    13ca:	db 01       	movw	r26, r22
    13cc:	18 96       	adiw	r26, 0x08	; 8
    13ce:	ed 91       	ld	r30, X+
    13d0:	fc 91       	ld	r31, X
    13d2:	19 97       	sbiw	r26, 0x09	; 9
    13d4:	88 23       	and	r24, r24
    13d6:	31 f0       	breq	.+12     	; 0x13e4 <puts+0x40>
    13d8:	09 95       	icall
    13da:	89 2b       	or	r24, r25
    13dc:	89 f3       	breq	.-30     	; 0x13c0 <puts+0x1c>
    13de:	0f ef       	ldi	r16, 0xFF	; 255
    13e0:	1f ef       	ldi	r17, 0xFF	; 255
    13e2:	ee cf       	rjmp	.-36     	; 0x13c0 <puts+0x1c>
    13e4:	8a e0       	ldi	r24, 0x0A	; 10
    13e6:	09 95       	icall
    13e8:	89 2b       	or	r24, r25
    13ea:	11 f4       	brne	.+4      	; 0x13f0 <puts+0x4c>
    13ec:	c8 01       	movw	r24, r16
    13ee:	02 c0       	rjmp	.+4      	; 0x13f4 <puts+0x50>
    13f0:	8f ef       	ldi	r24, 0xFF	; 255
    13f2:	9f ef       	ldi	r25, 0xFF	; 255
    13f4:	df 91       	pop	r29
    13f6:	cf 91       	pop	r28
    13f8:	1f 91       	pop	r17
    13fa:	0f 91       	pop	r16
    13fc:	08 95       	ret

000013fe <vfprintf>:
    13fe:	ac e0       	ldi	r26, 0x0C	; 12
    1400:	b0 e0       	ldi	r27, 0x00	; 0
    1402:	e5 e0       	ldi	r30, 0x05	; 5
    1404:	fa e0       	ldi	r31, 0x0A	; 10
    1406:	0c 94 c1 0d 	jmp	0x1b82	; 0x1b82 <__prologue_saves__>
    140a:	7c 01       	movw	r14, r24
    140c:	6b 01       	movw	r12, r22
    140e:	8a 01       	movw	r16, r20
    1410:	fc 01       	movw	r30, r24
    1412:	17 82       	std	Z+7, r1	; 0x07
    1414:	16 82       	std	Z+6, r1	; 0x06
    1416:	83 81       	ldd	r24, Z+3	; 0x03
    1418:	81 ff       	sbrs	r24, 1
    141a:	bd c1       	rjmp	.+890    	; 0x1796 <vfprintf+0x398>
    141c:	ce 01       	movw	r24, r28
    141e:	01 96       	adiw	r24, 0x01	; 1
    1420:	4c 01       	movw	r8, r24
    1422:	f7 01       	movw	r30, r14
    1424:	93 81       	ldd	r25, Z+3	; 0x03
    1426:	f6 01       	movw	r30, r12
    1428:	93 fd       	sbrc	r25, 3
    142a:	85 91       	lpm	r24, Z+
    142c:	93 ff       	sbrs	r25, 3
    142e:	81 91       	ld	r24, Z+
    1430:	6f 01       	movw	r12, r30
    1432:	88 23       	and	r24, r24
    1434:	09 f4       	brne	.+2      	; 0x1438 <vfprintf+0x3a>
    1436:	ab c1       	rjmp	.+854    	; 0x178e <vfprintf+0x390>
    1438:	85 32       	cpi	r24, 0x25	; 37
    143a:	39 f4       	brne	.+14     	; 0x144a <vfprintf+0x4c>
    143c:	93 fd       	sbrc	r25, 3
    143e:	85 91       	lpm	r24, Z+
    1440:	93 ff       	sbrs	r25, 3
    1442:	81 91       	ld	r24, Z+
    1444:	6f 01       	movw	r12, r30
    1446:	85 32       	cpi	r24, 0x25	; 37
    1448:	29 f4       	brne	.+10     	; 0x1454 <vfprintf+0x56>
    144a:	b7 01       	movw	r22, r14
    144c:	90 e0       	ldi	r25, 0x00	; 0
    144e:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <fputc>
    1452:	e7 cf       	rjmp	.-50     	; 0x1422 <vfprintf+0x24>
    1454:	51 2c       	mov	r5, r1
    1456:	31 2c       	mov	r3, r1
    1458:	20 e0       	ldi	r18, 0x00	; 0
    145a:	20 32       	cpi	r18, 0x20	; 32
    145c:	a0 f4       	brcc	.+40     	; 0x1486 <vfprintf+0x88>
    145e:	8b 32       	cpi	r24, 0x2B	; 43
    1460:	69 f0       	breq	.+26     	; 0x147c <vfprintf+0x7e>
    1462:	30 f4       	brcc	.+12     	; 0x1470 <vfprintf+0x72>
    1464:	80 32       	cpi	r24, 0x20	; 32
    1466:	59 f0       	breq	.+22     	; 0x147e <vfprintf+0x80>
    1468:	83 32       	cpi	r24, 0x23	; 35
    146a:	69 f4       	brne	.+26     	; 0x1486 <vfprintf+0x88>
    146c:	20 61       	ori	r18, 0x10	; 16
    146e:	2c c0       	rjmp	.+88     	; 0x14c8 <vfprintf+0xca>
    1470:	8d 32       	cpi	r24, 0x2D	; 45
    1472:	39 f0       	breq	.+14     	; 0x1482 <vfprintf+0x84>
    1474:	80 33       	cpi	r24, 0x30	; 48
    1476:	39 f4       	brne	.+14     	; 0x1486 <vfprintf+0x88>
    1478:	21 60       	ori	r18, 0x01	; 1
    147a:	26 c0       	rjmp	.+76     	; 0x14c8 <vfprintf+0xca>
    147c:	22 60       	ori	r18, 0x02	; 2
    147e:	24 60       	ori	r18, 0x04	; 4
    1480:	23 c0       	rjmp	.+70     	; 0x14c8 <vfprintf+0xca>
    1482:	28 60       	ori	r18, 0x08	; 8
    1484:	21 c0       	rjmp	.+66     	; 0x14c8 <vfprintf+0xca>
    1486:	27 fd       	sbrc	r18, 7
    1488:	27 c0       	rjmp	.+78     	; 0x14d8 <vfprintf+0xda>
    148a:	30 ed       	ldi	r19, 0xD0	; 208
    148c:	38 0f       	add	r19, r24
    148e:	3a 30       	cpi	r19, 0x0A	; 10
    1490:	78 f4       	brcc	.+30     	; 0x14b0 <vfprintf+0xb2>
    1492:	26 ff       	sbrs	r18, 6
    1494:	06 c0       	rjmp	.+12     	; 0x14a2 <vfprintf+0xa4>
    1496:	fa e0       	ldi	r31, 0x0A	; 10
    1498:	5f 9e       	mul	r5, r31
    149a:	30 0d       	add	r19, r0
    149c:	11 24       	eor	r1, r1
    149e:	53 2e       	mov	r5, r19
    14a0:	13 c0       	rjmp	.+38     	; 0x14c8 <vfprintf+0xca>
    14a2:	8a e0       	ldi	r24, 0x0A	; 10
    14a4:	38 9e       	mul	r3, r24
    14a6:	30 0d       	add	r19, r0
    14a8:	11 24       	eor	r1, r1
    14aa:	33 2e       	mov	r3, r19
    14ac:	20 62       	ori	r18, 0x20	; 32
    14ae:	0c c0       	rjmp	.+24     	; 0x14c8 <vfprintf+0xca>
    14b0:	8e 32       	cpi	r24, 0x2E	; 46
    14b2:	21 f4       	brne	.+8      	; 0x14bc <vfprintf+0xbe>
    14b4:	26 fd       	sbrc	r18, 6
    14b6:	6b c1       	rjmp	.+726    	; 0x178e <vfprintf+0x390>
    14b8:	20 64       	ori	r18, 0x40	; 64
    14ba:	06 c0       	rjmp	.+12     	; 0x14c8 <vfprintf+0xca>
    14bc:	8c 36       	cpi	r24, 0x6C	; 108
    14be:	11 f4       	brne	.+4      	; 0x14c4 <vfprintf+0xc6>
    14c0:	20 68       	ori	r18, 0x80	; 128
    14c2:	02 c0       	rjmp	.+4      	; 0x14c8 <vfprintf+0xca>
    14c4:	88 36       	cpi	r24, 0x68	; 104
    14c6:	41 f4       	brne	.+16     	; 0x14d8 <vfprintf+0xda>
    14c8:	f6 01       	movw	r30, r12
    14ca:	93 fd       	sbrc	r25, 3
    14cc:	85 91       	lpm	r24, Z+
    14ce:	93 ff       	sbrs	r25, 3
    14d0:	81 91       	ld	r24, Z+
    14d2:	6f 01       	movw	r12, r30
    14d4:	81 11       	cpse	r24, r1
    14d6:	c1 cf       	rjmp	.-126    	; 0x145a <vfprintf+0x5c>
    14d8:	98 2f       	mov	r25, r24
    14da:	9f 7d       	andi	r25, 0xDF	; 223
    14dc:	95 54       	subi	r25, 0x45	; 69
    14de:	93 30       	cpi	r25, 0x03	; 3
    14e0:	28 f4       	brcc	.+10     	; 0x14ec <vfprintf+0xee>
    14e2:	0c 5f       	subi	r16, 0xFC	; 252
    14e4:	1f 4f       	sbci	r17, 0xFF	; 255
    14e6:	ff e3       	ldi	r31, 0x3F	; 63
    14e8:	f9 83       	std	Y+1, r31	; 0x01
    14ea:	0d c0       	rjmp	.+26     	; 0x1506 <vfprintf+0x108>
    14ec:	83 36       	cpi	r24, 0x63	; 99
    14ee:	31 f0       	breq	.+12     	; 0x14fc <vfprintf+0xfe>
    14f0:	83 37       	cpi	r24, 0x73	; 115
    14f2:	71 f0       	breq	.+28     	; 0x1510 <vfprintf+0x112>
    14f4:	83 35       	cpi	r24, 0x53	; 83
    14f6:	09 f0       	breq	.+2      	; 0x14fa <vfprintf+0xfc>
    14f8:	5b c0       	rjmp	.+182    	; 0x15b0 <vfprintf+0x1b2>
    14fa:	22 c0       	rjmp	.+68     	; 0x1540 <vfprintf+0x142>
    14fc:	f8 01       	movw	r30, r16
    14fe:	80 81       	ld	r24, Z
    1500:	89 83       	std	Y+1, r24	; 0x01
    1502:	0e 5f       	subi	r16, 0xFE	; 254
    1504:	1f 4f       	sbci	r17, 0xFF	; 255
    1506:	44 24       	eor	r4, r4
    1508:	43 94       	inc	r4
    150a:	51 2c       	mov	r5, r1
    150c:	54 01       	movw	r10, r8
    150e:	15 c0       	rjmp	.+42     	; 0x153a <vfprintf+0x13c>
    1510:	38 01       	movw	r6, r16
    1512:	f2 e0       	ldi	r31, 0x02	; 2
    1514:	6f 0e       	add	r6, r31
    1516:	71 1c       	adc	r7, r1
    1518:	f8 01       	movw	r30, r16
    151a:	a0 80       	ld	r10, Z
    151c:	b1 80       	ldd	r11, Z+1	; 0x01
    151e:	26 ff       	sbrs	r18, 6
    1520:	03 c0       	rjmp	.+6      	; 0x1528 <vfprintf+0x12a>
    1522:	65 2d       	mov	r22, r5
    1524:	70 e0       	ldi	r23, 0x00	; 0
    1526:	02 c0       	rjmp	.+4      	; 0x152c <vfprintf+0x12e>
    1528:	6f ef       	ldi	r22, 0xFF	; 255
    152a:	7f ef       	ldi	r23, 0xFF	; 255
    152c:	c5 01       	movw	r24, r10
    152e:	2c 87       	std	Y+12, r18	; 0x0c
    1530:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <strnlen>
    1534:	2c 01       	movw	r4, r24
    1536:	83 01       	movw	r16, r6
    1538:	2c 85       	ldd	r18, Y+12	; 0x0c
    153a:	2f 77       	andi	r18, 0x7F	; 127
    153c:	22 2e       	mov	r2, r18
    153e:	17 c0       	rjmp	.+46     	; 0x156e <vfprintf+0x170>
    1540:	38 01       	movw	r6, r16
    1542:	f2 e0       	ldi	r31, 0x02	; 2
    1544:	6f 0e       	add	r6, r31
    1546:	71 1c       	adc	r7, r1
    1548:	f8 01       	movw	r30, r16
    154a:	a0 80       	ld	r10, Z
    154c:	b1 80       	ldd	r11, Z+1	; 0x01
    154e:	26 ff       	sbrs	r18, 6
    1550:	03 c0       	rjmp	.+6      	; 0x1558 <vfprintf+0x15a>
    1552:	65 2d       	mov	r22, r5
    1554:	70 e0       	ldi	r23, 0x00	; 0
    1556:	02 c0       	rjmp	.+4      	; 0x155c <vfprintf+0x15e>
    1558:	6f ef       	ldi	r22, 0xFF	; 255
    155a:	7f ef       	ldi	r23, 0xFF	; 255
    155c:	c5 01       	movw	r24, r10
    155e:	2c 87       	std	Y+12, r18	; 0x0c
    1560:	0e 94 14 0d 	call	0x1a28	; 0x1a28 <strnlen_P>
    1564:	2c 01       	movw	r4, r24
    1566:	2c 85       	ldd	r18, Y+12	; 0x0c
    1568:	20 68       	ori	r18, 0x80	; 128
    156a:	22 2e       	mov	r2, r18
    156c:	83 01       	movw	r16, r6
    156e:	23 fc       	sbrc	r2, 3
    1570:	1b c0       	rjmp	.+54     	; 0x15a8 <vfprintf+0x1aa>
    1572:	83 2d       	mov	r24, r3
    1574:	90 e0       	ldi	r25, 0x00	; 0
    1576:	48 16       	cp	r4, r24
    1578:	59 06       	cpc	r5, r25
    157a:	b0 f4       	brcc	.+44     	; 0x15a8 <vfprintf+0x1aa>
    157c:	b7 01       	movw	r22, r14
    157e:	80 e2       	ldi	r24, 0x20	; 32
    1580:	90 e0       	ldi	r25, 0x00	; 0
    1582:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <fputc>
    1586:	3a 94       	dec	r3
    1588:	f4 cf       	rjmp	.-24     	; 0x1572 <vfprintf+0x174>
    158a:	f5 01       	movw	r30, r10
    158c:	27 fc       	sbrc	r2, 7
    158e:	85 91       	lpm	r24, Z+
    1590:	27 fe       	sbrs	r2, 7
    1592:	81 91       	ld	r24, Z+
    1594:	5f 01       	movw	r10, r30
    1596:	b7 01       	movw	r22, r14
    1598:	90 e0       	ldi	r25, 0x00	; 0
    159a:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <fputc>
    159e:	31 10       	cpse	r3, r1
    15a0:	3a 94       	dec	r3
    15a2:	f1 e0       	ldi	r31, 0x01	; 1
    15a4:	4f 1a       	sub	r4, r31
    15a6:	51 08       	sbc	r5, r1
    15a8:	41 14       	cp	r4, r1
    15aa:	51 04       	cpc	r5, r1
    15ac:	71 f7       	brne	.-36     	; 0x158a <vfprintf+0x18c>
    15ae:	e5 c0       	rjmp	.+458    	; 0x177a <vfprintf+0x37c>
    15b0:	84 36       	cpi	r24, 0x64	; 100
    15b2:	11 f0       	breq	.+4      	; 0x15b8 <vfprintf+0x1ba>
    15b4:	89 36       	cpi	r24, 0x69	; 105
    15b6:	39 f5       	brne	.+78     	; 0x1606 <vfprintf+0x208>
    15b8:	f8 01       	movw	r30, r16
    15ba:	27 ff       	sbrs	r18, 7
    15bc:	07 c0       	rjmp	.+14     	; 0x15cc <vfprintf+0x1ce>
    15be:	60 81       	ld	r22, Z
    15c0:	71 81       	ldd	r23, Z+1	; 0x01
    15c2:	82 81       	ldd	r24, Z+2	; 0x02
    15c4:	93 81       	ldd	r25, Z+3	; 0x03
    15c6:	0c 5f       	subi	r16, 0xFC	; 252
    15c8:	1f 4f       	sbci	r17, 0xFF	; 255
    15ca:	08 c0       	rjmp	.+16     	; 0x15dc <vfprintf+0x1de>
    15cc:	60 81       	ld	r22, Z
    15ce:	71 81       	ldd	r23, Z+1	; 0x01
    15d0:	88 27       	eor	r24, r24
    15d2:	77 fd       	sbrc	r23, 7
    15d4:	80 95       	com	r24
    15d6:	98 2f       	mov	r25, r24
    15d8:	0e 5f       	subi	r16, 0xFE	; 254
    15da:	1f 4f       	sbci	r17, 0xFF	; 255
    15dc:	2f 76       	andi	r18, 0x6F	; 111
    15de:	b2 2e       	mov	r11, r18
    15e0:	97 ff       	sbrs	r25, 7
    15e2:	09 c0       	rjmp	.+18     	; 0x15f6 <vfprintf+0x1f8>
    15e4:	90 95       	com	r25
    15e6:	80 95       	com	r24
    15e8:	70 95       	com	r23
    15ea:	61 95       	neg	r22
    15ec:	7f 4f       	sbci	r23, 0xFF	; 255
    15ee:	8f 4f       	sbci	r24, 0xFF	; 255
    15f0:	9f 4f       	sbci	r25, 0xFF	; 255
    15f2:	20 68       	ori	r18, 0x80	; 128
    15f4:	b2 2e       	mov	r11, r18
    15f6:	2a e0       	ldi	r18, 0x0A	; 10
    15f8:	30 e0       	ldi	r19, 0x00	; 0
    15fa:	a4 01       	movw	r20, r8
    15fc:	0e 94 63 0d 	call	0x1ac6	; 0x1ac6 <__ultoa_invert>
    1600:	a8 2e       	mov	r10, r24
    1602:	a8 18       	sub	r10, r8
    1604:	44 c0       	rjmp	.+136    	; 0x168e <vfprintf+0x290>
    1606:	85 37       	cpi	r24, 0x75	; 117
    1608:	29 f4       	brne	.+10     	; 0x1614 <vfprintf+0x216>
    160a:	2f 7e       	andi	r18, 0xEF	; 239
    160c:	b2 2e       	mov	r11, r18
    160e:	2a e0       	ldi	r18, 0x0A	; 10
    1610:	30 e0       	ldi	r19, 0x00	; 0
    1612:	25 c0       	rjmp	.+74     	; 0x165e <vfprintf+0x260>
    1614:	f2 2f       	mov	r31, r18
    1616:	f9 7f       	andi	r31, 0xF9	; 249
    1618:	bf 2e       	mov	r11, r31
    161a:	8f 36       	cpi	r24, 0x6F	; 111
    161c:	c1 f0       	breq	.+48     	; 0x164e <vfprintf+0x250>
    161e:	18 f4       	brcc	.+6      	; 0x1626 <vfprintf+0x228>
    1620:	88 35       	cpi	r24, 0x58	; 88
    1622:	79 f0       	breq	.+30     	; 0x1642 <vfprintf+0x244>
    1624:	b4 c0       	rjmp	.+360    	; 0x178e <vfprintf+0x390>
    1626:	80 37       	cpi	r24, 0x70	; 112
    1628:	19 f0       	breq	.+6      	; 0x1630 <vfprintf+0x232>
    162a:	88 37       	cpi	r24, 0x78	; 120
    162c:	21 f0       	breq	.+8      	; 0x1636 <vfprintf+0x238>
    162e:	af c0       	rjmp	.+350    	; 0x178e <vfprintf+0x390>
    1630:	2f 2f       	mov	r18, r31
    1632:	20 61       	ori	r18, 0x10	; 16
    1634:	b2 2e       	mov	r11, r18
    1636:	b4 fe       	sbrs	r11, 4
    1638:	0d c0       	rjmp	.+26     	; 0x1654 <vfprintf+0x256>
    163a:	8b 2d       	mov	r24, r11
    163c:	84 60       	ori	r24, 0x04	; 4
    163e:	b8 2e       	mov	r11, r24
    1640:	09 c0       	rjmp	.+18     	; 0x1654 <vfprintf+0x256>
    1642:	24 ff       	sbrs	r18, 4
    1644:	0a c0       	rjmp	.+20     	; 0x165a <vfprintf+0x25c>
    1646:	9f 2f       	mov	r25, r31
    1648:	96 60       	ori	r25, 0x06	; 6
    164a:	b9 2e       	mov	r11, r25
    164c:	06 c0       	rjmp	.+12     	; 0x165a <vfprintf+0x25c>
    164e:	28 e0       	ldi	r18, 0x08	; 8
    1650:	30 e0       	ldi	r19, 0x00	; 0
    1652:	05 c0       	rjmp	.+10     	; 0x165e <vfprintf+0x260>
    1654:	20 e1       	ldi	r18, 0x10	; 16
    1656:	30 e0       	ldi	r19, 0x00	; 0
    1658:	02 c0       	rjmp	.+4      	; 0x165e <vfprintf+0x260>
    165a:	20 e1       	ldi	r18, 0x10	; 16
    165c:	32 e0       	ldi	r19, 0x02	; 2
    165e:	f8 01       	movw	r30, r16
    1660:	b7 fe       	sbrs	r11, 7
    1662:	07 c0       	rjmp	.+14     	; 0x1672 <vfprintf+0x274>
    1664:	60 81       	ld	r22, Z
    1666:	71 81       	ldd	r23, Z+1	; 0x01
    1668:	82 81       	ldd	r24, Z+2	; 0x02
    166a:	93 81       	ldd	r25, Z+3	; 0x03
    166c:	0c 5f       	subi	r16, 0xFC	; 252
    166e:	1f 4f       	sbci	r17, 0xFF	; 255
    1670:	06 c0       	rjmp	.+12     	; 0x167e <vfprintf+0x280>
    1672:	60 81       	ld	r22, Z
    1674:	71 81       	ldd	r23, Z+1	; 0x01
    1676:	80 e0       	ldi	r24, 0x00	; 0
    1678:	90 e0       	ldi	r25, 0x00	; 0
    167a:	0e 5f       	subi	r16, 0xFE	; 254
    167c:	1f 4f       	sbci	r17, 0xFF	; 255
    167e:	a4 01       	movw	r20, r8
    1680:	0e 94 63 0d 	call	0x1ac6	; 0x1ac6 <__ultoa_invert>
    1684:	a8 2e       	mov	r10, r24
    1686:	a8 18       	sub	r10, r8
    1688:	fb 2d       	mov	r31, r11
    168a:	ff 77       	andi	r31, 0x7F	; 127
    168c:	bf 2e       	mov	r11, r31
    168e:	b6 fe       	sbrs	r11, 6
    1690:	0b c0       	rjmp	.+22     	; 0x16a8 <vfprintf+0x2aa>
    1692:	2b 2d       	mov	r18, r11
    1694:	2e 7f       	andi	r18, 0xFE	; 254
    1696:	a5 14       	cp	r10, r5
    1698:	50 f4       	brcc	.+20     	; 0x16ae <vfprintf+0x2b0>
    169a:	b4 fe       	sbrs	r11, 4
    169c:	0a c0       	rjmp	.+20     	; 0x16b2 <vfprintf+0x2b4>
    169e:	b2 fc       	sbrc	r11, 2
    16a0:	08 c0       	rjmp	.+16     	; 0x16b2 <vfprintf+0x2b4>
    16a2:	2b 2d       	mov	r18, r11
    16a4:	2e 7e       	andi	r18, 0xEE	; 238
    16a6:	05 c0       	rjmp	.+10     	; 0x16b2 <vfprintf+0x2b4>
    16a8:	7a 2c       	mov	r7, r10
    16aa:	2b 2d       	mov	r18, r11
    16ac:	03 c0       	rjmp	.+6      	; 0x16b4 <vfprintf+0x2b6>
    16ae:	7a 2c       	mov	r7, r10
    16b0:	01 c0       	rjmp	.+2      	; 0x16b4 <vfprintf+0x2b6>
    16b2:	75 2c       	mov	r7, r5
    16b4:	24 ff       	sbrs	r18, 4
    16b6:	0d c0       	rjmp	.+26     	; 0x16d2 <vfprintf+0x2d4>
    16b8:	fe 01       	movw	r30, r28
    16ba:	ea 0d       	add	r30, r10
    16bc:	f1 1d       	adc	r31, r1
    16be:	80 81       	ld	r24, Z
    16c0:	80 33       	cpi	r24, 0x30	; 48
    16c2:	11 f4       	brne	.+4      	; 0x16c8 <vfprintf+0x2ca>
    16c4:	29 7e       	andi	r18, 0xE9	; 233
    16c6:	09 c0       	rjmp	.+18     	; 0x16da <vfprintf+0x2dc>
    16c8:	22 ff       	sbrs	r18, 2
    16ca:	06 c0       	rjmp	.+12     	; 0x16d8 <vfprintf+0x2da>
    16cc:	73 94       	inc	r7
    16ce:	73 94       	inc	r7
    16d0:	04 c0       	rjmp	.+8      	; 0x16da <vfprintf+0x2dc>
    16d2:	82 2f       	mov	r24, r18
    16d4:	86 78       	andi	r24, 0x86	; 134
    16d6:	09 f0       	breq	.+2      	; 0x16da <vfprintf+0x2dc>
    16d8:	73 94       	inc	r7
    16da:	23 fd       	sbrc	r18, 3
    16dc:	13 c0       	rjmp	.+38     	; 0x1704 <vfprintf+0x306>
    16de:	20 ff       	sbrs	r18, 0
    16e0:	06 c0       	rjmp	.+12     	; 0x16ee <vfprintf+0x2f0>
    16e2:	5a 2c       	mov	r5, r10
    16e4:	73 14       	cp	r7, r3
    16e6:	18 f4       	brcc	.+6      	; 0x16ee <vfprintf+0x2f0>
    16e8:	53 0c       	add	r5, r3
    16ea:	57 18       	sub	r5, r7
    16ec:	73 2c       	mov	r7, r3
    16ee:	73 14       	cp	r7, r3
    16f0:	68 f4       	brcc	.+26     	; 0x170c <vfprintf+0x30e>
    16f2:	b7 01       	movw	r22, r14
    16f4:	80 e2       	ldi	r24, 0x20	; 32
    16f6:	90 e0       	ldi	r25, 0x00	; 0
    16f8:	2c 87       	std	Y+12, r18	; 0x0c
    16fa:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <fputc>
    16fe:	73 94       	inc	r7
    1700:	2c 85       	ldd	r18, Y+12	; 0x0c
    1702:	f5 cf       	rjmp	.-22     	; 0x16ee <vfprintf+0x2f0>
    1704:	73 14       	cp	r7, r3
    1706:	10 f4       	brcc	.+4      	; 0x170c <vfprintf+0x30e>
    1708:	37 18       	sub	r3, r7
    170a:	01 c0       	rjmp	.+2      	; 0x170e <vfprintf+0x310>
    170c:	31 2c       	mov	r3, r1
    170e:	24 ff       	sbrs	r18, 4
    1710:	12 c0       	rjmp	.+36     	; 0x1736 <vfprintf+0x338>
    1712:	b7 01       	movw	r22, r14
    1714:	80 e3       	ldi	r24, 0x30	; 48
    1716:	90 e0       	ldi	r25, 0x00	; 0
    1718:	2c 87       	std	Y+12, r18	; 0x0c
    171a:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <fputc>
    171e:	2c 85       	ldd	r18, Y+12	; 0x0c
    1720:	22 ff       	sbrs	r18, 2
    1722:	17 c0       	rjmp	.+46     	; 0x1752 <vfprintf+0x354>
    1724:	21 ff       	sbrs	r18, 1
    1726:	03 c0       	rjmp	.+6      	; 0x172e <vfprintf+0x330>
    1728:	88 e5       	ldi	r24, 0x58	; 88
    172a:	90 e0       	ldi	r25, 0x00	; 0
    172c:	02 c0       	rjmp	.+4      	; 0x1732 <vfprintf+0x334>
    172e:	88 e7       	ldi	r24, 0x78	; 120
    1730:	90 e0       	ldi	r25, 0x00	; 0
    1732:	b7 01       	movw	r22, r14
    1734:	0c c0       	rjmp	.+24     	; 0x174e <vfprintf+0x350>
    1736:	82 2f       	mov	r24, r18
    1738:	86 78       	andi	r24, 0x86	; 134
    173a:	59 f0       	breq	.+22     	; 0x1752 <vfprintf+0x354>
    173c:	21 fd       	sbrc	r18, 1
    173e:	02 c0       	rjmp	.+4      	; 0x1744 <vfprintf+0x346>
    1740:	80 e2       	ldi	r24, 0x20	; 32
    1742:	01 c0       	rjmp	.+2      	; 0x1746 <vfprintf+0x348>
    1744:	8b e2       	ldi	r24, 0x2B	; 43
    1746:	27 fd       	sbrc	r18, 7
    1748:	8d e2       	ldi	r24, 0x2D	; 45
    174a:	b7 01       	movw	r22, r14
    174c:	90 e0       	ldi	r25, 0x00	; 0
    174e:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <fputc>
    1752:	a5 14       	cp	r10, r5
    1754:	38 f4       	brcc	.+14     	; 0x1764 <vfprintf+0x366>
    1756:	b7 01       	movw	r22, r14
    1758:	80 e3       	ldi	r24, 0x30	; 48
    175a:	90 e0       	ldi	r25, 0x00	; 0
    175c:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <fputc>
    1760:	5a 94       	dec	r5
    1762:	f7 cf       	rjmp	.-18     	; 0x1752 <vfprintf+0x354>
    1764:	aa 94       	dec	r10
    1766:	f4 01       	movw	r30, r8
    1768:	ea 0d       	add	r30, r10
    176a:	f1 1d       	adc	r31, r1
    176c:	80 81       	ld	r24, Z
    176e:	b7 01       	movw	r22, r14
    1770:	90 e0       	ldi	r25, 0x00	; 0
    1772:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <fputc>
    1776:	a1 10       	cpse	r10, r1
    1778:	f5 cf       	rjmp	.-22     	; 0x1764 <vfprintf+0x366>
    177a:	33 20       	and	r3, r3
    177c:	09 f4       	brne	.+2      	; 0x1780 <vfprintf+0x382>
    177e:	51 ce       	rjmp	.-862    	; 0x1422 <vfprintf+0x24>
    1780:	b7 01       	movw	r22, r14
    1782:	80 e2       	ldi	r24, 0x20	; 32
    1784:	90 e0       	ldi	r25, 0x00	; 0
    1786:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <fputc>
    178a:	3a 94       	dec	r3
    178c:	f6 cf       	rjmp	.-20     	; 0x177a <vfprintf+0x37c>
    178e:	f7 01       	movw	r30, r14
    1790:	86 81       	ldd	r24, Z+6	; 0x06
    1792:	97 81       	ldd	r25, Z+7	; 0x07
    1794:	02 c0       	rjmp	.+4      	; 0x179a <vfprintf+0x39c>
    1796:	8f ef       	ldi	r24, 0xFF	; 255
    1798:	9f ef       	ldi	r25, 0xFF	; 255
    179a:	2c 96       	adiw	r28, 0x0c	; 12
    179c:	e2 e1       	ldi	r30, 0x12	; 18
    179e:	0c 94 dd 0d 	jmp	0x1bba	; 0x1bba <__epilogue_restores__>

000017a2 <calloc>:
    17a2:	0f 93       	push	r16
    17a4:	1f 93       	push	r17
    17a6:	cf 93       	push	r28
    17a8:	df 93       	push	r29
    17aa:	86 9f       	mul	r24, r22
    17ac:	80 01       	movw	r16, r0
    17ae:	87 9f       	mul	r24, r23
    17b0:	10 0d       	add	r17, r0
    17b2:	96 9f       	mul	r25, r22
    17b4:	10 0d       	add	r17, r0
    17b6:	11 24       	eor	r1, r1
    17b8:	c8 01       	movw	r24, r16
    17ba:	0e 94 ed 0b 	call	0x17da	; 0x17da <malloc>
    17be:	ec 01       	movw	r28, r24
    17c0:	00 97       	sbiw	r24, 0x00	; 0
    17c2:	29 f0       	breq	.+10     	; 0x17ce <calloc+0x2c>
    17c4:	a8 01       	movw	r20, r16
    17c6:	60 e0       	ldi	r22, 0x00	; 0
    17c8:	70 e0       	ldi	r23, 0x00	; 0
    17ca:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <memset>
    17ce:	ce 01       	movw	r24, r28
    17d0:	df 91       	pop	r29
    17d2:	cf 91       	pop	r28
    17d4:	1f 91       	pop	r17
    17d6:	0f 91       	pop	r16
    17d8:	08 95       	ret

000017da <malloc>:
    17da:	cf 93       	push	r28
    17dc:	df 93       	push	r29
    17de:	82 30       	cpi	r24, 0x02	; 2
    17e0:	91 05       	cpc	r25, r1
    17e2:	10 f4       	brcc	.+4      	; 0x17e8 <malloc+0xe>
    17e4:	82 e0       	ldi	r24, 0x02	; 2
    17e6:	90 e0       	ldi	r25, 0x00	; 0
    17e8:	e0 91 2f 04 	lds	r30, 0x042F
    17ec:	f0 91 30 04 	lds	r31, 0x0430
    17f0:	20 e0       	ldi	r18, 0x00	; 0
    17f2:	30 e0       	ldi	r19, 0x00	; 0
    17f4:	a0 e0       	ldi	r26, 0x00	; 0
    17f6:	b0 e0       	ldi	r27, 0x00	; 0
    17f8:	30 97       	sbiw	r30, 0x00	; 0
    17fa:	39 f1       	breq	.+78     	; 0x184a <malloc+0x70>
    17fc:	40 81       	ld	r20, Z
    17fe:	51 81       	ldd	r21, Z+1	; 0x01
    1800:	48 17       	cp	r20, r24
    1802:	59 07       	cpc	r21, r25
    1804:	b8 f0       	brcs	.+46     	; 0x1834 <malloc+0x5a>
    1806:	48 17       	cp	r20, r24
    1808:	59 07       	cpc	r21, r25
    180a:	71 f4       	brne	.+28     	; 0x1828 <malloc+0x4e>
    180c:	82 81       	ldd	r24, Z+2	; 0x02
    180e:	93 81       	ldd	r25, Z+3	; 0x03
    1810:	10 97       	sbiw	r26, 0x00	; 0
    1812:	29 f0       	breq	.+10     	; 0x181e <malloc+0x44>
    1814:	13 96       	adiw	r26, 0x03	; 3
    1816:	9c 93       	st	X, r25
    1818:	8e 93       	st	-X, r24
    181a:	12 97       	sbiw	r26, 0x02	; 2
    181c:	2c c0       	rjmp	.+88     	; 0x1876 <malloc+0x9c>
    181e:	90 93 30 04 	sts	0x0430, r25
    1822:	80 93 2f 04 	sts	0x042F, r24
    1826:	27 c0       	rjmp	.+78     	; 0x1876 <malloc+0x9c>
    1828:	21 15       	cp	r18, r1
    182a:	31 05       	cpc	r19, r1
    182c:	31 f0       	breq	.+12     	; 0x183a <malloc+0x60>
    182e:	42 17       	cp	r20, r18
    1830:	53 07       	cpc	r21, r19
    1832:	18 f0       	brcs	.+6      	; 0x183a <malloc+0x60>
    1834:	a9 01       	movw	r20, r18
    1836:	db 01       	movw	r26, r22
    1838:	01 c0       	rjmp	.+2      	; 0x183c <malloc+0x62>
    183a:	ef 01       	movw	r28, r30
    183c:	9a 01       	movw	r18, r20
    183e:	bd 01       	movw	r22, r26
    1840:	df 01       	movw	r26, r30
    1842:	02 80       	ldd	r0, Z+2	; 0x02
    1844:	f3 81       	ldd	r31, Z+3	; 0x03
    1846:	e0 2d       	mov	r30, r0
    1848:	d7 cf       	rjmp	.-82     	; 0x17f8 <malloc+0x1e>
    184a:	21 15       	cp	r18, r1
    184c:	31 05       	cpc	r19, r1
    184e:	f9 f0       	breq	.+62     	; 0x188e <malloc+0xb4>
    1850:	28 1b       	sub	r18, r24
    1852:	39 0b       	sbc	r19, r25
    1854:	24 30       	cpi	r18, 0x04	; 4
    1856:	31 05       	cpc	r19, r1
    1858:	80 f4       	brcc	.+32     	; 0x187a <malloc+0xa0>
    185a:	8a 81       	ldd	r24, Y+2	; 0x02
    185c:	9b 81       	ldd	r25, Y+3	; 0x03
    185e:	61 15       	cp	r22, r1
    1860:	71 05       	cpc	r23, r1
    1862:	21 f0       	breq	.+8      	; 0x186c <malloc+0x92>
    1864:	fb 01       	movw	r30, r22
    1866:	93 83       	std	Z+3, r25	; 0x03
    1868:	82 83       	std	Z+2, r24	; 0x02
    186a:	04 c0       	rjmp	.+8      	; 0x1874 <malloc+0x9a>
    186c:	90 93 30 04 	sts	0x0430, r25
    1870:	80 93 2f 04 	sts	0x042F, r24
    1874:	fe 01       	movw	r30, r28
    1876:	32 96       	adiw	r30, 0x02	; 2
    1878:	44 c0       	rjmp	.+136    	; 0x1902 <malloc+0x128>
    187a:	fe 01       	movw	r30, r28
    187c:	e2 0f       	add	r30, r18
    187e:	f3 1f       	adc	r31, r19
    1880:	81 93       	st	Z+, r24
    1882:	91 93       	st	Z+, r25
    1884:	22 50       	subi	r18, 0x02	; 2
    1886:	31 09       	sbc	r19, r1
    1888:	39 83       	std	Y+1, r19	; 0x01
    188a:	28 83       	st	Y, r18
    188c:	3a c0       	rjmp	.+116    	; 0x1902 <malloc+0x128>
    188e:	20 91 2d 04 	lds	r18, 0x042D
    1892:	30 91 2e 04 	lds	r19, 0x042E
    1896:	23 2b       	or	r18, r19
    1898:	41 f4       	brne	.+16     	; 0x18aa <malloc+0xd0>
    189a:	20 91 02 01 	lds	r18, 0x0102
    189e:	30 91 03 01 	lds	r19, 0x0103
    18a2:	30 93 2e 04 	sts	0x042E, r19
    18a6:	20 93 2d 04 	sts	0x042D, r18
    18aa:	20 91 00 01 	lds	r18, 0x0100
    18ae:	30 91 01 01 	lds	r19, 0x0101
    18b2:	21 15       	cp	r18, r1
    18b4:	31 05       	cpc	r19, r1
    18b6:	41 f4       	brne	.+16     	; 0x18c8 <malloc+0xee>
    18b8:	2d b7       	in	r18, 0x3d	; 61
    18ba:	3e b7       	in	r19, 0x3e	; 62
    18bc:	40 91 04 01 	lds	r20, 0x0104
    18c0:	50 91 05 01 	lds	r21, 0x0105
    18c4:	24 1b       	sub	r18, r20
    18c6:	35 0b       	sbc	r19, r21
    18c8:	e0 91 2d 04 	lds	r30, 0x042D
    18cc:	f0 91 2e 04 	lds	r31, 0x042E
    18d0:	e2 17       	cp	r30, r18
    18d2:	f3 07       	cpc	r31, r19
    18d4:	a0 f4       	brcc	.+40     	; 0x18fe <malloc+0x124>
    18d6:	2e 1b       	sub	r18, r30
    18d8:	3f 0b       	sbc	r19, r31
    18da:	28 17       	cp	r18, r24
    18dc:	39 07       	cpc	r19, r25
    18de:	78 f0       	brcs	.+30     	; 0x18fe <malloc+0x124>
    18e0:	ac 01       	movw	r20, r24
    18e2:	4e 5f       	subi	r20, 0xFE	; 254
    18e4:	5f 4f       	sbci	r21, 0xFF	; 255
    18e6:	24 17       	cp	r18, r20
    18e8:	35 07       	cpc	r19, r21
    18ea:	48 f0       	brcs	.+18     	; 0x18fe <malloc+0x124>
    18ec:	4e 0f       	add	r20, r30
    18ee:	5f 1f       	adc	r21, r31
    18f0:	50 93 2e 04 	sts	0x042E, r21
    18f4:	40 93 2d 04 	sts	0x042D, r20
    18f8:	81 93       	st	Z+, r24
    18fa:	91 93       	st	Z+, r25
    18fc:	02 c0       	rjmp	.+4      	; 0x1902 <malloc+0x128>
    18fe:	e0 e0       	ldi	r30, 0x00	; 0
    1900:	f0 e0       	ldi	r31, 0x00	; 0
    1902:	cf 01       	movw	r24, r30
    1904:	df 91       	pop	r29
    1906:	cf 91       	pop	r28
    1908:	08 95       	ret

0000190a <free>:
    190a:	cf 93       	push	r28
    190c:	df 93       	push	r29
    190e:	00 97       	sbiw	r24, 0x00	; 0
    1910:	09 f4       	brne	.+2      	; 0x1914 <free+0xa>
    1912:	87 c0       	rjmp	.+270    	; 0x1a22 <free+0x118>
    1914:	fc 01       	movw	r30, r24
    1916:	32 97       	sbiw	r30, 0x02	; 2
    1918:	13 82       	std	Z+3, r1	; 0x03
    191a:	12 82       	std	Z+2, r1	; 0x02
    191c:	c0 91 2f 04 	lds	r28, 0x042F
    1920:	d0 91 30 04 	lds	r29, 0x0430
    1924:	20 97       	sbiw	r28, 0x00	; 0
    1926:	81 f4       	brne	.+32     	; 0x1948 <free+0x3e>
    1928:	20 81       	ld	r18, Z
    192a:	31 81       	ldd	r19, Z+1	; 0x01
    192c:	28 0f       	add	r18, r24
    192e:	39 1f       	adc	r19, r25
    1930:	80 91 2d 04 	lds	r24, 0x042D
    1934:	90 91 2e 04 	lds	r25, 0x042E
    1938:	82 17       	cp	r24, r18
    193a:	93 07       	cpc	r25, r19
    193c:	79 f5       	brne	.+94     	; 0x199c <free+0x92>
    193e:	f0 93 2e 04 	sts	0x042E, r31
    1942:	e0 93 2d 04 	sts	0x042D, r30
    1946:	6d c0       	rjmp	.+218    	; 0x1a22 <free+0x118>
    1948:	de 01       	movw	r26, r28
    194a:	20 e0       	ldi	r18, 0x00	; 0
    194c:	30 e0       	ldi	r19, 0x00	; 0
    194e:	ae 17       	cp	r26, r30
    1950:	bf 07       	cpc	r27, r31
    1952:	50 f4       	brcc	.+20     	; 0x1968 <free+0x5e>
    1954:	12 96       	adiw	r26, 0x02	; 2
    1956:	4d 91       	ld	r20, X+
    1958:	5c 91       	ld	r21, X
    195a:	13 97       	sbiw	r26, 0x03	; 3
    195c:	9d 01       	movw	r18, r26
    195e:	41 15       	cp	r20, r1
    1960:	51 05       	cpc	r21, r1
    1962:	09 f1       	breq	.+66     	; 0x19a6 <free+0x9c>
    1964:	da 01       	movw	r26, r20
    1966:	f3 cf       	rjmp	.-26     	; 0x194e <free+0x44>
    1968:	b3 83       	std	Z+3, r27	; 0x03
    196a:	a2 83       	std	Z+2, r26	; 0x02
    196c:	40 81       	ld	r20, Z
    196e:	51 81       	ldd	r21, Z+1	; 0x01
    1970:	84 0f       	add	r24, r20
    1972:	95 1f       	adc	r25, r21
    1974:	8a 17       	cp	r24, r26
    1976:	9b 07       	cpc	r25, r27
    1978:	71 f4       	brne	.+28     	; 0x1996 <free+0x8c>
    197a:	8d 91       	ld	r24, X+
    197c:	9c 91       	ld	r25, X
    197e:	11 97       	sbiw	r26, 0x01	; 1
    1980:	84 0f       	add	r24, r20
    1982:	95 1f       	adc	r25, r21
    1984:	02 96       	adiw	r24, 0x02	; 2
    1986:	91 83       	std	Z+1, r25	; 0x01
    1988:	80 83       	st	Z, r24
    198a:	12 96       	adiw	r26, 0x02	; 2
    198c:	8d 91       	ld	r24, X+
    198e:	9c 91       	ld	r25, X
    1990:	13 97       	sbiw	r26, 0x03	; 3
    1992:	93 83       	std	Z+3, r25	; 0x03
    1994:	82 83       	std	Z+2, r24	; 0x02
    1996:	21 15       	cp	r18, r1
    1998:	31 05       	cpc	r19, r1
    199a:	29 f4       	brne	.+10     	; 0x19a6 <free+0x9c>
    199c:	f0 93 30 04 	sts	0x0430, r31
    19a0:	e0 93 2f 04 	sts	0x042F, r30
    19a4:	3e c0       	rjmp	.+124    	; 0x1a22 <free+0x118>
    19a6:	d9 01       	movw	r26, r18
    19a8:	13 96       	adiw	r26, 0x03	; 3
    19aa:	fc 93       	st	X, r31
    19ac:	ee 93       	st	-X, r30
    19ae:	12 97       	sbiw	r26, 0x02	; 2
    19b0:	4d 91       	ld	r20, X+
    19b2:	5d 91       	ld	r21, X+
    19b4:	a4 0f       	add	r26, r20
    19b6:	b5 1f       	adc	r27, r21
    19b8:	ea 17       	cp	r30, r26
    19ba:	fb 07       	cpc	r31, r27
    19bc:	79 f4       	brne	.+30     	; 0x19dc <free+0xd2>
    19be:	80 81       	ld	r24, Z
    19c0:	91 81       	ldd	r25, Z+1	; 0x01
    19c2:	84 0f       	add	r24, r20
    19c4:	95 1f       	adc	r25, r21
    19c6:	02 96       	adiw	r24, 0x02	; 2
    19c8:	d9 01       	movw	r26, r18
    19ca:	11 96       	adiw	r26, 0x01	; 1
    19cc:	9c 93       	st	X, r25
    19ce:	8e 93       	st	-X, r24
    19d0:	82 81       	ldd	r24, Z+2	; 0x02
    19d2:	93 81       	ldd	r25, Z+3	; 0x03
    19d4:	13 96       	adiw	r26, 0x03	; 3
    19d6:	9c 93       	st	X, r25
    19d8:	8e 93       	st	-X, r24
    19da:	12 97       	sbiw	r26, 0x02	; 2
    19dc:	e0 e0       	ldi	r30, 0x00	; 0
    19de:	f0 e0       	ldi	r31, 0x00	; 0
    19e0:	8a 81       	ldd	r24, Y+2	; 0x02
    19e2:	9b 81       	ldd	r25, Y+3	; 0x03
    19e4:	00 97       	sbiw	r24, 0x00	; 0
    19e6:	19 f0       	breq	.+6      	; 0x19ee <free+0xe4>
    19e8:	fe 01       	movw	r30, r28
    19ea:	ec 01       	movw	r28, r24
    19ec:	f9 cf       	rjmp	.-14     	; 0x19e0 <free+0xd6>
    19ee:	ce 01       	movw	r24, r28
    19f0:	02 96       	adiw	r24, 0x02	; 2
    19f2:	28 81       	ld	r18, Y
    19f4:	39 81       	ldd	r19, Y+1	; 0x01
    19f6:	82 0f       	add	r24, r18
    19f8:	93 1f       	adc	r25, r19
    19fa:	20 91 2d 04 	lds	r18, 0x042D
    19fe:	30 91 2e 04 	lds	r19, 0x042E
    1a02:	28 17       	cp	r18, r24
    1a04:	39 07       	cpc	r19, r25
    1a06:	69 f4       	brne	.+26     	; 0x1a22 <free+0x118>
    1a08:	30 97       	sbiw	r30, 0x00	; 0
    1a0a:	29 f4       	brne	.+10     	; 0x1a16 <free+0x10c>
    1a0c:	10 92 30 04 	sts	0x0430, r1
    1a10:	10 92 2f 04 	sts	0x042F, r1
    1a14:	02 c0       	rjmp	.+4      	; 0x1a1a <free+0x110>
    1a16:	13 82       	std	Z+3, r1	; 0x03
    1a18:	12 82       	std	Z+2, r1	; 0x02
    1a1a:	d0 93 2e 04 	sts	0x042E, r29
    1a1e:	c0 93 2d 04 	sts	0x042D, r28
    1a22:	df 91       	pop	r29
    1a24:	cf 91       	pop	r28
    1a26:	08 95       	ret

00001a28 <strnlen_P>:
    1a28:	fc 01       	movw	r30, r24
    1a2a:	05 90       	lpm	r0, Z+
    1a2c:	61 50       	subi	r22, 0x01	; 1
    1a2e:	70 40       	sbci	r23, 0x00	; 0
    1a30:	01 10       	cpse	r0, r1
    1a32:	d8 f7       	brcc	.-10     	; 0x1a2a <strnlen_P+0x2>
    1a34:	80 95       	com	r24
    1a36:	90 95       	com	r25
    1a38:	8e 0f       	add	r24, r30
    1a3a:	9f 1f       	adc	r25, r31
    1a3c:	08 95       	ret

00001a3e <memset>:
    1a3e:	dc 01       	movw	r26, r24
    1a40:	01 c0       	rjmp	.+2      	; 0x1a44 <memset+0x6>
    1a42:	6d 93       	st	X+, r22
    1a44:	41 50       	subi	r20, 0x01	; 1
    1a46:	50 40       	sbci	r21, 0x00	; 0
    1a48:	e0 f7       	brcc	.-8      	; 0x1a42 <memset+0x4>
    1a4a:	08 95       	ret

00001a4c <strnlen>:
    1a4c:	fc 01       	movw	r30, r24
    1a4e:	61 50       	subi	r22, 0x01	; 1
    1a50:	70 40       	sbci	r23, 0x00	; 0
    1a52:	01 90       	ld	r0, Z+
    1a54:	01 10       	cpse	r0, r1
    1a56:	d8 f7       	brcc	.-10     	; 0x1a4e <strnlen+0x2>
    1a58:	80 95       	com	r24
    1a5a:	90 95       	com	r25
    1a5c:	8e 0f       	add	r24, r30
    1a5e:	9f 1f       	adc	r25, r31
    1a60:	08 95       	ret

00001a62 <fputc>:
    1a62:	0f 93       	push	r16
    1a64:	1f 93       	push	r17
    1a66:	cf 93       	push	r28
    1a68:	df 93       	push	r29
    1a6a:	18 2f       	mov	r17, r24
    1a6c:	09 2f       	mov	r16, r25
    1a6e:	eb 01       	movw	r28, r22
    1a70:	8b 81       	ldd	r24, Y+3	; 0x03
    1a72:	81 fd       	sbrc	r24, 1
    1a74:	03 c0       	rjmp	.+6      	; 0x1a7c <fputc+0x1a>
    1a76:	8f ef       	ldi	r24, 0xFF	; 255
    1a78:	9f ef       	ldi	r25, 0xFF	; 255
    1a7a:	20 c0       	rjmp	.+64     	; 0x1abc <fputc+0x5a>
    1a7c:	82 ff       	sbrs	r24, 2
    1a7e:	10 c0       	rjmp	.+32     	; 0x1aa0 <fputc+0x3e>
    1a80:	4e 81       	ldd	r20, Y+6	; 0x06
    1a82:	5f 81       	ldd	r21, Y+7	; 0x07
    1a84:	2c 81       	ldd	r18, Y+4	; 0x04
    1a86:	3d 81       	ldd	r19, Y+5	; 0x05
    1a88:	42 17       	cp	r20, r18
    1a8a:	53 07       	cpc	r21, r19
    1a8c:	7c f4       	brge	.+30     	; 0x1aac <fputc+0x4a>
    1a8e:	e8 81       	ld	r30, Y
    1a90:	f9 81       	ldd	r31, Y+1	; 0x01
    1a92:	9f 01       	movw	r18, r30
    1a94:	2f 5f       	subi	r18, 0xFF	; 255
    1a96:	3f 4f       	sbci	r19, 0xFF	; 255
    1a98:	39 83       	std	Y+1, r19	; 0x01
    1a9a:	28 83       	st	Y, r18
    1a9c:	10 83       	st	Z, r17
    1a9e:	06 c0       	rjmp	.+12     	; 0x1aac <fputc+0x4a>
    1aa0:	e8 85       	ldd	r30, Y+8	; 0x08
    1aa2:	f9 85       	ldd	r31, Y+9	; 0x09
    1aa4:	81 2f       	mov	r24, r17
    1aa6:	09 95       	icall
    1aa8:	89 2b       	or	r24, r25
    1aaa:	29 f7       	brne	.-54     	; 0x1a76 <fputc+0x14>
    1aac:	2e 81       	ldd	r18, Y+6	; 0x06
    1aae:	3f 81       	ldd	r19, Y+7	; 0x07
    1ab0:	2f 5f       	subi	r18, 0xFF	; 255
    1ab2:	3f 4f       	sbci	r19, 0xFF	; 255
    1ab4:	3f 83       	std	Y+7, r19	; 0x07
    1ab6:	2e 83       	std	Y+6, r18	; 0x06
    1ab8:	81 2f       	mov	r24, r17
    1aba:	90 2f       	mov	r25, r16
    1abc:	df 91       	pop	r29
    1abe:	cf 91       	pop	r28
    1ac0:	1f 91       	pop	r17
    1ac2:	0f 91       	pop	r16
    1ac4:	08 95       	ret

00001ac6 <__ultoa_invert>:
    1ac6:	fa 01       	movw	r30, r20
    1ac8:	aa 27       	eor	r26, r26
    1aca:	28 30       	cpi	r18, 0x08	; 8
    1acc:	51 f1       	breq	.+84     	; 0x1b22 <__ultoa_invert+0x5c>
    1ace:	20 31       	cpi	r18, 0x10	; 16
    1ad0:	81 f1       	breq	.+96     	; 0x1b32 <__ultoa_invert+0x6c>
    1ad2:	e8 94       	clt
    1ad4:	6f 93       	push	r22
    1ad6:	6e 7f       	andi	r22, 0xFE	; 254
    1ad8:	6e 5f       	subi	r22, 0xFE	; 254
    1ada:	7f 4f       	sbci	r23, 0xFF	; 255
    1adc:	8f 4f       	sbci	r24, 0xFF	; 255
    1ade:	9f 4f       	sbci	r25, 0xFF	; 255
    1ae0:	af 4f       	sbci	r26, 0xFF	; 255
    1ae2:	b1 e0       	ldi	r27, 0x01	; 1
    1ae4:	3e d0       	rcall	.+124    	; 0x1b62 <__ultoa_invert+0x9c>
    1ae6:	b4 e0       	ldi	r27, 0x04	; 4
    1ae8:	3c d0       	rcall	.+120    	; 0x1b62 <__ultoa_invert+0x9c>
    1aea:	67 0f       	add	r22, r23
    1aec:	78 1f       	adc	r23, r24
    1aee:	89 1f       	adc	r24, r25
    1af0:	9a 1f       	adc	r25, r26
    1af2:	a1 1d       	adc	r26, r1
    1af4:	68 0f       	add	r22, r24
    1af6:	79 1f       	adc	r23, r25
    1af8:	8a 1f       	adc	r24, r26
    1afa:	91 1d       	adc	r25, r1
    1afc:	a1 1d       	adc	r26, r1
    1afe:	6a 0f       	add	r22, r26
    1b00:	71 1d       	adc	r23, r1
    1b02:	81 1d       	adc	r24, r1
    1b04:	91 1d       	adc	r25, r1
    1b06:	a1 1d       	adc	r26, r1
    1b08:	20 d0       	rcall	.+64     	; 0x1b4a <__ultoa_invert+0x84>
    1b0a:	09 f4       	brne	.+2      	; 0x1b0e <__ultoa_invert+0x48>
    1b0c:	68 94       	set
    1b0e:	3f 91       	pop	r19
    1b10:	2a e0       	ldi	r18, 0x0A	; 10
    1b12:	26 9f       	mul	r18, r22
    1b14:	11 24       	eor	r1, r1
    1b16:	30 19       	sub	r19, r0
    1b18:	30 5d       	subi	r19, 0xD0	; 208
    1b1a:	31 93       	st	Z+, r19
    1b1c:	de f6       	brtc	.-74     	; 0x1ad4 <__ultoa_invert+0xe>
    1b1e:	cf 01       	movw	r24, r30
    1b20:	08 95       	ret
    1b22:	46 2f       	mov	r20, r22
    1b24:	47 70       	andi	r20, 0x07	; 7
    1b26:	40 5d       	subi	r20, 0xD0	; 208
    1b28:	41 93       	st	Z+, r20
    1b2a:	b3 e0       	ldi	r27, 0x03	; 3
    1b2c:	0f d0       	rcall	.+30     	; 0x1b4c <__ultoa_invert+0x86>
    1b2e:	c9 f7       	brne	.-14     	; 0x1b22 <__ultoa_invert+0x5c>
    1b30:	f6 cf       	rjmp	.-20     	; 0x1b1e <__ultoa_invert+0x58>
    1b32:	46 2f       	mov	r20, r22
    1b34:	4f 70       	andi	r20, 0x0F	; 15
    1b36:	40 5d       	subi	r20, 0xD0	; 208
    1b38:	4a 33       	cpi	r20, 0x3A	; 58
    1b3a:	18 f0       	brcs	.+6      	; 0x1b42 <__ultoa_invert+0x7c>
    1b3c:	49 5d       	subi	r20, 0xD9	; 217
    1b3e:	31 fd       	sbrc	r19, 1
    1b40:	40 52       	subi	r20, 0x20	; 32
    1b42:	41 93       	st	Z+, r20
    1b44:	02 d0       	rcall	.+4      	; 0x1b4a <__ultoa_invert+0x84>
    1b46:	a9 f7       	brne	.-22     	; 0x1b32 <__ultoa_invert+0x6c>
    1b48:	ea cf       	rjmp	.-44     	; 0x1b1e <__ultoa_invert+0x58>
    1b4a:	b4 e0       	ldi	r27, 0x04	; 4
    1b4c:	a6 95       	lsr	r26
    1b4e:	97 95       	ror	r25
    1b50:	87 95       	ror	r24
    1b52:	77 95       	ror	r23
    1b54:	67 95       	ror	r22
    1b56:	ba 95       	dec	r27
    1b58:	c9 f7       	brne	.-14     	; 0x1b4c <__ultoa_invert+0x86>
    1b5a:	00 97       	sbiw	r24, 0x00	; 0
    1b5c:	61 05       	cpc	r22, r1
    1b5e:	71 05       	cpc	r23, r1
    1b60:	08 95       	ret
    1b62:	9b 01       	movw	r18, r22
    1b64:	ac 01       	movw	r20, r24
    1b66:	0a 2e       	mov	r0, r26
    1b68:	06 94       	lsr	r0
    1b6a:	57 95       	ror	r21
    1b6c:	47 95       	ror	r20
    1b6e:	37 95       	ror	r19
    1b70:	27 95       	ror	r18
    1b72:	ba 95       	dec	r27
    1b74:	c9 f7       	brne	.-14     	; 0x1b68 <__ultoa_invert+0xa2>
    1b76:	62 0f       	add	r22, r18
    1b78:	73 1f       	adc	r23, r19
    1b7a:	84 1f       	adc	r24, r20
    1b7c:	95 1f       	adc	r25, r21
    1b7e:	a0 1d       	adc	r26, r0
    1b80:	08 95       	ret

00001b82 <__prologue_saves__>:
    1b82:	2f 92       	push	r2
    1b84:	3f 92       	push	r3
    1b86:	4f 92       	push	r4
    1b88:	5f 92       	push	r5
    1b8a:	6f 92       	push	r6
    1b8c:	7f 92       	push	r7
    1b8e:	8f 92       	push	r8
    1b90:	9f 92       	push	r9
    1b92:	af 92       	push	r10
    1b94:	bf 92       	push	r11
    1b96:	cf 92       	push	r12
    1b98:	df 92       	push	r13
    1b9a:	ef 92       	push	r14
    1b9c:	ff 92       	push	r15
    1b9e:	0f 93       	push	r16
    1ba0:	1f 93       	push	r17
    1ba2:	cf 93       	push	r28
    1ba4:	df 93       	push	r29
    1ba6:	cd b7       	in	r28, 0x3d	; 61
    1ba8:	de b7       	in	r29, 0x3e	; 62
    1baa:	ca 1b       	sub	r28, r26
    1bac:	db 0b       	sbc	r29, r27
    1bae:	0f b6       	in	r0, 0x3f	; 63
    1bb0:	f8 94       	cli
    1bb2:	de bf       	out	0x3e, r29	; 62
    1bb4:	0f be       	out	0x3f, r0	; 63
    1bb6:	cd bf       	out	0x3d, r28	; 61
    1bb8:	09 94       	ijmp

00001bba <__epilogue_restores__>:
    1bba:	2a 88       	ldd	r2, Y+18	; 0x12
    1bbc:	39 88       	ldd	r3, Y+17	; 0x11
    1bbe:	48 88       	ldd	r4, Y+16	; 0x10
    1bc0:	5f 84       	ldd	r5, Y+15	; 0x0f
    1bc2:	6e 84       	ldd	r6, Y+14	; 0x0e
    1bc4:	7d 84       	ldd	r7, Y+13	; 0x0d
    1bc6:	8c 84       	ldd	r8, Y+12	; 0x0c
    1bc8:	9b 84       	ldd	r9, Y+11	; 0x0b
    1bca:	aa 84       	ldd	r10, Y+10	; 0x0a
    1bcc:	b9 84       	ldd	r11, Y+9	; 0x09
    1bce:	c8 84       	ldd	r12, Y+8	; 0x08
    1bd0:	df 80       	ldd	r13, Y+7	; 0x07
    1bd2:	ee 80       	ldd	r14, Y+6	; 0x06
    1bd4:	fd 80       	ldd	r15, Y+5	; 0x05
    1bd6:	0c 81       	ldd	r16, Y+4	; 0x04
    1bd8:	1b 81       	ldd	r17, Y+3	; 0x03
    1bda:	aa 81       	ldd	r26, Y+2	; 0x02
    1bdc:	b9 81       	ldd	r27, Y+1	; 0x01
    1bde:	ce 0f       	add	r28, r30
    1be0:	d1 1d       	adc	r29, r1
    1be2:	0f b6       	in	r0, 0x3f	; 63
    1be4:	f8 94       	cli
    1be6:	de bf       	out	0x3e, r29	; 62
    1be8:	0f be       	out	0x3f, r0	; 63
    1bea:	cd bf       	out	0x3d, r28	; 61
    1bec:	ed 01       	movw	r28, r26
    1bee:	08 95       	ret

00001bf0 <_exit>:
    1bf0:	f8 94       	cli

00001bf2 <__stop_program>:
    1bf2:	ff cf       	rjmp	.-2      	; 0x1bf2 <__stop_program>
